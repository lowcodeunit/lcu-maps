import { Injectable } from '@angular/core';
import { ActivatedRoute, Router, NavigationCancel, NavigationEnd, NavigationError, NavigationStart } from '@angular/router';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export class RouterHelpersService {
    // 	Constructors
    constructor(route, router) {
        this.route = route;
        this.router = router;
    }
    // 	API Methods
    RunOnNavigation(action, navEventType = null) {
        return this.router.events.subscribe((event) => {
            if (navEventType == null || event instanceof navEventType) {
                action(event);
            }
        });
    }
    RunOnNavigationCancel(action) {
        return this.RunOnNavigation(action, NavigationCancel);
    }
    RunOnNavigationEnd(action) {
        return this.RunOnNavigation(action, NavigationEnd);
    }
    RunOnNavigationError(action) {
        return this.RunOnNavigation(action, NavigationError);
    }
    RunOnNavigationStart(action) {
        return this.RunOnNavigation(action, NavigationStart);
    }
    RunOnQueryParam(param, action, checkVal = null) {
        return this.route.queryParams.subscribe((params) => {
            if ((checkVal == null && params[param] != null) || (checkVal != null && params[param] === checkVal)) {
                action(params);
            }
        });
    }
    RunOnRouteParam(param, action, checkVal = null) {
        return this.route.params.subscribe((params) => {
            if ((checkVal == null && params[param] != null) || (checkVal != null && params[param] === checkVal)) {
                action(params);
            }
        });
    }
}
RouterHelpersService.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: Router }
];
RouterHelpersService.ɵprov = i0.ɵɵdefineInjectable({ factory: function RouterHelpersService_Factory() { return new RouterHelpersService(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i1.Router)); }, token: RouterHelpersService, providedIn: "root" });
RouterHelpersService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
RouterHelpersService.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: Router }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWhlbHBlcnMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsY3UvY29tbW9uLyIsInNvdXJjZXMiOlsibGliL3JvdXRpbmcvcm91dGVyLWhlbHBlcnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLE1BQU0saUJBQWlCLENBQUM7OztBQUs1SCxNQUFNLE9BQU8sb0JBQW9CO0lBQy9CLGdCQUFnQjtJQUNoQixZQUFzQixLQUFxQixFQUFZLE1BQWM7UUFBL0MsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFBWSxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQUcsQ0FBQztJQUV6RSxlQUFlO0lBQ1IsZUFBZSxDQUFDLE1BQTRCLEVBQUUsZUFBb0IsSUFBSTtRQUMzRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQVUsRUFBRSxFQUFFO1lBQ2pELElBQUksWUFBWSxJQUFJLElBQUksSUFBSSxLQUFLLFlBQVksWUFBWSxFQUFFO2dCQUN6RCxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDZjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLHFCQUFxQixDQUFDLE1BQTRCO1FBQ3ZELE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRU0sa0JBQWtCLENBQUMsTUFBNEI7UUFDcEQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRU0sb0JBQW9CLENBQUMsTUFBNEI7UUFDdEQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxlQUFlLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRU0sb0JBQW9CLENBQUMsTUFBNEI7UUFDdEQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxlQUFlLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRU0sZUFBZSxDQUFDLEtBQWEsRUFBRSxNQUE2QixFQUFFLFdBQWdCLElBQUk7UUFDdkYsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFXLEVBQUUsRUFBRTtZQUN0RCxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxRQUFRLENBQUMsRUFBRTtnQkFDbkcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ2hCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sZUFBZSxDQUFDLEtBQWEsRUFBRSxNQUE2QixFQUFFLFdBQWdCLElBQUk7UUFDdkYsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFXLEVBQUUsRUFBRTtZQUNqRCxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxRQUFRLENBQUMsRUFBRTtnQkFDbkcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ2hCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUF6QzRCLGNBQWM7WUFBb0IsTUFBTTs7OztZQUx0RSxVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7OztZQUpRLGNBQWM7WUFBRSxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSwgUm91dGVyLCBOYXZpZ2F0aW9uQ2FuY2VsLCBOYXZpZ2F0aW9uRW5kLCBOYXZpZ2F0aW9uRXJyb3IsIE5hdmlnYXRpb25TdGFydCB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBSb3V0ZXJIZWxwZXJzU2VydmljZSB7XHJcbiAgLy8gXHRDb25zdHJ1Y3RvcnNcclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcm91dGU6IEFjdGl2YXRlZFJvdXRlLCBwcm90ZWN0ZWQgcm91dGVyOiBSb3V0ZXIpIHt9XHJcblxyXG4gIC8vIFx0QVBJIE1ldGhvZHNcclxuICBwdWJsaWMgUnVuT25OYXZpZ2F0aW9uKGFjdGlvbjogKGV2ZW50OiBhbnkpID0+IHZvaWQsIG5hdkV2ZW50VHlwZTogYW55ID0gbnVsbCkge1xyXG4gICAgcmV0dXJuIHRoaXMucm91dGVyLmV2ZW50cy5zdWJzY3JpYmUoKGV2ZW50OiBhbnkpID0+IHtcclxuICAgICAgaWYgKG5hdkV2ZW50VHlwZSA9PSBudWxsIHx8IGV2ZW50IGluc3RhbmNlb2YgbmF2RXZlbnRUeXBlKSB7XHJcbiAgICAgICAgYWN0aW9uKGV2ZW50KTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgUnVuT25OYXZpZ2F0aW9uQ2FuY2VsKGFjdGlvbjogKGV2ZW50OiBhbnkpID0+IHZvaWQpIHtcclxuICAgIHJldHVybiB0aGlzLlJ1bk9uTmF2aWdhdGlvbihhY3Rpb24sIE5hdmlnYXRpb25DYW5jZWwpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIFJ1bk9uTmF2aWdhdGlvbkVuZChhY3Rpb246IChldmVudDogYW55KSA9PiB2b2lkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5SdW5Pbk5hdmlnYXRpb24oYWN0aW9uLCBOYXZpZ2F0aW9uRW5kKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBSdW5Pbk5hdmlnYXRpb25FcnJvcihhY3Rpb246IChldmVudDogYW55KSA9PiB2b2lkKSB7XHJcbiAgICByZXR1cm4gdGhpcy5SdW5Pbk5hdmlnYXRpb24oYWN0aW9uLCBOYXZpZ2F0aW9uRXJyb3IpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIFJ1bk9uTmF2aWdhdGlvblN0YXJ0KGFjdGlvbjogKGV2ZW50OiBhbnkpID0+IHZvaWQpIHtcclxuICAgIHJldHVybiB0aGlzLlJ1bk9uTmF2aWdhdGlvbihhY3Rpb24sIE5hdmlnYXRpb25TdGFydCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgUnVuT25RdWVyeVBhcmFtKHBhcmFtOiBzdHJpbmcsIGFjdGlvbjogKHBhcmFtczogYW55KSA9PiB2b2lkLCBjaGVja1ZhbDogYW55ID0gbnVsbCkge1xyXG4gICAgcmV0dXJuIHRoaXMucm91dGUucXVlcnlQYXJhbXMuc3Vic2NyaWJlKChwYXJhbXM6IGFueSkgPT4ge1xyXG4gICAgICBpZiAoKGNoZWNrVmFsID09IG51bGwgJiYgcGFyYW1zW3BhcmFtXSAhPSBudWxsKSB8fCAoY2hlY2tWYWwgIT0gbnVsbCAmJiBwYXJhbXNbcGFyYW1dID09PSBjaGVja1ZhbCkpIHtcclxuICAgICAgICBhY3Rpb24ocGFyYW1zKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgUnVuT25Sb3V0ZVBhcmFtKHBhcmFtOiBzdHJpbmcsIGFjdGlvbjogKHBhcmFtczogYW55KSA9PiB2b2lkLCBjaGVja1ZhbDogYW55ID0gbnVsbCkge1xyXG4gICAgcmV0dXJuIHRoaXMucm91dGUucGFyYW1zLnN1YnNjcmliZSgocGFyYW1zOiBhbnkpID0+IHtcclxuICAgICAgaWYgKChjaGVja1ZhbCA9PSBudWxsICYmIHBhcmFtc1twYXJhbV0gIT0gbnVsbCkgfHwgKGNoZWNrVmFsICE9IG51bGwgJiYgcGFyYW1zW3BhcmFtXSA9PT0gY2hlY2tWYWwpKSB7XHJcbiAgICAgICAgYWN0aW9uKHBhcmFtcyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=