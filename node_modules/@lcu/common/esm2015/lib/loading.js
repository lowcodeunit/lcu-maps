import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
let Loading = class Loading {
    // 	Constructors
    constructor() {
        this.Clear();
    }
    // 	Properties
    get Value() {
        return this.loaders && this.loaders.length > 0 && this.loaders.every(loader => loader);
    }
    // 	API Methods
    Clear() {
        this.loaders = [];
    }
    Set(loading) {
        if (loading) {
            this.loaders.push(loading);
        }
        else if (this.loaders && this.loaders.length > 0) {
            this.loaders.splice(0, 1);
        }
    }
};
Loading.ɵprov = i0.ɵɵdefineInjectable({ factory: function Loading_Factory() { return new Loading(); }, token: Loading, providedIn: "root" });
Loading = __decorate([
    Injectable({
        providedIn: 'root'
    }),
    __metadata("design:paramtypes", [])
], Loading);
export { Loading };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsY3UvY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2xvYWRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSzNDLElBQWEsT0FBTyxHQUFwQixNQUFhLE9BQU87SUFTbEIsZ0JBQWdCO0lBQ2hCO1FBQ0UsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2YsQ0FBQztJQVJELGNBQWM7SUFDZCxJQUFXLEtBQUs7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekYsQ0FBQztJQU9ELGVBQWU7SUFDUixLQUFLO1FBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQUVNLEdBQUcsQ0FBQyxPQUFnQjtRQUN6QixJQUFJLE9BQU8sRUFBRTtZQUNYLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO2FBQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNsRCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDO0NBR0YsQ0FBQTs7QUE1QlksT0FBTztJQUhuQixVQUFVLENBQUM7UUFDVixVQUFVLEVBQUUsTUFBTTtLQUNuQixDQUFDOztHQUNXLE9BQU8sQ0E0Qm5CO1NBNUJZLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ASW5qZWN0YWJsZSh7XHJcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMb2FkaW5nIHtcclxuICAvLyBcdEZpZWxkc1xyXG4gIHByb3RlY3RlZCBsb2FkZXJzOiBib29sZWFuW107XHJcblxyXG4gIC8vIFx0UHJvcGVydGllc1xyXG4gIHB1YmxpYyBnZXQgVmFsdWUoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5sb2FkZXJzICYmIHRoaXMubG9hZGVycy5sZW5ndGggPiAwICYmIHRoaXMubG9hZGVycy5ldmVyeShsb2FkZXIgPT4gbG9hZGVyKTtcclxuICB9XHJcblxyXG4gIC8vIFx0Q29uc3RydWN0b3JzXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLkNsZWFyKCk7XHJcbiAgfVxyXG5cclxuICAvLyBcdEFQSSBNZXRob2RzXHJcbiAgcHVibGljIENsZWFyKCkge1xyXG4gICAgdGhpcy5sb2FkZXJzID0gW107XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgU2V0KGxvYWRpbmc6IGJvb2xlYW4pIHtcclxuICAgIGlmIChsb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMubG9hZGVycy5wdXNoKGxvYWRpbmcpO1xyXG4gICAgfSBlbHNlIGlmICh0aGlzLmxvYWRlcnMgJiYgdGhpcy5sb2FkZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5sb2FkZXJzLnNwbGljZSgwLCAxKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFx0SGVscGVyc1xyXG59XHJcbiJdfQ==