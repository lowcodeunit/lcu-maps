import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class Loading {
    // 	Constructors
    constructor() {
        this.Clear();
    }
    // 	Properties
    get Value() {
        return this.loaders && this.loaders.length > 0 && this.loaders.every(loader => loader);
    }
    // 	API Methods
    Clear() {
        this.loaders = [];
    }
    Set(loading) {
        if (loading) {
            this.loaders.push(loading);
        }
        else if (this.loaders && this.loaders.length > 0) {
            this.loaders.splice(0, 1);
        }
    }
}
Loading.ɵprov = i0.ɵɵdefineInjectable({ factory: function Loading_Factory() { return new Loading(); }, token: Loading, providedIn: "root" });
Loading.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
Loading.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsY3UvY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2xvYWRpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFLM0MsTUFBTSxPQUFPLE9BQU87SUFTbEIsZ0JBQWdCO0lBQ2hCO1FBQ0UsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2YsQ0FBQztJQVJELGNBQWM7SUFDZCxJQUFXLEtBQUs7UUFDZCxPQUFPLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDekYsQ0FBQztJQU9ELGVBQWU7SUFDUixLQUFLO1FBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQUVNLEdBQUcsQ0FBQyxPQUFnQjtRQUN6QixJQUFJLE9BQU8sRUFBRTtZQUNYLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO2FBQU0sSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNsRCxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDOzs7O1lBNUJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIExvYWRpbmcge1xyXG4gIC8vIFx0RmllbGRzXHJcbiAgcHJvdGVjdGVkIGxvYWRlcnM6IGJvb2xlYW5bXTtcclxuXHJcbiAgLy8gXHRQcm9wZXJ0aWVzXHJcbiAgcHVibGljIGdldCBWYWx1ZSgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLmxvYWRlcnMgJiYgdGhpcy5sb2FkZXJzLmxlbmd0aCA+IDAgJiYgdGhpcy5sb2FkZXJzLmV2ZXJ5KGxvYWRlciA9PiBsb2FkZXIpO1xyXG4gIH1cclxuXHJcbiAgLy8gXHRDb25zdHJ1Y3RvcnNcclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIHRoaXMuQ2xlYXIoKTtcclxuICB9XHJcblxyXG4gIC8vIFx0QVBJIE1ldGhvZHNcclxuICBwdWJsaWMgQ2xlYXIoKSB7XHJcbiAgICB0aGlzLmxvYWRlcnMgPSBbXTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBTZXQobG9hZGluZzogYm9vbGVhbikge1xyXG4gICAgaWYgKGxvYWRpbmcpIHtcclxuICAgICAgdGhpcy5sb2FkZXJzLnB1c2gobG9hZGluZyk7XHJcbiAgICB9IGVsc2UgaWYgKHRoaXMubG9hZGVycyAmJiB0aGlzLmxvYWRlcnMubGVuZ3RoID4gMCkge1xyXG4gICAgICB0aGlzLmxvYWRlcnMuc3BsaWNlKDAsIDEpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gXHRIZWxwZXJzXHJcbn1cclxuIl19