export class Guid {
    // 	Constructors
    constructor(guid) {
        if (!guid) {
            throw new TypeError('Invalid argument; `value` has no value.');
        }
        this.value = Guid.Empty;
        if (guid && Guid.IsGuid(guid)) {
            this.value = guid;
        }
    }
    // 	API Methods
    static Create() {
        return Guid.Parse(Guid.CreateRaw());
    }
    static CreateEmpty() {
        return Guid.Parse('emptyguid');
    }
    static CreateRaw() {
        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join('-');
    }
    static IsGuid(guid) {
        const value = guid.toString();
        return guid && (guid instanceof Guid || Guid.GuidValidator.test(value));
    }
    static Parse(guid) {
        return new Guid(guid);
    }
    // 	Helpers
    static gen(count) {
        let out = '';
        for (let i = 0; i < count; i++) {
            // tslint:disable-next-line:no-bitwise
            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return out;
    }
    Equals(other) {
        return Guid.IsGuid(other) && this.value === other.toString();
    }
    IsEmpty() {
        return this.value === Guid.Empty;
    }
    ToJSON() {
        return {
            Value: this.value
        };
    }
    ToString() {
        return this.value;
    }
}
// 	Properties
Guid.GuidValidator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');
Guid.Empty = '00000000-0000-0000-0000-000000000000';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3VpZC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsY3UvY29tbW9uLyIsInNvdXJjZXMiOlsibGliL2d1aWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxPQUFPLElBQUk7SUFDZixnQkFBZ0I7SUFDaEIsWUFBb0IsSUFBWTtRQUM5QixJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1QsTUFBTSxJQUFJLFNBQVMsQ0FBQyx5Q0FBeUMsQ0FBQyxDQUFDO1NBQ2hFO1FBRUQsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBRXhCLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7SUFDSCxDQUFDO0lBU0QsZUFBZTtJQUNSLE1BQU0sQ0FBQyxNQUFNO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRU0sTUFBTSxDQUFDLFdBQVc7UUFDdkIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFTSxNQUFNLENBQUMsU0FBUztRQUNyQixPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JGLENBQUM7SUFFTSxNQUFNLENBQUMsTUFBTSxDQUFDLElBQVM7UUFDNUIsTUFBTSxLQUFLLEdBQVcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRXRDLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxZQUFZLElBQUksSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzFFLENBQUM7SUFFTSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQVk7UUFDOUIsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRUQsV0FBVztJQUNILE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBYTtRQUM5QixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUM7UUFDYixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzlCLHNDQUFzQztZQUN0QyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDeEU7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7SUFFTSxNQUFNLENBQUMsS0FBVztRQUN2QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDL0QsQ0FBQztJQUVNLE9BQU87UUFDWixPQUFPLElBQUksQ0FBQyxLQUFLLEtBQUssSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNuQyxDQUFDO0lBRU0sTUFBTTtRQUNYLE9BQU87WUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7U0FDbEIsQ0FBQztJQUNKLENBQUM7SUFFTSxRQUFRO1FBQ2IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7O0FBeERELGNBQWM7QUFDQSxrQkFBYSxHQUFHLElBQUksTUFBTSxDQUFDLGdFQUFnRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBRWxHLFVBQUssR0FBRyxzQ0FBc0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBHdWlkIHtcclxuICAvLyBcdENvbnN0cnVjdG9yc1xyXG4gIHByaXZhdGUgY29uc3RydWN0b3IoZ3VpZDogc3RyaW5nKSB7XHJcbiAgICBpZiAoIWd1aWQpIHtcclxuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBhcmd1bWVudDsgYHZhbHVlYCBoYXMgbm8gdmFsdWUuJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy52YWx1ZSA9IEd1aWQuRW1wdHk7XHJcblxyXG4gICAgaWYgKGd1aWQgJiYgR3VpZC5Jc0d1aWQoZ3VpZCkpIHtcclxuICAgICAgdGhpcy52YWx1ZSA9IGd1aWQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBcdFByb3BlcnRpZXNcclxuICBwdWJsaWMgc3RhdGljIEd1aWRWYWxpZGF0b3IgPSBuZXcgUmVnRXhwKCdeW2EtejAtOV17OH0tW2EtejAtOV17NH0tW2EtejAtOV17NH0tW2EtejAtOV17NH0tW2EtejAtOV17MTJ9JCcsICdpJyk7XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgRW1wdHkgPSAnMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwJztcclxuICAvLyBcdEZpZWxkc1xyXG4gIHByb3RlY3RlZCB2YWx1ZTogc3RyaW5nO1xyXG5cclxuICAvLyBcdEFQSSBNZXRob2RzXHJcbiAgcHVibGljIHN0YXRpYyBDcmVhdGUoKTogR3VpZCB7XHJcbiAgICByZXR1cm4gR3VpZC5QYXJzZShHdWlkLkNyZWF0ZVJhdygpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgQ3JlYXRlRW1wdHkoKTogR3VpZCB7XHJcbiAgICByZXR1cm4gR3VpZC5QYXJzZSgnZW1wdHlndWlkJyk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgc3RhdGljIENyZWF0ZVJhdygpOiBzdHJpbmcge1xyXG4gICAgcmV0dXJuIFtHdWlkLmdlbigyKSwgR3VpZC5nZW4oMSksIEd1aWQuZ2VuKDEpLCBHdWlkLmdlbigxKSwgR3VpZC5nZW4oMyldLmpvaW4oJy0nKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgSXNHdWlkKGd1aWQ6IGFueSkge1xyXG4gICAgY29uc3QgdmFsdWU6IHN0cmluZyA9IGd1aWQudG9TdHJpbmcoKTtcclxuXHJcbiAgICByZXR1cm4gZ3VpZCAmJiAoZ3VpZCBpbnN0YW5jZW9mIEd1aWQgfHwgR3VpZC5HdWlkVmFsaWRhdG9yLnRlc3QodmFsdWUpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzdGF0aWMgUGFyc2UoZ3VpZDogc3RyaW5nKTogR3VpZCB7XHJcbiAgICByZXR1cm4gbmV3IEd1aWQoZ3VpZCk7XHJcbiAgfVxyXG5cclxuICAvLyBcdEhlbHBlcnNcclxuICBwcml2YXRlIHN0YXRpYyBnZW4oY291bnQ6IG51bWJlcikge1xyXG4gICAgbGV0IG91dCA9ICcnO1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XHJcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1iaXR3aXNlXHJcbiAgICAgIG91dCArPSAoKCgxICsgTWF0aC5yYW5kb20oKSkgKiAweDEwMDAwKSB8IDApLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gb3V0O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIEVxdWFscyhvdGhlcjogR3VpZCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIEd1aWQuSXNHdWlkKG90aGVyKSAmJiB0aGlzLnZhbHVlID09PSBvdGhlci50b1N0cmluZygpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIElzRW1wdHkoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy52YWx1ZSA9PT0gR3VpZC5FbXB0eTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBUb0pTT04oKTogYW55IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIFZhbHVlOiB0aGlzLnZhbHVlXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIFRvU3RyaW5nKCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gdGhpcy52YWx1ZTtcclxuICB9XHJcbn1cclxuIl19