import { __decorate, __metadata } from "tslib";
// https://ajonp.com/courses/angularmaterial/angular-material-theming/
import { OverlayContainer } from '@angular/cdk/overlay';
import { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/cdk/overlay";
let ThemeColorPickerService = class ThemeColorPickerService {
    constructor(overlayContainer) {
        this.overlayContainer = overlayContainer;
        this.initialClass = 'fathym-contrast-theme';
        this.colorClass = new BehaviorSubject(this.initialClass);
        const storageClass = localStorage.getItem('theme-picker');
        console.log('color picker service', storageClass);
        if (storageClass) {
            overlayContainer.getContainerElement().classList.add(storageClass);
            this.colorClass.next(storageClass);
        }
        else {
            overlayContainer.getContainerElement().classList.add(this.initialClass);
        }
    }
    GetColorClass() {
        return this.colorClass;
    }
    SetColorClass(className) {
        this.overlayContainer.getContainerElement().classList.forEach(css => {
            if (css !== 'cdk-overlay-container') {
                this.overlayContainer.getContainerElement().classList.remove(css);
            }
        });
        this.overlayContainer.getContainerElement().classList.add(className);
        this.colorClass.next(className);
        localStorage.setItem('theme-picker', className);
    }
};
ThemeColorPickerService.ctorParameters = () => [
    { type: OverlayContainer }
];
ThemeColorPickerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ThemeColorPickerService_Factory() { return new ThemeColorPickerService(i0.ɵɵinject(i1.OverlayContainer)); }, token: ThemeColorPickerService, providedIn: "root" });
ThemeColorPickerService = __decorate([
    Injectable({
        providedIn: 'root'
    }),
    __metadata("design:paramtypes", [OverlayContainer])
], ThemeColorPickerService);
export { ThemeColorPickerService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtY29sb3ItcGlja2VyLnV0aWxzLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxjdS9jb21tb24vIiwic291cmNlcyI6WyJsaWIvc2VydmljZXMvdGhlbWluZy90aGVtZS1jb2xvci1waWNrZXIudXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLHNFQUFzRTtBQUV0RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDaEUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBTTNDLElBQWEsdUJBQXVCLEdBQXBDLE1BQWEsdUJBQXVCO0lBS2hDLFlBQXNCLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBRXBELElBQUksQ0FBQyxZQUFZLEdBQUcsdUJBQXVCLENBQUM7UUFDNUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFekQsTUFBTSxZQUFZLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMxRCxPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ2xELElBQUksWUFBWSxFQUFFO1lBQ2QsZ0JBQWdCLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ25FLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ3RDO2FBQU07WUFDSCxnQkFBZ0IsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQzNFO0lBQ0wsQ0FBQztJQUVNLGFBQWE7UUFDaEIsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7SUFFTSxhQUFhLENBQUMsU0FBaUI7UUFDbEMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixFQUFFLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNsRSxJQUFJLEdBQUcsS0FBSyx1QkFBdUIsRUFBRTtnQkFDbkMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixFQUFFLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNuRTtRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsSUFBSSxDQUFDLGdCQUFnQixDQUFDLG1CQUFtQixFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNyRSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNoQyxZQUFZLENBQUMsT0FBTyxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0osQ0FBQTs7WUE5QjJDLGdCQUFnQjs7O0FBTC9DLHVCQUF1QjtJQUpuQyxVQUFVLENBQUM7UUFDUixVQUFVLEVBQUUsTUFBTTtLQUNyQixDQUFDO3FDQU8wQyxnQkFBZ0I7R0FML0MsdUJBQXVCLENBbUNuQztTQW5DWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2Fqb25wLmNvbS9jb3Vyc2VzL2FuZ3VsYXJtYXRlcmlhbC9hbmd1bGFyLW1hdGVyaWFsLXRoZW1pbmcvXHJcblxyXG5pbXBvcnQgeyBPdmVybGF5Q29udGFpbmVyIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xyXG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QgfSBmcm9tICdyeGpzL2ludGVybmFsL0JlaGF2aW9yU3ViamVjdCc7XHJcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICAgIHByb3ZpZGVkSW46ICdyb290J1xyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFRoZW1lQ29sb3JQaWNrZXJTZXJ2aWNlIHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgY29sb3JDbGFzczogQmVoYXZpb3JTdWJqZWN0PHN0cmluZz47XHJcbiAgICBwcm90ZWN0ZWQgaW5pdGlhbENsYXNzOiBzdHJpbmc7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIG92ZXJsYXlDb250YWluZXI6IE92ZXJsYXlDb250YWluZXIpIHtcclxuXHJcbiAgICAgICAgdGhpcy5pbml0aWFsQ2xhc3MgPSAnZmF0aHltLWNvbnRyYXN0LXRoZW1lJztcclxuICAgICAgICB0aGlzLmNvbG9yQ2xhc3MgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KHRoaXMuaW5pdGlhbENsYXNzKTtcclxuXHJcbiAgICAgICAgY29uc3Qgc3RvcmFnZUNsYXNzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RoZW1lLXBpY2tlcicpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdjb2xvciBwaWNrZXIgc2VydmljZScsIHN0b3JhZ2VDbGFzcyk7XHJcbiAgICAgICAgaWYgKHN0b3JhZ2VDbGFzcykge1xyXG4gICAgICAgICAgICBvdmVybGF5Q29udGFpbmVyLmdldENvbnRhaW5lckVsZW1lbnQoKS5jbGFzc0xpc3QuYWRkKHN0b3JhZ2VDbGFzcyk7XHJcbiAgICAgICAgICAgIHRoaXMuY29sb3JDbGFzcy5uZXh0KHN0b3JhZ2VDbGFzcyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgb3ZlcmxheUNvbnRhaW5lci5nZXRDb250YWluZXJFbGVtZW50KCkuY2xhc3NMaXN0LmFkZCh0aGlzLmluaXRpYWxDbGFzcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBHZXRDb2xvckNsYXNzKCk6IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb2xvckNsYXNzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBTZXRDb2xvckNsYXNzKGNsYXNzTmFtZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5vdmVybGF5Q29udGFpbmVyLmdldENvbnRhaW5lckVsZW1lbnQoKS5jbGFzc0xpc3QuZm9yRWFjaChjc3MgPT4ge1xyXG4gICAgICAgICAgaWYgKGNzcyAhPT0gJ2Nkay1vdmVybGF5LWNvbnRhaW5lcicpIHtcclxuICAgICAgICAgICAgdGhpcy5vdmVybGF5Q29udGFpbmVyLmdldENvbnRhaW5lckVsZW1lbnQoKS5jbGFzc0xpc3QucmVtb3ZlKGNzcyk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMub3ZlcmxheUNvbnRhaW5lci5nZXRDb250YWluZXJFbGVtZW50KCkuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xyXG4gICAgICAgIHRoaXMuY29sb3JDbGFzcy5uZXh0KGNsYXNzTmFtZSk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3RoZW1lLXBpY2tlcicsIGNsYXNzTmFtZSk7XHJcbiAgICB9XHJcbn1cclxuIl19