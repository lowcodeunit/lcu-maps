import { __decorate, __metadata } from "tslib";
import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';
/**
 * Directive for setting theme color to a element, color comes from
 * a local stylesheet
 *
 * @use as an attribute: lcuColor="primary-A700", sets the class
 * .primary-A700 {} to the host element
 */
/**
 * SCSS class types
 */
// type ColorClasses = 'primary-500' | 'accent-500' | 'warn-500';
var ThemeColorDirective = /** @class */ (function () {
    function ThemeColorDirective(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    Object.defineProperty(ThemeColorDirective.prototype, "lcuThemeColor", {
        /**
         * Set the current theme class to the element
         */
        set: function (val) {
            // this.renderer.removeClass(this.element.nativeElement, `${val}`);
            this.renderer.addClass(this.element.nativeElement, "" + val);
            // this.readProperty('background-color');
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get the value of a specific style property
     *
     * @param property style property
     */
    ThemeColorDirective.prototype.readProperty = function (property) {
        console.log('element', window.getComputedStyle(this.element.nativeElement).getPropertyValue(property));
        // console.log('element', window.getComputedStyle(this.element.nativeElement));
    };
    ThemeColorDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], ThemeColorDirective.prototype, "lcuThemeColor", null);
    ThemeColorDirective = __decorate([
        Directive({
            selector: '[lcuThemeColor]'
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2])
    ], ThemeColorDirective);
    return ThemeColorDirective;
}());
export { ThemeColorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtY29sb3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxjdS9jb21tb24vIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy90aGVtZXMvdGhlbWUtY29sb3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBR3hFOzs7Ozs7R0FNRztBQUVIOztHQUVHO0FBQ0gsaUVBQWlFO0FBTWpFO0lBYUUsNkJBQ1ksT0FBbUIsRUFDbkIsUUFBbUI7UUFEbkIsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUNuQixhQUFRLEdBQVIsUUFBUSxDQUFXO0lBQzNCLENBQUM7SUFYSSxzQkFBSSw4Q0FBYTtRQUg1Qjs7V0FFRzthQUNRLFVBQWtCLEdBQVc7WUFFcEMsbUVBQW1FO1lBQ25FLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLEtBQUcsR0FBSyxDQUFDLENBQUM7WUFFN0QseUNBQXlDO1FBQzNDLENBQUM7OztPQUFBO0lBT0Q7Ozs7T0FJRztJQUNPLDBDQUFZLEdBQXRCLFVBQXVCLFFBQWdCO1FBQ3JDLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDdkcsK0VBQStFO0lBQ2pGLENBQUM7O2dCQVpvQixVQUFVO2dCQUNULFNBQVM7O0lBVnRCO1FBQVIsS0FBSyxFQUFFOzs7NERBTVA7SUFYVSxtQkFBbUI7UUFKL0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGlCQUFpQjtTQUM1QixDQUFDO3lDQWdCcUIsVUFBVTtZQUNULFNBQVM7T0FmcEIsbUJBQW1CLENBMkIvQjtJQUFELDBCQUFDO0NBQUEsQUEzQkQsSUEyQkM7U0EzQlksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRoZW1lUGFsZXR0ZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIERpcmVjdGl2ZSBmb3Igc2V0dGluZyB0aGVtZSBjb2xvciB0byBhIGVsZW1lbnQsIGNvbG9yIGNvbWVzIGZyb21cclxuICogYSBsb2NhbCBzdHlsZXNoZWV0XHJcbiAqXHJcbiAqIEB1c2UgYXMgYW4gYXR0cmlidXRlOiBsY3VDb2xvcj1cInByaW1hcnktQTcwMFwiLCBzZXRzIHRoZSBjbGFzc1xyXG4gKiAucHJpbWFyeS1BNzAwIHt9IHRvIHRoZSBob3N0IGVsZW1lbnRcclxuICovXHJcblxyXG4vKipcclxuICogU0NTUyBjbGFzcyB0eXBlc1xyXG4gKi9cclxuLy8gdHlwZSBDb2xvckNsYXNzZXMgPSAncHJpbWFyeS01MDAnIHwgJ2FjY2VudC01MDAnIHwgJ3dhcm4tNTAwJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2xjdVRoZW1lQ29sb3JdJ1xyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFRoZW1lQ29sb3JEaXJlY3RpdmUge1xyXG5cclxuLyoqXHJcbiAqIFNldCB0aGUgY3VycmVudCB0aGVtZSBjbGFzcyB0byB0aGUgZWxlbWVudFxyXG4gKi9cclxuICBASW5wdXQoKSBzZXQgbGN1VGhlbWVDb2xvcih2YWw6IHN0cmluZykge1xyXG5cclxuICAgIC8vIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIGAke3ZhbH1gKTtcclxuICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQsIGAke3ZhbH1gKTtcclxuXHJcbiAgICAvLyB0aGlzLnJlYWRQcm9wZXJ0eSgnYmFja2dyb3VuZC1jb2xvcicpO1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBwcm90ZWN0ZWQgZWxlbWVudDogRWxlbWVudFJlZixcclxuICAgIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyXHJcbiAgKSB7IH1cclxuXHJcbiAgLyoqXHJcbiAgICogR2V0IHRoZSB2YWx1ZSBvZiBhIHNwZWNpZmljIHN0eWxlIHByb3BlcnR5XHJcbiAgICpcclxuICAgKiBAcGFyYW0gcHJvcGVydHkgc3R5bGUgcHJvcGVydHlcclxuICAgKi9cclxuICBwcm90ZWN0ZWQgcmVhZFByb3BlcnR5KHByb3BlcnR5OiBzdHJpbmcpOiB2b2lkIHtcclxuICAgIGNvbnNvbGUubG9nKCdlbGVtZW50Jywgd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHkpKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKCdlbGVtZW50Jywgd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpKTtcclxuICB9XHJcbn1cclxuIl19