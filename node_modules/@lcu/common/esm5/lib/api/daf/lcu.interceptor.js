var LCUInterceptor = /** @class */ (function () {
    //  Constuctors
    function LCUInterceptor(settings) {
        this.settings = settings;
    }
    //  API Methods
    LCUInterceptor.prototype.intercept = function (req, next) {
        var clonedRequest = req.clone({
            headers: req.headers
                .set('lcu-app-id', this.settings.AppConfig.ID)
                .set('lcu-app-ent-api-key', this.settings.AppConfig.EnterpriseAPIKey)
                .set('lcu-environment', this.settings.StateConfig.Environment || '')
                .set('lcu-username-mock', this.settings.StateConfig.UsernameMock || '')
        });
        // Pass the cloned request instead of the original request to the next handle
        return next.handle(clonedRequest);
    };
    return LCUInterceptor;
}());
export { LCUInterceptor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGN1LmludGVyY2VwdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxjdS9jb21tb24vIiwic291cmNlcyI6WyJsaWIvYXBpL2RhZi9sY3UuaW50ZXJjZXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUE7SUFDRSxlQUFlO0lBQ2Ysd0JBQXNCLFFBQTRCO1FBQTVCLGFBQVEsR0FBUixRQUFRLENBQW9CO0lBQUcsQ0FBQztJQUV0RCxlQUFlO0lBQ1Isa0NBQVMsR0FBaEIsVUFBaUIsR0FBcUIsRUFBRSxJQUFpQjtRQUN2RCxJQUFNLGFBQWEsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQzlCLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTztpQkFDakIsR0FBRyxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUM7aUJBQzdDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQztpQkFDcEUsR0FBRyxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUM7aUJBQ25FLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxZQUFZLElBQUksRUFBRSxDQUFDO1NBQzFFLENBQUMsQ0FBQztRQUVILDZFQUE2RTtRQUM3RSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUNILHFCQUFDO0FBQUQsQ0FBQyxBQWpCRCxJQWlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBFdmVudCwgSHR0cEludGVyY2VwdG9yLCBIdHRwSGFuZGxlciwgSHR0cFJlcXVlc3QgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgTENVU2VydmljZVNldHRpbmdzIH0gZnJvbSAnLi4vbGN1LXNlcnZpY2Utc2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGNsYXNzIExDVUludGVyY2VwdG9yIGltcGxlbWVudHMgSHR0cEludGVyY2VwdG9yIHtcclxuICAvLyAgQ29uc3R1Y3RvcnNcclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgc2V0dGluZ3M6IExDVVNlcnZpY2VTZXR0aW5ncykge31cclxuXHJcbiAgLy8gIEFQSSBNZXRob2RzXHJcbiAgcHVibGljIGludGVyY2VwdChyZXE6IEh0dHBSZXF1ZXN0PGFueT4sIG5leHQ6IEh0dHBIYW5kbGVyKTogT2JzZXJ2YWJsZTxIdHRwRXZlbnQ8YW55Pj4ge1xyXG4gICAgY29uc3QgY2xvbmVkUmVxdWVzdCA9IHJlcS5jbG9uZSh7XHJcbiAgICAgIGhlYWRlcnM6IHJlcS5oZWFkZXJzXHJcbiAgICAgICAgLnNldCgnbGN1LWFwcC1pZCcsIHRoaXMuc2V0dGluZ3MuQXBwQ29uZmlnLklEKVxyXG4gICAgICAgIC5zZXQoJ2xjdS1hcHAtZW50LWFwaS1rZXknLCB0aGlzLnNldHRpbmdzLkFwcENvbmZpZy5FbnRlcnByaXNlQVBJS2V5KVxyXG4gICAgICAgIC5zZXQoJ2xjdS1lbnZpcm9ubWVudCcsIHRoaXMuc2V0dGluZ3MuU3RhdGVDb25maWcuRW52aXJvbm1lbnQgfHwgJycpXHJcbiAgICAgICAgLnNldCgnbGN1LXVzZXJuYW1lLW1vY2snLCB0aGlzLnNldHRpbmdzLlN0YXRlQ29uZmlnLlVzZXJuYW1lTW9jayB8fCAnJylcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFBhc3MgdGhlIGNsb25lZCByZXF1ZXN0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIHJlcXVlc3QgdG8gdGhlIG5leHQgaGFuZGxlXHJcbiAgICByZXR1cm4gbmV4dC5oYW5kbGUoY2xvbmVkUmVxdWVzdCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==