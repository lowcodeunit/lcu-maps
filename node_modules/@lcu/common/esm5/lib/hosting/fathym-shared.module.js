import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
import { LCUInterceptor } from '../api/daf/lcu.interceptor';
import { RealTimeService } from '../api/real-time/real-time.service';
import { LCUServiceSettings } from '../api/lcu-service-settings';
import { SafePipe } from '../pipes/safe-pipe';
export var winAny = window;
var FathymSharedModule = /** @class */ (function () {
    function FathymSharedModule() {
    }
    FathymSharedModule_1 = FathymSharedModule;
    //  Fields
    //  API Methods
    FathymSharedModule.DefaultServiceSettings = function (env, apiRoot) {
        return {
            APIRoot: winAny.LCU && winAny.LCU.APIRoot ? winAny.LCU.APIRoot : '',
            AppConfig: {
                ID: winAny.LCU && winAny.LCU.Application && winAny.LCU.Application.ID ? winAny.LCU.Application.ID : 'test-app',
                EnterpriseAPIKey: winAny.LCU && winAny.LCU.Application.EnterpriseAPIKey ? winAny.LCU.Application.EnterpriseAPIKey : 'test-app'
            },
            StateConfig: {
                Environment: winAny.LCU.State ? winAny.LCU.State.Environment : '',
                ActionRoot: winAny.LCU.State ? winAny.LCU.State.Root : '',
                Root: winAny.LCU.State ? winAny.LCU.State.Root : '',
                UsernameMock: winAny.LCU.State ? winAny.LCU.State.UsernameMock : ''
            },
            Settings: winAny.LCU.Settings
        };
    };
    FathymSharedModule.forRoot = function () {
        return {
            ngModule: FathymSharedModule_1,
            providers: [
                RealTimeService,
                {
                    provide: HTTP_INTERCEPTORS,
                    useClass: LCUInterceptor,
                    multi: true,
                    deps: [LCUServiceSettings]
                }
            ]
        };
    };
    var FathymSharedModule_1;
    FathymSharedModule = FathymSharedModule_1 = __decorate([
        NgModule({
            declarations: [SafePipe],
            imports: [CommonModule, FormsModule, HttpClientModule, RouterModule],
            exports: [CommonModule, FormsModule, HttpClientModule, RouterModule, SafePipe],
            providers: [],
            entryComponents: []
        })
    ], FathymSharedModule);
    return FathymSharedModule;
}());
export { FathymSharedModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmF0aHltLXNoYXJlZC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbGN1L2NvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9ob3N0aW5nL2ZhdGh5bS1zaGFyZWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBdUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFM0UsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFOUMsTUFBTSxDQUFDLElBQU0sTUFBTSxHQUFRLE1BQU0sQ0FBQztBQVNsQztJQUFBO0lBb0NBLENBQUM7MkJBcENZLGtCQUFrQjtJQUM3QixVQUFVO0lBRVYsZUFBZTtJQUNSLHlDQUFzQixHQUE3QixVQUE4QixHQUE0QixFQUFFLE9BQWdCO1FBQzFFLE9BQTJCO1lBQ3pCLE9BQU8sRUFBRSxNQUFNLENBQUMsR0FBRyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNuRSxTQUFTLEVBQUU7Z0JBQ1QsRUFBRSxFQUFFLE1BQU0sQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFVBQVU7Z0JBQzlHLGdCQUFnQixFQUNkLE1BQU0sQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxVQUFVO2FBQy9HO1lBQ0QsV0FBVyxFQUFFO2dCQUNYLFdBQVcsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUNqRSxVQUFVLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDekQsSUFBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ25ELFlBQVksRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFO2FBQ3BFO1lBQ0QsUUFBUSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUTtTQUM5QixDQUFDO0lBQ0osQ0FBQztJQUVNLDBCQUFPLEdBQWQ7UUFDRSxPQUFPO1lBQ0wsUUFBUSxFQUFFLG9CQUFrQjtZQUM1QixTQUFTLEVBQUU7Z0JBQ1QsZUFBZTtnQkFDZjtvQkFDRSxPQUFPLEVBQUUsaUJBQWlCO29CQUMxQixRQUFRLEVBQUUsY0FBYztvQkFDeEIsS0FBSyxFQUFFLElBQUk7b0JBQ1gsSUFBSSxFQUFFLENBQUMsa0JBQWtCLENBQUM7aUJBQzNCO2FBQ0Y7U0FDRixDQUFDO0lBQ0osQ0FBQzs7SUFuQ1Usa0JBQWtCO1FBUDlCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQztZQUN4QixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLFlBQVksQ0FBQztZQUNwRSxPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxRQUFRLENBQUM7WUFDOUUsU0FBUyxFQUFFLEVBQUU7WUFDYixlQUFlLEVBQUUsRUFBRTtTQUNwQixDQUFDO09BQ1csa0JBQWtCLENBb0M5QjtJQUFELHlCQUFDO0NBQUEsQUFwQ0QsSUFvQ0M7U0FwQ1ksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IEh0dHBDbGllbnRNb2R1bGUsIEhUVFBfSU5URVJDRVBUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5cclxuaW1wb3J0IHsgTENVSW50ZXJjZXB0b3IgfSBmcm9tICcuLi9hcGkvZGFmL2xjdS5pbnRlcmNlcHRvcic7XHJcbmltcG9ydCB7IFJlYWxUaW1lU2VydmljZSB9IGZyb20gJy4uL2FwaS9yZWFsLXRpbWUvcmVhbC10aW1lLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMQ1VTZXJ2aWNlU2V0dGluZ3MgfSBmcm9tICcuLi9hcGkvbGN1LXNlcnZpY2Utc2V0dGluZ3MnO1xyXG5pbXBvcnQgeyBTYWZlUGlwZSB9IGZyb20gJy4uL3BpcGVzL3NhZmUtcGlwZSc7XHJcblxyXG5leHBvcnQgY29uc3Qgd2luQW55ID0gPGFueT53aW5kb3c7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1NhZmVQaXBlXSxcclxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSwgSHR0cENsaWVudE1vZHVsZSwgUm91dGVyTW9kdWxlXSxcclxuICBleHBvcnRzOiBbQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSwgSHR0cENsaWVudE1vZHVsZSwgUm91dGVyTW9kdWxlLCBTYWZlUGlwZV0sXHJcbiAgcHJvdmlkZXJzOiBbXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGYXRoeW1TaGFyZWRNb2R1bGUge1xyXG4gIC8vICBGaWVsZHNcclxuXHJcbiAgLy8gIEFQSSBNZXRob2RzXHJcbiAgc3RhdGljIERlZmF1bHRTZXJ2aWNlU2V0dGluZ3MoZW52OiB7IHByb2R1Y3Rpb246IGJvb2xlYW4gfSwgYXBpUm9vdD86IHN0cmluZykge1xyXG4gICAgcmV0dXJuIDxMQ1VTZXJ2aWNlU2V0dGluZ3M+e1xyXG4gICAgICBBUElSb290OiB3aW5BbnkuTENVICYmIHdpbkFueS5MQ1UuQVBJUm9vdCA/IHdpbkFueS5MQ1UuQVBJUm9vdCA6ICcnLFxyXG4gICAgICBBcHBDb25maWc6IHtcclxuICAgICAgICBJRDogd2luQW55LkxDVSAmJiB3aW5BbnkuTENVLkFwcGxpY2F0aW9uICYmIHdpbkFueS5MQ1UuQXBwbGljYXRpb24uSUQgPyB3aW5BbnkuTENVLkFwcGxpY2F0aW9uLklEIDogJ3Rlc3QtYXBwJyxcclxuICAgICAgICBFbnRlcnByaXNlQVBJS2V5OlxyXG4gICAgICAgICAgd2luQW55LkxDVSAmJiB3aW5BbnkuTENVLkFwcGxpY2F0aW9uLkVudGVycHJpc2VBUElLZXkgPyB3aW5BbnkuTENVLkFwcGxpY2F0aW9uLkVudGVycHJpc2VBUElLZXkgOiAndGVzdC1hcHAnXHJcbiAgICAgIH0sXHJcbiAgICAgIFN0YXRlQ29uZmlnOiB7XHJcbiAgICAgICAgRW52aXJvbm1lbnQ6IHdpbkFueS5MQ1UuU3RhdGUgPyB3aW5BbnkuTENVLlN0YXRlLkVudmlyb25tZW50IDogJycsXHJcbiAgICAgICAgQWN0aW9uUm9vdDogd2luQW55LkxDVS5TdGF0ZSA/IHdpbkFueS5MQ1UuU3RhdGUuUm9vdCA6ICcnLFxyXG4gICAgICAgIFJvb3Q6IHdpbkFueS5MQ1UuU3RhdGUgPyB3aW5BbnkuTENVLlN0YXRlLlJvb3QgOiAnJyxcclxuICAgICAgICBVc2VybmFtZU1vY2s6IHdpbkFueS5MQ1UuU3RhdGUgPyB3aW5BbnkuTENVLlN0YXRlLlVzZXJuYW1lTW9jayA6ICcnXHJcbiAgICAgIH0sXHJcbiAgICAgIFNldHRpbmdzOiB3aW5BbnkuTENVLlNldHRpbmdzXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxGYXRoeW1TaGFyZWRNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBGYXRoeW1TaGFyZWRNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIFJlYWxUaW1lU2VydmljZSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUyxcclxuICAgICAgICAgIHVzZUNsYXNzOiBMQ1VJbnRlcmNlcHRvcixcclxuICAgICAgICAgIG11bHRpOiB0cnVlLFxyXG4gICAgICAgICAgZGVwczogW0xDVVNlcnZpY2VTZXR0aW5nc11cclxuICAgICAgICB9XHJcbiAgICAgIF1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==