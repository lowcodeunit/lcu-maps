import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { ActivatedRoute, Router, NavigationCancel, NavigationEnd, NavigationError, NavigationStart } from '@angular/router';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
var RouterHelpersService = /** @class */ (function () {
    // 	Constructors
    function RouterHelpersService(route, router) {
        this.route = route;
        this.router = router;
    }
    // 	API Methods
    RouterHelpersService.prototype.RunOnNavigation = function (action, navEventType) {
        if (navEventType === void 0) { navEventType = null; }
        return this.router.events.subscribe(function (event) {
            if (navEventType == null || event instanceof navEventType) {
                action(event);
            }
        });
    };
    RouterHelpersService.prototype.RunOnNavigationCancel = function (action) {
        return this.RunOnNavigation(action, NavigationCancel);
    };
    RouterHelpersService.prototype.RunOnNavigationEnd = function (action) {
        return this.RunOnNavigation(action, NavigationEnd);
    };
    RouterHelpersService.prototype.RunOnNavigationError = function (action) {
        return this.RunOnNavigation(action, NavigationError);
    };
    RouterHelpersService.prototype.RunOnNavigationStart = function (action) {
        return this.RunOnNavigation(action, NavigationStart);
    };
    RouterHelpersService.prototype.RunOnQueryParam = function (param, action, checkVal) {
        if (checkVal === void 0) { checkVal = null; }
        return this.route.queryParams.subscribe(function (params) {
            if ((checkVal == null && params[param] != null) || (checkVal != null && params[param] === checkVal)) {
                action(params);
            }
        });
    };
    RouterHelpersService.prototype.RunOnRouteParam = function (param, action, checkVal) {
        if (checkVal === void 0) { checkVal = null; }
        return this.route.params.subscribe(function (params) {
            if ((checkVal == null && params[param] != null) || (checkVal != null && params[param] === checkVal)) {
                action(params);
            }
        });
    };
    RouterHelpersService.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: Router }
    ]; };
    RouterHelpersService.ɵprov = i0.ɵɵdefineInjectable({ factory: function RouterHelpersService_Factory() { return new RouterHelpersService(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i1.Router)); }, token: RouterHelpersService, providedIn: "root" });
    RouterHelpersService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [ActivatedRoute, Router])
    ], RouterHelpersService);
    return RouterHelpersService;
}());
export { RouterHelpersService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWhlbHBlcnMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BsY3UvY29tbW9uLyIsInNvdXJjZXMiOlsibGliL3JvdXRpbmcvcm91dGVyLWhlbHBlcnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7QUFLNUg7SUFDRSxnQkFBZ0I7SUFDaEIsOEJBQXNCLEtBQXFCLEVBQVksTUFBYztRQUEvQyxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUFZLFdBQU0sR0FBTixNQUFNLENBQVE7SUFBRyxDQUFDO0lBRXpFLGVBQWU7SUFDUiw4Q0FBZSxHQUF0QixVQUF1QixNQUE0QixFQUFFLFlBQXdCO1FBQXhCLDZCQUFBLEVBQUEsbUJBQXdCO1FBQzNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQUMsS0FBVTtZQUM3QyxJQUFJLFlBQVksSUFBSSxJQUFJLElBQUksS0FBSyxZQUFZLFlBQVksRUFBRTtnQkFDekQsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2Y7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTSxvREFBcUIsR0FBNUIsVUFBNkIsTUFBNEI7UUFDdkQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSxpREFBa0IsR0FBekIsVUFBMEIsTUFBNEI7UUFDcEQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBRU0sbURBQW9CLEdBQTNCLFVBQTRCLE1BQTRCO1FBQ3RELE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxNQUFNLEVBQUUsZUFBZSxDQUFDLENBQUM7SUFDdkQsQ0FBQztJQUVNLG1EQUFvQixHQUEzQixVQUE0QixNQUE0QjtRQUN0RCxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFLGVBQWUsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFTSw4Q0FBZSxHQUF0QixVQUF1QixLQUFhLEVBQUUsTUFBNkIsRUFBRSxRQUFvQjtRQUFwQix5QkFBQSxFQUFBLGVBQW9CO1FBQ3ZGLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLFVBQUMsTUFBVztZQUNsRCxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxRQUFRLENBQUMsRUFBRTtnQkFDbkcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ2hCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU0sOENBQWUsR0FBdEIsVUFBdUIsS0FBYSxFQUFFLE1BQTZCLEVBQUUsUUFBb0I7UUFBcEIseUJBQUEsRUFBQSxlQUFvQjtRQUN2RixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFDLE1BQVc7WUFDN0MsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssUUFBUSxDQUFDLEVBQUU7Z0JBQ25HLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNoQjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Z0JBekM0QixjQUFjO2dCQUFvQixNQUFNOzs7SUFGMUQsb0JBQW9CO1FBSGhDLFVBQVUsQ0FBQztZQUNWLFVBQVUsRUFBRSxNQUFNO1NBQ25CLENBQUM7eUNBRzZCLGNBQWMsRUFBb0IsTUFBTTtPQUYxRCxvQkFBb0IsQ0E0Q2hDOytCQWxERDtDQWtEQyxBQTVDRCxJQTRDQztTQTVDWSxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlLCBSb3V0ZXIsIE5hdmlnYXRpb25DYW5jZWwsIE5hdmlnYXRpb25FbmQsIE5hdmlnYXRpb25FcnJvciwgTmF2aWdhdGlvblN0YXJ0IH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcclxuXHJcbkBJbmplY3RhYmxlKHtcclxuICBwcm92aWRlZEluOiAncm9vdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIFJvdXRlckhlbHBlcnNTZXJ2aWNlIHtcclxuICAvLyBcdENvbnN0cnVjdG9yc1xyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCByb3V0ZTogQWN0aXZhdGVkUm91dGUsIHByb3RlY3RlZCByb3V0ZXI6IFJvdXRlcikge31cclxuXHJcbiAgLy8gXHRBUEkgTWV0aG9kc1xyXG4gIHB1YmxpYyBSdW5Pbk5hdmlnYXRpb24oYWN0aW9uOiAoZXZlbnQ6IGFueSkgPT4gdm9pZCwgbmF2RXZlbnRUeXBlOiBhbnkgPSBudWxsKSB7XHJcbiAgICByZXR1cm4gdGhpcy5yb3V0ZXIuZXZlbnRzLnN1YnNjcmliZSgoZXZlbnQ6IGFueSkgPT4ge1xyXG4gICAgICBpZiAobmF2RXZlbnRUeXBlID09IG51bGwgfHwgZXZlbnQgaW5zdGFuY2VvZiBuYXZFdmVudFR5cGUpIHtcclxuICAgICAgICBhY3Rpb24oZXZlbnQpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBSdW5Pbk5hdmlnYXRpb25DYW5jZWwoYWN0aW9uOiAoZXZlbnQ6IGFueSkgPT4gdm9pZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuUnVuT25OYXZpZ2F0aW9uKGFjdGlvbiwgTmF2aWdhdGlvbkNhbmNlbCk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgUnVuT25OYXZpZ2F0aW9uRW5kKGFjdGlvbjogKGV2ZW50OiBhbnkpID0+IHZvaWQpIHtcclxuICAgIHJldHVybiB0aGlzLlJ1bk9uTmF2aWdhdGlvbihhY3Rpb24sIE5hdmlnYXRpb25FbmQpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIFJ1bk9uTmF2aWdhdGlvbkVycm9yKGFjdGlvbjogKGV2ZW50OiBhbnkpID0+IHZvaWQpIHtcclxuICAgIHJldHVybiB0aGlzLlJ1bk9uTmF2aWdhdGlvbihhY3Rpb24sIE5hdmlnYXRpb25FcnJvcik7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgUnVuT25OYXZpZ2F0aW9uU3RhcnQoYWN0aW9uOiAoZXZlbnQ6IGFueSkgPT4gdm9pZCkge1xyXG4gICAgcmV0dXJuIHRoaXMuUnVuT25OYXZpZ2F0aW9uKGFjdGlvbiwgTmF2aWdhdGlvblN0YXJ0KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBSdW5PblF1ZXJ5UGFyYW0ocGFyYW06IHN0cmluZywgYWN0aW9uOiAocGFyYW1zOiBhbnkpID0+IHZvaWQsIGNoZWNrVmFsOiBhbnkgPSBudWxsKSB7XHJcbiAgICByZXR1cm4gdGhpcy5yb3V0ZS5xdWVyeVBhcmFtcy5zdWJzY3JpYmUoKHBhcmFtczogYW55KSA9PiB7XHJcbiAgICAgIGlmICgoY2hlY2tWYWwgPT0gbnVsbCAmJiBwYXJhbXNbcGFyYW1dICE9IG51bGwpIHx8IChjaGVja1ZhbCAhPSBudWxsICYmIHBhcmFtc1twYXJhbV0gPT09IGNoZWNrVmFsKSkge1xyXG4gICAgICAgIGFjdGlvbihwYXJhbXMpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBSdW5PblJvdXRlUGFyYW0ocGFyYW06IHN0cmluZywgYWN0aW9uOiAocGFyYW1zOiBhbnkpID0+IHZvaWQsIGNoZWNrVmFsOiBhbnkgPSBudWxsKSB7XHJcbiAgICByZXR1cm4gdGhpcy5yb3V0ZS5wYXJhbXMuc3Vic2NyaWJlKChwYXJhbXM6IGFueSkgPT4ge1xyXG4gICAgICBpZiAoKGNoZWNrVmFsID09IG51bGwgJiYgcGFyYW1zW3BhcmFtXSAhPSBudWxsKSB8fCAoY2hlY2tWYWwgIT0gbnVsbCAmJiBwYXJhbXNbcGFyYW1dID09PSBjaGVja1ZhbCkpIHtcclxuICAgICAgICBhY3Rpb24ocGFyYW1zKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==