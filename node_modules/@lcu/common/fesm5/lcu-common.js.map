{"version":3,"file":"lcu-common.js","sources":["ng://@lcu/common/lib/address.ts","ng://@lcu/common/lib/amount.ts","ng://@lcu/common/lib/api/lcu-service-settings.ts","ng://@lcu/common/lib/api/daf/daf.service.ts","ng://@lcu/common/lib/api/observable-context/observable-context.service.ts","ng://@lcu/common/lib/api/real-time/real-time.connection.ts","ng://@lcu/common/lib/api/real-time/real-time.service.ts","ng://@lcu/common/lib/status.ts","ng://@lcu/common/lib/api/base-response.ts","ng://@lcu/common/lib/api/base-modeled-response.ts","ng://@lcu/common/lib/elements/lcu-element-context.model.ts","ng://@lcu/common/lib/elements/lcu-element.component.ts","ng://@lcu/common/lib/guid.ts","ng://@lcu/common/lib/api/daf/lcu.interceptor.ts","ng://@lcu/common/lib/pipes/safe-pipe.ts","ng://@lcu/common/lib/hosting/fathym-shared.module.ts","ng://@lcu/common/lib/icon.ts","ng://@lcu/common/lib/json-schema.ts","ng://@lcu/common/lib/loading.ts","ng://@lcu/common/lib/pageable.ts","ng://@lcu/common/lib/registry/enterprise/application.ts","ng://@lcu/common/lib/routing/router-helpers.service.ts","ng://@lcu/common/lib/state/state-action.model.ts","ng://@lcu/common/lib/state/state.context.ts","ng://@lcu/common/lib/modules/material.module.ts","ng://@lcu/common/lib/utils/constants/data-pipe.constants.ts","ng://@lcu/common/lib/utils/conversion/temperature.conversion.ts","ng://@lcu/common/lib/utils/pipes/data.pipes.ts","ng://@lcu/common/lib/utils/pipes/sanitze-html.pipe.ts","ng://@lcu/common/lib/utils/pipes/decamelize.pipe.ts","ng://@lcu/common/lib/modules/pipe.module.ts","ng://@lcu/common/lib/directives/themes/theme-color.directive.ts","ng://@lcu/common/lib/modules/directives.module.ts","ng://@lcu/common/lib/models/base64.model.ts","ng://@lcu/common/lib/models/data-flows/DataFlow.ts","ng://@lcu/common/lib/models/data-flows/DataFlowAction.ts","ng://@lcu/common/lib/models/data-flows/DataFlowActionEvent.ts","ng://@lcu/common/lib/models/data-flows/DataFlowLayout.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModule.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModuleControlTypes.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModuleDisplay.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModuleOption.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModulePack.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModulePackSetup.ts","ng://@lcu/common/lib/models/data-flows/DataFlowModuleShapeTypes.ts","ng://@lcu/common/lib/models/data-flows/DataFlowOutput.ts","ng://@lcu/common/lib/models/data-flows/DataFlowStream.ts","ng://@lcu/common/lib/models/ide/activity.ts","ng://@lcu/common/lib/models/ide/editor.ts","ng://@lcu/common/lib/models/ide/panel.ts","ng://@lcu/common/lib/models/ide/side-bar.ts","ng://@lcu/common/lib/models/data-flows/Solution.ts","ng://@lcu/common/lib/models/validation-message.model.ts","ng://@lcu/common/lib/utils/constants/email-validation-messages.constants.ts","ng://@lcu/common/lib/utils/constants/user-validation-messages.constants.ts","ng://@lcu/common/lib/utils/constants/constants.ts","ng://@lcu/common/lib/utils/constants/password-validation-messages.constants.ts","ng://@lcu/common/lib/utils/zipcode-validataion-messages.constants.ts","ng://@lcu/common/lib/form-validation/messages.validation.ts","ng://@lcu/common/lib/form-validation/email.validator.ts","ng://@lcu/common/lib/form-validation/password.validator.ts","ng://@lcu/common/lib/form-validation/phone.validator.ts","ng://@lcu/common/lib/form-validation/user-name.validator.ts","ng://@lcu/common/lib/form-validation/zipcode.validator.ts","ng://@lcu/common/lib/utils/favicons.service.ts","ng://@lcu/common/lib/utils/images/convert-to-base64.util.ts","ng://@lcu/common/lib/utils/theming/toggle-theme.utils.ts","ng://@lcu/common/lib/utils/type/is-data-type.util.ts","ng://@lcu/common/lib/utils/conversion/json/json-flatten-unflatten.util.ts","ng://@lcu/common/lib/utils/conversion/json/dot-notation.util.ts","ng://@lcu/common/lib/utils/constants/country.constants.ts","ng://@lcu/common/lib/services/theming/theme-color-picker.utils.ts","ng://@lcu/common/lcu-common.ts"],"sourcesContent":["export class Address {\r\n  public City: string;\r\n\r\n  public Country: string;\r\n\r\n  public State: string;\r\n\r\n  public Street1: string;\r\n\r\n  public Street2: string;\r\n\r\n  public Unit: string;\r\n\r\n  public Zip: string;\r\n}\r\n","export class Amount {\r\n  public Currency: string;\r\n\r\n  public Total: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport class LCUServiceSettings {\r\n  public APIRoot?: string;\r\n\r\n  public AppConfig?: LCUApplicationConfig;\r\n\r\n  public Settings?: any;\r\n\r\n  public StateConfig?: LCUStateConfig;\r\n}\r\n\r\nexport class LCUApplicationConfig {\r\n  public ID: string;\r\n\r\n  public EnterpriseAPIKey: string;\r\n}\r\n\r\nexport class LCUStateConfig {\r\n  public ActionRoot?: string;\r\n\r\n  public Environment?: string;\r\n\r\n  public Root?: string;\r\n\r\n  public UsernameMock?: string;\r\n}\r\n","import { Observable, OperatorFunction, throwError } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Injector } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { BaseResponse } from '../base-response';\r\nimport { BaseModeledResponse } from '../base-modeled-response';\r\nimport { LCUServiceSettings } from '../lcu-service-settings';\r\n\r\nexport abstract class DAFService {\r\n  // \tFields\r\n  protected http: HttpClient;\r\n\r\n  protected settings: LCUServiceSettings;\r\n\r\n  //  Constructors\r\n  constructor(protected injector: Injector) {\r\n    this.http = injector.get(HttpClient);\r\n\r\n    try {\r\n      this.settings = injector.get(LCUServiceSettings);\r\n    } catch (err) {}\r\n  }\r\n\r\n  //  Helpers\r\n  protected catchError(): OperatorFunction<any, any> {\r\n    return catchError<any, any>(this.handleError);\r\n  }\r\n\r\n  protected delete(path: string): Observable<BaseResponse> {\r\n    return this.http.delete<BaseResponse>(this.resolvePath(path)).pipe(this.catchError());\r\n  }\r\n\r\n  protected get<T>(path: string): Observable<BaseModeledResponse<T>> {\r\n    return this.http.get<BaseModeledResponse<T>>(this.resolvePath(path)).pipe(this.catchError());\r\n  }\r\n\r\n  protected handleError(error: any): any {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    // We'd also dig deeper into the error to get a better message\r\n    const errMsg = error.message ? error.message : error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n\r\n    console.error(errMsg); // log to console instead\r\n\r\n    return throwError(errMsg);\r\n  }\r\n\r\n  protected patch<T>(data: any, path: string): Observable<BaseModeledResponse<T>> {\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.patch<BaseModeledResponse<T>>(this.resolvePath(path), data, options).pipe(this.catchError());\r\n  }\r\n\r\n  protected post<T>(data: any, path: string): Observable<BaseModeledResponse<T>> {\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.post<BaseModeledResponse<T>>(this.resolvePath(path), data, options).pipe(this.catchError());\r\n  }\r\n\r\n  protected put<T>(data: any, path: string): Observable<BaseModeledResponse<T>> {\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n\r\n    return this.http.put<BaseModeledResponse<T>>(this.resolvePath(path), data, options).pipe(this.catchError());\r\n  }\r\n\r\n  protected resolvePath(path: string) {\r\n    if (this.settings && this.settings.APIRoot) {\r\n      if (this.settings.APIRoot.endsWith('/')) {\r\n        this.settings.APIRoot = this.settings.APIRoot.substring(this.settings.APIRoot.length - 1);\r\n      }\r\n\r\n      if (path.startsWith('/')) {\r\n        path = path.substring(1);\r\n      }\r\n\r\n      return `${this.settings.APIRoot}/${path}`;\r\n    } else {\r\n      return path;\r\n    }\r\n  }\r\n}\r\n","import { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nexport abstract class ObservableContextService<T> {\r\n  // \tFields\r\n  protected loader: BehaviorSubject<boolean>;\r\n\r\n  protected subject: BehaviorSubject<T>;\r\n\r\n  // \tProperties\r\n  public readonly Context: Observable<T>;\r\n\r\n  public readonly Loading: Observable<boolean>;\r\n\r\n  //  Constructors\r\n  constructor() {\r\n    this.loader = new BehaviorSubject<boolean>(false);\r\n\r\n    this.subject = new BehaviorSubject<T>(this.defaultValue());\r\n\r\n    this.Context = this.subject.asObservable();\r\n\r\n    this.Loading = this.loader.asObservable();\r\n  }\r\n\r\n  //  Helpers\r\n  protected loading(loading: boolean) {\r\n    this.loader.next(loading);\r\n  }\r\n\r\n  protected defaultValue(): T {\r\n    return null;\r\n  }\r\n}\r\n","import * as signalR from '@aspnet/signalr';\r\nimport { NgZone, Output, EventEmitter } from '@angular/core';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { LCUServiceSettings } from '../lcu-service-settings';\r\nimport {\r\n  Observable,\r\n  BehaviorSubject,\r\n  ReplaySubject,\r\n  Observer,\r\n  Subject\r\n} from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nexport class RealTimeConnection {\r\n  //  Fields\r\n  protected actionUrl: string;\r\n\r\n  protected connectionAttempts: number;\r\n\r\n  protected rtUrl: string;\r\n\r\n  //  Properties\r\n  public ConnectionError: EventEmitter<any>;\r\n\r\n  public Hub: signalR.HubConnection;\r\n\r\n  public MaxConnectionRetryAttempts: number;\r\n\r\n  public ReconnectionAttempt: EventEmitter<number>;\r\n\r\n  public Started: EventEmitter<signalR.HubConnection>;\r\n\r\n  //  Constructors\r\n  constructor(protected http: HttpClient, rtUrl: string, actionUrl: string, maxConnectionRetryAttempts: number = 10) {\r\n    this.actionUrl = actionUrl;\r\n\r\n    this.connectionAttempts = 0;\r\n\r\n    this.rtUrl = rtUrl;\r\n\r\n    this.ConnectionError = new EventEmitter<any>();\r\n\r\n    this.ReconnectionAttempt = new EventEmitter<number>();\r\n\r\n    this.MaxConnectionRetryAttempts = maxConnectionRetryAttempts;\r\n\r\n    this.Started = new EventEmitter<signalR.HubConnection>();\r\n  }\r\n\r\n  //  API Methods\r\n  public Start(\r\n    transport: signalR.HttpTransportType = signalR.HttpTransportType.WebSockets\r\n  ) {\r\n    this.buildHub(transport).then((hub: signalR.HubConnection) => {\r\n      this.Hub = hub;\r\n\r\n      this.Hub.serverTimeoutInMilliseconds = 600000;\r\n\r\n      this.Hub.onclose(err => {\r\n        console.log('onclose: ' + err);\r\n\r\n        this.retryConnection();\r\n      });\r\n\r\n      try {\r\n        this.Hub.start()\r\n          .then(() => {\r\n            this.connectionAttempts = 0;\r\n\r\n            console.log(`Connection started`);\r\n\r\n            this.Started.emit(this.Hub);\r\n          })\r\n          .catch(err => {\r\n            console.log('Error while starting connection: ' + err);\r\n\r\n            this.ConnectionError.emit(err);\r\n\r\n            this.retryConnection();\r\n          });\r\n      } catch (err) {\r\n        console.log('Error while starting connection: ' + err);\r\n\r\n        this.retryConnection();\r\n      }\r\n    });\r\n  }\r\n\r\n  public RegisterHandler(methodName: string): Observable<any> {\r\n    return new Observable(obs => {\r\n      if (this.Hub) {\r\n        try {\r\n          this.Hub.on(methodName, req => {\r\n            obs.next(req);\r\n          });\r\n        } catch (err) {\r\n          console.log(`Error while handling ${methodName}: ` + err);\r\n\r\n          obs.error(err);\r\n        }\r\n      } else {\r\n        obs.error(\r\n          'The hub must be started and configured before registering a handler.'\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  public InvokeAction(methodName: string, headers: HttpHeaders | { [header: string]: string | string[]; }, args: {}) {\r\n    const url = `${this.actionUrl}/${methodName}`;\r\n\r\n    return this.http.post(url, args, {\r\n      headers,\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  public Invoke(methodName: string, ...args: any[]) {\r\n    return new Observable(obs => {\r\n      if (this.Hub) {\r\n        try {\r\n          this.Hub.invoke(methodName, ...args)\r\n            .then(res => {\r\n              obs.next(res);\r\n            })\r\n            .catch(e => {\r\n              obs.error(e);\r\n            });\r\n        } catch (err) {\r\n          console.log(`Error while invoking ${methodName}: ` + err);\r\n\r\n          obs.error(err);\r\n        }\r\n      } else {\r\n        obs.error('The hub must be started and configured before invoking.');\r\n      }\r\n    });\r\n  }\r\n\r\n  //  Helpers\r\n  protected async buildHub(transport: signalR.HttpTransportType) {\r\n    return new signalR.HubConnectionBuilder()\r\n      .configureLogging(signalR.LogLevel.Information)\r\n      .withUrl(this.rtUrl, {\r\n        transport\r\n      })\r\n      .build();\r\n  }\r\n\r\n  protected stop(): Promise<void> {\r\n    return this.Hub.stop();\r\n  }\r\n\r\n  /**\r\n   * Retry connection\r\n   */\r\n  protected retryConnection(): void {\r\n    if (this.connectionAttempts < this.MaxConnectionRetryAttempts) {\r\n      console.log(`Retrying connection attempt ${this.connectionAttempts}`);\r\n\r\n      this.connectionAttempts += 1;\r\n\r\n      setTimeout(() => {\r\n        this.reconnect();\r\n      }, 1000);\r\n    } else if (this.connectionAttempts >= this.MaxConnectionRetryAttempts) {\r\n      this.stop().then();\r\n\r\n      this.ConnectionError.emit(\r\n        'The maximum number of connection retries has been met.'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt to reconnect\r\n   */\r\n  protected reconnect(): void {\r\n    this.ReconnectionAttempt.emit(this.connectionAttempts);\r\n\r\n    this.Start();\r\n  }\r\n}\r\n","import * as signalR from '@aspnet/signalr';\r\nimport { NgZone, Output, EventEmitter } from '@angular/core';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { LCUServiceSettings } from '../lcu-service-settings';\r\nimport {\r\n  Observable,\r\n  BehaviorSubject,\r\n  ReplaySubject,\r\n  Observer,\r\n  Subject\r\n} from 'rxjs';\r\n\r\n//  TODO:  Need to manage reconnection to hub scenarios here\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RealTimeService {\r\n  //  Fields\r\n\r\n  protected attemptingToReconnect: boolean;\r\n\r\n  protected connectionAttempts: number;\r\n\r\n  protected hub: signalR.HubConnection;\r\n\r\n  protected showConnectionError: boolean;\r\n\r\n  protected started: ReplaySubject<signalR.HubConnection>;\r\n\r\n  protected url: string;\r\n\r\n  private zone: NgZone;\r\n\r\n  //  Properties\r\n\r\n  public ReconnectionAttempt: Subject<boolean>;\r\n\r\n  public Settings: LCUServiceSettings;\r\n\r\n  public Started: Observable<signalR.HubConnection>;\r\n\r\n  //  Constructors\r\n  constructor(protected injector: Injector) {\r\n    this.ReconnectionAttempt = new Subject<boolean>();\r\n    this.connectionAttempts = 0;\r\n    try {\r\n      this.Settings = injector.get(LCUServiceSettings);\r\n      this.zone = injector.get(NgZone);\r\n    } catch (err) {}\r\n\r\n    this.started = new ReplaySubject();\r\n\r\n    this.Started = this.started.asObservable();\r\n\r\n    this.start();\r\n  }\r\n\r\n  //  API Methods\r\n  public Start() {\r\n    return new Promise<signalR.HubConnection>((resolve, reject) => {\r\n      this.buildHub('').then((hub: signalR.HubConnection) => {\r\n        this.hub = hub;\r\n\r\n        this.hub.serverTimeoutInMilliseconds = 600000;\r\n\r\n        this.hub.onclose(err => {\r\n          console.log('onclose: ' + err);\r\n\r\n          this.retryConnection();\r\n        });\r\n\r\n        try {\r\n          this.hub\r\n            .start()\r\n            .then(() => {\r\n              // this.connectionAttempts = 0;\r\n\r\n              console.log(`Connection started`);\r\n\r\n              resolve(this.hub);\r\n            })\r\n            .catch(err => {\r\n              this.retryConnection();\r\n\r\n              if (this.showConnectionError) {\r\n                reject(err);\r\n                console.log('Error while starting connection: ' + err);\r\n                this.showConnectionError = false;\r\n              }\r\n            });\r\n        } catch (err) {\r\n          console.log('Error while starting connection 02: ' + err);\r\n\r\n          this.retryConnection();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public RegisterHandler(methodName: string) {\r\n    return this.WithHub(hub => {\r\n      return Observable.create((obs: Observer<any>) => {\r\n        try {\r\n          hub.on(methodName, req => {\r\n            obs.next(req);\r\n\r\n            this.zone.run(() => {});\r\n          });\r\n        } catch (err) {\r\n          console.log(`Error while handling ${methodName}: ` + err);\r\n\r\n          obs.error(err);\r\n\r\n          this.retryConnection();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public Invoke(methodName: string, ...args: any[]) {\r\n    return this.WithHub(hub => {\r\n      return Observable.create((obs: Observer<any>) => {\r\n        try {\r\n          hub\r\n            .invoke(methodName, ...args)\r\n            .then(res => {\r\n              obs.next(res);\r\n\r\n              this.zone.run(() => {});\r\n            })\r\n            .catch(e => {\r\n              obs.error(e);\r\n            });\r\n        } catch (err) {\r\n          console.log(`Error while invoking ${methodName}: ` + err);\r\n\r\n          obs.error(err);\r\n\r\n          this.retryConnection();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  public WithHub(\r\n    action: (hub: signalR.HubConnection) => void | Observable<any>\r\n  ): Observable<any> {\r\n    try {\r\n      return Observable.create((obs: Observer<any>) => {\r\n        if (this.hub.state !== signalR.HubConnectionState.Connected) {\r\n          this.Start().then(hub => {\r\n            console.log('Restarting connection in flight...');\r\n\r\n            this.runWithHub(obs, action);\r\n          });\r\n        } else {\r\n          this.runWithHub(obs, action);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      return Observable.create((obs: Observer<any>) => {\r\n        obs.error(err);\r\n\r\n        obs.complete();\r\n      });\r\n    }\r\n  }\r\n\r\n  //  Helpers\r\n  protected async buildHub(urlRoot: string) {\r\n    this.url = this.buildHubUrl(urlRoot);\r\n\r\n    return (\r\n      new signalR.HubConnectionBuilder()\r\n        .configureLogging(signalR.LogLevel.Information)\r\n        .withUrl(this.url)\r\n        // .withUrl(this.url, {\r\n        //   transport: signalR.HttpTransportType.LongPolling\r\n        // })\r\n        .build()\r\n    );\r\n  }\r\n\r\n  protected buildHubUrl(urlRoot: string) {\r\n    const url = this.loadHubUrl(urlRoot);\r\n\r\n    return url;\r\n  }\r\n\r\n  protected loadHubPath() {\r\n    const stateRoot = this.loadStateRoot();\r\n\r\n    return `${stateRoot}?lcu-app-id=${this.Settings.AppConfig.ID}&lcu-app-ent-api-key=${this.Settings.AppConfig.EnterpriseAPIKey}&lcu-environment=${this.Settings.StateConfig.Environment || ''}`;\r\n  }\r\n\r\n  protected loadHubUrl(urlRoot: string) {\r\n    const apiRoot = this.Settings ? this.Settings.APIRoot || '' : '';\r\n\r\n    const hubPath = this.loadHubPath();\r\n\r\n    return `${apiRoot}${urlRoot || ''}${hubPath}`;\r\n  }\r\n\r\n  protected loadStateRoot() {\r\n    // return this.Settings.StateConfig &&\r\n    //   this.Settings.StateConfig.Root !== undefined\r\n    //   ? this.Settings.StateConfig.Root\r\n    //   : '/state';\r\n\r\n    return '/state';\r\n  }\r\n\r\n  protected runWithHub(\r\n    obs: Observer<any>,\r\n    action: (hub: signalR.HubConnection) => void | Observable<any>\r\n  ) {\r\n    const res = action(this.hub);\r\n\r\n    if (res) {\r\n      res.subscribe(\r\n        r => {\r\n          obs.next(r);\r\n\r\n          this.zone.run(() => {});\r\n        },\r\n        e => {\r\n          obs.error(e);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  protected start() {\r\n    setTimeout(() => {\r\n      this.Start().then(hub => this.started.next(hub));\r\n    }, 50);\r\n  }\r\n\r\n  protected stop(): void {\r\n    // this.hub.stop();\r\n    this.showConnectionError = true;\r\n  }\r\n\r\n  /**\r\n   * Retry connection\r\n   */\r\n  protected retryConnection(): void {\r\n    if (this.connectionAttempts < 5) {\r\n      console.log(`Retrying connection attempt ${this.connectionAttempts}`);\r\n\r\n      this.connectionAttempts += 1;\r\n\r\n      this.reconnect();\r\n    } else if (this.connectionAttempts >= 5) {\r\n      this.stopReconnection();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt to reconnect\r\n   */\r\n  protected reconnect(): void {\r\n    this.attemptingToReconnect = true;\r\n\r\n    this.reconnectionMessage();\r\n    this.start();\r\n  }\r\n\r\n  /**\r\n   * Stop trying to reconnect\r\n   */\r\n  protected stopReconnection(): void {\r\n    this.attemptingToReconnect = false;\r\n\r\n    this.reconnectionMessage();\r\n    this.stop();\r\n  }\r\n\r\n  /**\r\n   * Notify user of reconnection attempt(s)\r\n   */\r\n  protected reconnectionMessage(): void {\r\n    this.ReconnectionAttempt.next(this.attemptingToReconnect);\r\n  }\r\n}\r\n","export class Status {\r\n  public Code: number;\r\n\r\n  public get Metadata(): any {\r\n    const meta = {};\r\n\r\n    const self = this as any;\r\n\r\n    for (const prop in self) {\r\n      if (prop !== 'Code' && prop !== 'Message' && prop !== 'Metadata') {\r\n        meta[prop] = self[prop];\r\n      }\r\n    }\r\n\r\n    return meta;\r\n  }\r\n\r\n  public Message: string;\r\n}\r\n\r\nexport function isStatusSuccess(status: Status) {\r\n  return status && status.Code === 0;\r\n}\r\n","import { Status, isStatusSuccess } from '../status';\r\n\r\nexport class BaseResponse {\r\n  public Status: Status;\r\n}\r\n\r\nexport function isResultSuccess(result: BaseResponse) {\r\n  return result && isStatusSuccess(result.Status);\r\n}\r\n","import { BaseResponse } from './base-response';\r\n\r\nexport class BaseModeledResponse<TModel> extends BaseResponse {\r\n  public Model: TModel;\r\n}\r\n","export class LCUElementContext<TState> {\r\n  public State: TState;\r\n}\r\n","import { OnInit, Input, Injector, Directive } from '@angular/core';\r\n\r\n// @Directive()\r\nexport abstract class LcuElementComponent<T> implements OnInit {\r\n  //  Fields\r\n\r\n  //  Properties\r\n  //  TODO: WOuld be ideal if this was caps with renamed input to lower...  But Angular Elements doesn't honor the Input/Output rename\r\n  @Input()\r\n  public context: T;\r\n\r\n  //  Constructors\r\n  constructor(protected injector: Injector) {\r\n  }\r\n\r\n  //  Life Cycle\r\n  public ngOnInit() {}\r\n\r\n  //  API Methods\r\n  @Input()\r\n  public SetContext(ctxt: T) {\r\n    this.context = ctxt;\r\n  }\r\n}\r\n","export class Guid {\r\n  // \tConstructors\r\n  private constructor(guid: string) {\r\n    if (!guid) {\r\n      throw new TypeError('Invalid argument; `value` has no value.');\r\n    }\r\n\r\n    this.value = Guid.Empty;\r\n\r\n    if (guid && Guid.IsGuid(guid)) {\r\n      this.value = guid;\r\n    }\r\n  }\r\n\r\n  // \tProperties\r\n  public static GuidValidator = new RegExp('^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$', 'i');\r\n\r\n  public static Empty = '00000000-0000-0000-0000-000000000000';\r\n  // \tFields\r\n  protected value: string;\r\n\r\n  // \tAPI Methods\r\n  public static Create(): Guid {\r\n    return Guid.Parse(Guid.CreateRaw());\r\n  }\r\n\r\n  public static CreateEmpty(): Guid {\r\n    return Guid.Parse('emptyguid');\r\n  }\r\n\r\n  public static CreateRaw(): string {\r\n    return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join('-');\r\n  }\r\n\r\n  public static IsGuid(guid: any) {\r\n    const value: string = guid.toString();\r\n\r\n    return guid && (guid instanceof Guid || Guid.GuidValidator.test(value));\r\n  }\r\n\r\n  public static Parse(guid: string): Guid {\r\n    return new Guid(guid);\r\n  }\r\n\r\n  // \tHelpers\r\n  private static gen(count: number) {\r\n    let out = '';\r\n    for (let i = 0; i < count; i++) {\r\n      // tslint:disable-next-line:no-bitwise\r\n      out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n    return out;\r\n  }\r\n\r\n  public Equals(other: Guid): boolean {\r\n    return Guid.IsGuid(other) && this.value === other.toString();\r\n  }\r\n\r\n  public IsEmpty(): boolean {\r\n    return this.value === Guid.Empty;\r\n  }\r\n\r\n  public ToJSON(): any {\r\n    return {\r\n      Value: this.value\r\n    };\r\n  }\r\n\r\n  public ToString(): string {\r\n    return this.value;\r\n  }\r\n}\r\n","import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LCUServiceSettings } from '../lcu-service-settings';\r\n\r\nexport class LCUInterceptor implements HttpInterceptor {\r\n  //  Constuctors\r\n  constructor(protected settings: LCUServiceSettings) {}\r\n\r\n  //  API Methods\r\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const clonedRequest = req.clone({\r\n      headers: req.headers\r\n        .set('lcu-app-id', this.settings.AppConfig.ID)\r\n        .set('lcu-app-ent-api-key', this.settings.AppConfig.EnterpriseAPIKey)\r\n        .set('lcu-environment', this.settings.StateConfig.Environment || '')\r\n        .set('lcu-username-mock', this.settings.StateConfig.UsernameMock || '')\r\n    });\r\n\r\n    // Pass the cloned request instead of the original request to the next handle\r\n    return next.handle(clonedRequest);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe',\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n  transform(url: string) {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LCUInterceptor } from '../api/daf/lcu.interceptor';\r\nimport { RealTimeService } from '../api/real-time/real-time.service';\r\nimport { LCUServiceSettings } from '../api/lcu-service-settings';\r\nimport { SafePipe } from '../pipes/safe-pipe';\r\n\r\nexport const winAny = <any>window;\r\n\r\n@NgModule({\r\n  declarations: [SafePipe],\r\n  imports: [CommonModule, FormsModule, HttpClientModule, RouterModule],\r\n  exports: [CommonModule, FormsModule, HttpClientModule, RouterModule, SafePipe],\r\n  providers: [],\r\n  entryComponents: []\r\n})\r\nexport class FathymSharedModule {\r\n  //  Fields\r\n\r\n  //  API Methods\r\n  static DefaultServiceSettings(env: { production: boolean }, apiRoot?: string) {\r\n    return <LCUServiceSettings>{\r\n      APIRoot: winAny.LCU && winAny.LCU.APIRoot ? winAny.LCU.APIRoot : '',\r\n      AppConfig: {\r\n        ID: winAny.LCU && winAny.LCU.Application && winAny.LCU.Application.ID ? winAny.LCU.Application.ID : 'test-app',\r\n        EnterpriseAPIKey:\r\n          winAny.LCU && winAny.LCU.Application.EnterpriseAPIKey ? winAny.LCU.Application.EnterpriseAPIKey : 'test-app'\r\n      },\r\n      StateConfig: {\r\n        Environment: winAny.LCU.State ? winAny.LCU.State.Environment : '',\r\n        ActionRoot: winAny.LCU.State ? winAny.LCU.State.Root : '',\r\n        Root: winAny.LCU.State ? winAny.LCU.State.Root : '',\r\n        UsernameMock: winAny.LCU.State ? winAny.LCU.State.UsernameMock : ''\r\n      },\r\n      Settings: winAny.LCU.Settings\r\n    };\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders<FathymSharedModule> {\r\n    return {\r\n      ngModule: FathymSharedModule,\r\n      providers: [\r\n        RealTimeService,\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: LCUInterceptor,\r\n          multi: true,\r\n          deps: [LCUServiceSettings]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","export class Icon {\r\n  public Icon: string;\r\n\r\n  public IconSet?: string;\r\n}\r\n\r\n","export class JSONSchema {\r\n  public $ref?: string;\r\n\r\n  /////////////////////////////////////////////////\r\n  // Schema Metadata\r\n  /////////////////////////////////////////////////\r\n  /**\r\n   * This is important because it tells refs where\r\n   * the root of the document is located\r\n   */\r\n  public $id?: string;\r\n\r\n  /**\r\n   * It is recommended that the meta-schema is\r\n   * included in the root of any JSON Schema\r\n   */\r\n  public $schema?: string;\r\n\r\n  /**\r\n   * Title of the schema\r\n   */\r\n  public title?: string;\r\n\r\n  /**\r\n   * Schema description\r\n   */\r\n  public description?: string;\r\n\r\n  /**\r\n   * Default json for the object represented by\r\n   * this schema\r\n   */\r\n  public 'default'?: any;\r\n\r\n  /////////////////////////////////////////////////\r\n  // Number Validation\r\n  /////////////////////////////////////////////////\r\n  /**\r\n   * The value must be a multiple of the number\r\n   * (e.g. 10 is a multiple of 5)\r\n   */\r\n  public multipleOf?: number;\r\n\r\n  public maximum?: number;\r\n\r\n  /**\r\n   * If true maximum must be > value, >= otherwise\r\n   */\r\n  public exclusiveMaximum?: boolean;\r\n\r\n  public minimum?: number;\r\n\r\n  /**\r\n   * If true minimum must be < value, <= otherwise\r\n   */\r\n  public exclusiveMinimum?: boolean;\r\n\r\n  /////////////////////////////////////////////////\r\n  // String Validation\r\n  /////////////////////////////////////////////////\r\n  public maxLength?: number;\r\n\r\n  public minLength?: number;\r\n\r\n  /**\r\n   * This is a regex string that the value must\r\n   * conform to\r\n   */\r\n  public pattern?: string;\r\n\r\n  /////////////////////////////////////////////////\r\n  // Array Validation\r\n  /////////////////////////////////////////////////\r\n  public additionalItems?: boolean | JSONSchema;\r\n\r\n  public items?: JSONSchema | JSONSchema[];\r\n\r\n  public maxItems?: number;\r\n\r\n  public minItems?: number;\r\n\r\n  public uniqueItems?: boolean;\r\n\r\n  /////////////////////////////////////////////////\r\n  // Object Validation\r\n  /////////////////////////////////////////////////\r\n  public maxProperties?: number;\r\n\r\n  public minProperties?: number;\r\n\r\n  public required?: string[];\r\n\r\n  public additionalProperties?: boolean | JSONSchema;\r\n\r\n  /**\r\n   * Holds simple JSON Schema definitions for\r\n   * referencing from elsewhere.\r\n   */\r\n  public definitions?: { [key: string]: JSONSchema };\r\n\r\n  /**\r\n   * The keys that can exist on the object with the\r\n   * json schema that should validate their value\r\n   */\r\n  public properties?: { [property: string]: JSONSchema };\r\n\r\n  /**\r\n   * The key of this object is a regex for which\r\n   * properties the schema applies to\r\n   */\r\n  public patternProperties?: { [pattern: string]: JSONSchema };\r\n\r\n  /**\r\n   * If the key is present as a property then the\r\n   * string of properties must also be present.\r\n   * If the value is a JSON Schema then it must\r\n   * also be valid for the object if the key is\r\n   * present.\r\n   */\r\n  public dependencies?: { [key: string]: JSONSchema | string[] };\r\n\r\n  /////////////////////////////////////////////////\r\n  // Generic\r\n  /////////////////////////////////////////////////\r\n  /**\r\n   * Enumerates the values that this schema can be\r\n   * e.g.\r\n   * {\"type\": \"string\",\r\n   *  \"enum\": [\"red\", \"green\", \"blue\"]}\r\n   */\r\n  public 'enum'?: any[];\r\n\r\n  /**\r\n   * The basic type of this schema, can be one of\r\n   * [string, number, object, array, boolean, null]\r\n   * or an array of the acceptable types\r\n   */\r\n  public type?: string | string[];\r\n\r\n  /////////////////////////////////////////////////\r\n  // Combining Schemas\r\n  /////////////////////////////////////////////////\r\n  public allOf?: JSONSchema[];\r\n\r\n  public anyOf?: JSONSchema[];\r\n\r\n  public oneOf?: JSONSchema[];\r\n\r\n  /**\r\n   * The entity being validated must not match this schema\r\n   */\r\n  public not?: JSONSchema;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Loading {\r\n  // \tFields\r\n  protected loaders: boolean[];\r\n\r\n  // \tProperties\r\n  public get Value(): boolean {\r\n    return this.loaders && this.loaders.length > 0 && this.loaders.every(loader => loader);\r\n  }\r\n\r\n  // \tConstructors\r\n  constructor() {\r\n    this.Clear();\r\n  }\r\n\r\n  // \tAPI Methods\r\n  public Clear() {\r\n    this.loaders = [];\r\n  }\r\n\r\n  public Set(loading: boolean) {\r\n    if (loading) {\r\n      this.loaders.push(loading);\r\n    } else if (this.loaders && this.loaders.length > 0) {\r\n      this.loaders.splice(0, 1);\r\n    }\r\n  }\r\n\r\n  // \tHelpers\r\n}\r\n","export class Pageable<T> {\r\n  public Items: T[];\r\n\r\n  public TotalRecords: number;\r\n}\r\n\r\n","export class Application {\r\n  public AccessRights?: string[];\r\n\r\n  public Container?: string;\r\n\r\n  public Description?: string;\r\n\r\n  public Hosts?: string[];\r\n\r\n  public ID?: string;\r\n\r\n  public IsPrivate?: boolean;\r\n\r\n  public IsReadOnly?: boolean;\r\n\r\n  public Licenses?: string[];\r\n\r\n  public Name: string;\r\n\r\n  public PathRegex: string;\r\n\r\n  public Priority?: number;\r\n\r\n  public QueryRegex?: string;\r\n\r\n  public UserAgentRegex?: string;\r\n}\r\n\r\nexport class DAFApplicationConfig {\r\n  public ApplicationID?: string;\r\n\r\n  public ID?: string;\r\n\r\n  public Lookup?: string;\r\n\r\n  public Priority?: number;\r\n}\r\n\r\nexport class DAFAPIApplicationConfig extends DAFApplicationConfig {\r\n  public APIRoot?: string;\r\n\r\n  public InboundPath?: string;\r\n\r\n  public Methods?: string;\r\n\r\n  public Security?: string;\r\n}\r\n\r\nexport class DAFViewApplicationConfig extends DAFApplicationConfig {\r\n  public BaseHref?: string;\r\n\r\n  public NPMPackage?: string;\r\n\r\n  public PackageVersion?: string;\r\n\r\n  public StateConfig?: any;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router, NavigationCancel, NavigationEnd, NavigationError, NavigationStart } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouterHelpersService {\r\n  // \tConstructors\r\n  constructor(protected route: ActivatedRoute, protected router: Router) {}\r\n\r\n  // \tAPI Methods\r\n  public RunOnNavigation(action: (event: any) => void, navEventType: any = null) {\r\n    return this.router.events.subscribe((event: any) => {\r\n      if (navEventType == null || event instanceof navEventType) {\r\n        action(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  public RunOnNavigationCancel(action: (event: any) => void) {\r\n    return this.RunOnNavigation(action, NavigationCancel);\r\n  }\r\n\r\n  public RunOnNavigationEnd(action: (event: any) => void) {\r\n    return this.RunOnNavigation(action, NavigationEnd);\r\n  }\r\n\r\n  public RunOnNavigationError(action: (event: any) => void) {\r\n    return this.RunOnNavigation(action, NavigationError);\r\n  }\r\n\r\n  public RunOnNavigationStart(action: (event: any) => void) {\r\n    return this.RunOnNavigation(action, NavigationStart);\r\n  }\r\n\r\n  public RunOnQueryParam(param: string, action: (params: any) => void, checkVal: any = null) {\r\n    return this.route.queryParams.subscribe((params: any) => {\r\n      if ((checkVal == null && params[param] != null) || (checkVal != null && params[param] === checkVal)) {\r\n        action(params);\r\n      }\r\n    });\r\n  }\r\n\r\n  public RunOnRouteParam(param: string, action: (params: any) => void, checkVal: any = null) {\r\n    return this.route.params.subscribe((params: any) => {\r\n      if ((checkVal == null && params[param] != null) || (checkVal != null && params[param] === checkVal)) {\r\n        action(params);\r\n      }\r\n    });\r\n  }\r\n}\r\n","export class StateAction {\r\n  public Arguments: any = {};\r\n\r\n  public Images?: ImageMessage[];\r\n\r\n  public Type: string;\r\n}\r\n\r\nexport class ImageMessage {\r\n  public Data: any;\r\n\r\n  public DataString: string;\r\n\r\n  public Headers: string;\r\n}\r\n\r\n","import * as signalR from '@aspnet/signalr';\r\nimport { ObservableContextService } from '../api/observable-context/observable-context.service';\r\nimport { StateAction } from './state-action.model';\r\nimport { Injector, EventEmitter, Output } from '@angular/core';\r\nimport {\r\n  Subject,\r\n  Subscription,\r\n  forkJoin,\r\n  BehaviorSubject,\r\n  Observable,\r\n} from 'rxjs';\r\nimport { RealTimeConnection } from './../api/real-time/real-time.connection';\r\nimport { LCUServiceSettings } from '../api/lcu-service-settings';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Status } from '../status';\r\n\r\n//  TODO:  Need to manage reconnection to hub scenarios here\r\n\r\nexport abstract class StateContext<T> extends ObservableContextService<T> {\r\n  //  Fields\r\n  protected connectedToState: BehaviorSubject<Status>;\r\n\r\n  protected groupName: string;\r\n\r\n  protected http: HttpClient;\r\n\r\n  protected rt: RealTimeConnection;\r\n\r\n  protected startSub: Subscription;\r\n\r\n  //  Properties\r\n  public ConnectedToState: Observable<Status>;\r\n\r\n  public ReconnectionAttempt: Subject<boolean>;\r\n\r\n  public Settings: LCUServiceSettings;\r\n\r\n  //  Constructors\r\n  constructor(protected injector: Injector) {\r\n    super();\r\n\r\n    this.connectedToState = new BehaviorSubject<Status>(<Status>{\r\n      Code: -1,\r\n      Message: 'Initialized',\r\n    });\r\n\r\n    this.ConnectedToState = this.connectedToState.asObservable();\r\n\r\n    this.http = injector.get(HttpClient);\r\n\r\n    this.ReconnectionAttempt = new Subject<boolean>();\r\n\r\n    this.Settings = injector.get(LCUServiceSettings);\r\n\r\n    const rtUrl = this.buildHubUrl('');\r\n\r\n    const actionUrl = this.loadActionUrl('');\r\n\r\n    this.rt = new RealTimeConnection(this.http, rtUrl, actionUrl);\r\n\r\n    this.rt.ReconnectionAttempt.subscribe((val: boolean) => {\r\n      this.ReconnectionAttempt.next(val);\r\n    });\r\n\r\n    this.setup();\r\n  }\r\n\r\n  //  API Methods\r\n  public Execute(action: StateAction) {\r\n    return this.executeAction(action);\r\n  }\r\n\r\n  public $Refresh(args: any = {}) {\r\n    this.Execute({\r\n      Arguments: args,\r\n      Type: 'Refresh',\r\n    });\r\n  }\r\n\r\n  public async Start(shouldUpdate: boolean) {\r\n    if (!this.startSub) {\r\n      this.startSub = this.rt.Started.subscribe(async () => {\r\n        const groupName = await this.connectToState(shouldUpdate);\r\n\r\n        this.setupReceiveState(groupName);\r\n\r\n        this.connectedToState.next(<Status>{ Code: 0, Message: 'Success' });\r\n\r\n        this.callRefresh();\r\n      });\r\n\r\n      this.rt.Start();\r\n    }\r\n  }\r\n\r\n  //  Helpers\r\n  protected buildActionUrl(urlRoot: string) {\r\n    const url = this.loadActionUrl(urlRoot);\r\n\r\n    return url;\r\n  }\r\n\r\n  protected buildHubUrl(urlRoot: string) {\r\n    const url = this.loadHubUrl(urlRoot);\r\n\r\n    return url;\r\n  }\r\n\r\n  protected callRefresh() {\r\n    this.$Refresh();\r\n  }\r\n\r\n  protected async connectToState(shouldUpdate: boolean): Promise<string> {\r\n    const stateKey = this.loadStateKey();\r\n\r\n    const stateName = this.loadStateName();\r\n\r\n    const env = this.loadEnvironment();\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n      this.rt\r\n        .InvokeAction('ConnectToState', this.loadHeaders(), {\r\n          ShouldSend: shouldUpdate,\r\n          Key: stateKey,\r\n          State: stateName,\r\n          Environment: env,\r\n        })\r\n        .subscribe({\r\n          next: (req: any) => {\r\n            if (req.status && req.status.code === 0) {\r\n              resolve(req.groupName);\r\n            } else {\r\n              reject(\r\n                req.status\r\n                  ? req.status.message\r\n                  : 'Unknown issue connecting to state.'\r\n              );\r\n            }\r\n          },\r\n          error: (err) => reject(err),\r\n          // complete: () => console.log('Observer got a complete notification'),\r\n        });\r\n    });\r\n  }\r\n\r\n  protected defaultValue(): T {\r\n    return <T>{};\r\n  }\r\n\r\n  protected async executeAction(action: StateAction) {\r\n    const stateKey = this.loadStateKey();\r\n\r\n    const stateName = this.loadStateName();\r\n\r\n    return this.rt\r\n      .InvokeAction(action.Type, this.loadHeaders(), {\r\n        ...action,\r\n        Key: stateKey,\r\n        State: stateName,\r\n      })\r\n      .subscribe();\r\n  }\r\n\r\n  protected loadActionPath() {\r\n    const actionRoot = this.loadStateActionRoot();\r\n\r\n    return `${actionRoot}`; // ?lcu-app-id=${this.Settings.AppConfig.ID}&lcu-app-ent-api-key=${this.Settings.AppConfig.EnterpriseAPIKey}`;\r\n  }\r\n\r\n  protected loadActionUrl(urlRoot: string) {\r\n    const apiRoot = this.Settings ? this.Settings.APIRoot || '' : '';\r\n\r\n    const actionPath = this.loadActionPath();\r\n\r\n    return `${apiRoot}${urlRoot || ''}${actionPath}`;\r\n  }\r\n\r\n  protected loadEnvironment() {\r\n    let env = this.Settings.StateConfig\r\n      ? this.Settings.StateConfig.Environment\r\n      : null;\r\n\r\n    if (!env) {\r\n      env = '';\r\n    }\r\n\r\n    return env;\r\n  }\r\n\r\n  protected loadHeaders(): { [header: string]: string | string[] } {\r\n    return {\r\n      'lcu-ent-api-key': this.Settings.AppConfig.EnterpriseAPIKey,\r\n      'lcu-hub-name': this.loadStateName(),\r\n      'lcu-state-key': this.loadStateKey(),\r\n      'lcu-environment': this.loadEnvironment(),\r\n      'lcu-username-mock': this.loadUsernameMock(),\r\n    };\r\n  }\r\n\r\n  protected loadHubPath() {\r\n    const stateRoot = this.loadStateRoot();\r\n\r\n    const env = this.loadEnvironment();\r\n\r\n    const unmock = this.loadUsernameMock();\r\n\r\n    return `${stateRoot}?lcu-app-ent-api-key=${this.Settings.AppConfig.EnterpriseAPIKey}&lcu-environment=${env}&lcu-username-mock=${unmock}`;\r\n  }\r\n\r\n  protected loadHubUrl(urlRoot: string) {\r\n    const apiRoot = this.Settings ? this.Settings.APIRoot || '' : '';\r\n\r\n    const hubPath = this.loadHubPath();\r\n\r\n    return `${apiRoot}${urlRoot || ''}${hubPath}`;\r\n  }\r\n\r\n  protected abstract loadStateKey(): string;\r\n\r\n  protected abstract loadStateName(): string;\r\n\r\n  protected loadStateRoot() {\r\n    const stateRoot =\r\n      this.Settings.StateConfig && this.Settings.StateConfig.Root !== undefined\r\n        ? this.Settings.StateConfig.Root\r\n        : '';\r\n\r\n    return `${stateRoot}/${this.loadStateName()}`;\r\n  }\r\n\r\n  protected loadStateActionRoot() {\r\n    const stateActinRoot =\r\n      this.Settings.StateConfig &&\r\n      this.Settings.StateConfig.ActionRoot !== undefined\r\n        ? this.Settings.StateConfig.ActionRoot\r\n        : '';\r\n\r\n    return `${stateActinRoot}/${this.loadStateName()}`;\r\n  }\r\n\r\n  protected loadUsernameMock() {\r\n    return this.Settings.StateConfig && this.Settings.StateConfig.UsernameMock\r\n      ? this.Settings.StateConfig.UsernameMock\r\n      : '';\r\n  }\r\n\r\n  protected setup() {\r\n    this.Start(false).then();\r\n  }\r\n\r\n  protected setupReceiveState(groupName: string) {\r\n    this.rt.RegisterHandler(`ReceiveState=>${groupName}`).subscribe((req) => {\r\n      this.subject.next(req);\r\n    });\r\n  }\r\n}\r\n","import {  NgModule, ModuleWithProviders  } from '@angular/core';\r\nimport {  DragDropModule  } from '@angular/cdk/drag-drop';\r\nimport {  CdkTableModule  } from '@angular/cdk/table';\r\n\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule, MatTableDataSource } from '@angular/material/table';\r\nimport { MatSortModule, MatSort } from '@angular/material/sort';\r\nimport { MatPaginatorModule, MatPaginator } from '@angular/material/paginator';\r\n\r\nconst materialModules: Array<any> = [\r\n      MatAutocompleteModule,\r\n      MatBadgeModule,\r\n      MatButtonModule,\r\n      MatButtonToggleModule,\r\n      MatCardModule,\r\n      MatCheckboxModule,\r\n      MatChipsModule,\r\n      MatDatepickerModule,\r\n      MatDialogModule,\r\n      MatDividerModule,\r\n      MatExpansionModule,\r\n      MatFormFieldModule,\r\n      MatGridListModule,\r\n      MatIconModule,\r\n      MatInputModule,\r\n      MatListModule,\r\n      MatMenuModule,\r\n      MatPaginatorModule,\r\n      MatProgressBarModule,\r\n      MatProgressSpinnerModule,\r\n      MatRadioModule,\r\n      MatSelectModule,\r\n      MatSidenavModule,\r\n      MatSlideToggleModule,\r\n      MatSliderModule,\r\n      MatSnackBarModule,\r\n      MatSortModule,\r\n      MatStepperModule,\r\n      MatTableModule,\r\n      MatTabsModule,\r\n      MatToolbarModule,\r\n      MatTooltipModule,\r\n      MatTreeModule,\r\n      // CDK Modules\r\n      CdkTableModule,\r\n      DragDropModule,\r\n    ];\r\n\r\nconst providers: Array<any> = [\r\n  MatBottomSheet,\r\n  MatPaginator,\r\n  MatSort,\r\n  MatTableDataSource\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [materialModules],\r\n  exports: [materialModules]\r\n })\r\n\r\nexport class MaterialModule {\r\n  static forRoot(): ModuleWithProviders<MaterialModule> {\r\n    return {\r\n      ngModule: MaterialModule,\r\n      providers: [ providers ]\r\n     };\r\n   }\r\n }\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n *\r\n * Data pipe constants\r\n */\r\n\r\nexport class DataPipeConstants {\r\n    public static readonly DATE_FMT = 'dd/MMM/yyyy';\r\n    public static readonly DATE_SHORTDATE = 'M/d/yy';\r\n    public static readonly DATE_MEDIUMDATE = 'MMM d, y';\r\n    public static readonly DATE_FULLDATE = 'EEEE, MMMM d, y';\r\n    public static readonly DATE_TIME_FMT = `${DataPipeConstants.DATE_FMT} hh:mm:ss`;\r\n    public static readonly DATE_DAY_TIME = 'EEE h a';\r\n    public static readonly PIPE_DATE = 'date';\r\n    public static readonly PIPE_SHORTDATE = 'shortdate';\r\n    public static readonly PIPE_MEDIUMDATE = 'mediumdate';\r\n    public static readonly PIPE_FULLDATE = 'fulldate';\r\n    public static readonly PIPE_DECIMAL_TWO = 'decimalTwo';\r\n    public static readonly PIPE_DECIMAL_FOUR = 'decimalfour';\r\n    public static readonly PIPE_EPOCH = 'epoch';\r\n    public static readonly PIPE_NUMBER = 'number';\r\n    public static readonly PIPE_PERCENTAGE = 'percentage';\r\n    public static readonly PIPE_PERCENTAGE_DECIMAL = 'percentagedecimal';\r\n    public static readonly PIPE_TEMP_FAHRENHEIT = 'fahrenheit';\r\n    public static readonly PIPE_TEMP_CELSIUS = 'celsius';\r\n    public static readonly PIPE_TEMP_KELVIN = 'kelvin';\r\n    public static readonly PIPE_MPH = 'mph';\r\n}","// @dynamic\r\n\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n */\r\n\r\nexport class TemperatureConversion {\r\n\r\n    /**\r\n     * Convert fahrenheit to celsius\r\n     * @param val fahrenheit value\r\n     */\r\n    public static FahrenheitToCelsius(val: number): number {\r\n        return (val - 32) / 1.8;\r\n    }\r\n\r\n    /**\r\n     * Convert fahrenheit to kelvin\r\n     * @param val fahrenheit value\r\n     */\r\n    public static FahrenheitToKelvin(val: number): number {\r\n        return ((val - 32) / 1.8) + 273.15;\r\n    }\r\n\r\n    /**\r\n     * Convert celsius to fahrenheit\r\n     * @param val celsius value\r\n     */\r\n    public static CelsiusToFahrenheit(val: number): number {\r\n        return (val * 1.8) + 32;\r\n    }\r\n\r\n    /**\r\n     * Convert celsius to kelvin\r\n     * @param val celsius value\r\n     */\r\n    public static CelsiusToKelvin(val: number): number {\r\n        return val + 273.15;\r\n    }\r\n\r\n    /**\r\n     * Convert kelvin to fahrenheit\r\n     * @param val kelvin value\r\n     */\r\n    public static KelvinToFahrenheit(val: number): number {\r\n        return ((val - 273.15) * 1.8 ) + 32;\r\n    }\r\n\r\n    /**\r\n     * Convert kelvin to celsius\r\n     * @param val kelvin value\r\n     */\r\n    public static KelvinToCelsius(val: number): number {\r\n        return val - 273.15;\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe, DecimalPipe, PercentPipe } from '@angular/common';\r\nimport { DataPipeConstants } from '../constants/data-pipe.constants';\r\nimport { TemperatureConversion } from '../conversion/temperature.conversion';\r\n\r\n\r\n@Pipe({\r\n  name: 'dataPipes'\r\n})\r\n\r\n/**\r\n * Pipes for datagrid values\r\n */\r\nexport class DataPipes implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (!args) {\r\n      return value;\r\n    }\r\n\r\n    /**\r\n     * Return date M/d/YYYY\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_SHORTDATE) {\r\n      const pipe = new DatePipe('en-US');\r\n      const transformed = pipe.transform(value, DataPipeConstants.DATE_SHORTDATE);\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return date\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_DATE) {\r\n      const pipe = new DatePipe('en-US');\r\n      const transformed = pipe.transform(value, DataPipeConstants.DATE_FMT);\r\n      return transformed;\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n     * Return date MMM d, y\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_MEDIUMDATE) {\r\n      const pipe = new DatePipe('en-US');\r\n      const transformed = pipe.transform(value, 'MMM d, y');\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return date 'EEEE, MMMM d, y'\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_FULLDATE) {\r\n      const pipe = new DatePipe('en-US');\r\n      const transformed = pipe.transform(value, DataPipeConstants.DATE_FULLDATE);\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return date from epoch value\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_EPOCH) {\r\n      const pipe = new DatePipe('en-US');\r\n      const transformed = pipe.transform(value * 1000, DataPipeConstants.DATE_DAY_TIME);\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return number with decimal\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_NUMBER) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      const transformed = pipe.transform(value, '1.0-0');\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return return number with mph appended\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_MPH) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      const transformed = pipe.transform(value, '1.0-0');\r\n      return transformed + ' mph';\r\n    }\r\n\r\n    /**\r\n     * Return percentage\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_PERCENTAGE) {\r\n      const pipe = new PercentPipe('en-US');\r\n      const transformed = pipe.transform(value);\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return percentage\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_PERCENTAGE_DECIMAL) {\r\n      const pipe = new PercentPipe('en-US');\r\n      const transformed = pipe.transform(value, '2.2-2');\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return percentage with two decimals\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_DECIMAL_TWO) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      const transformed = pipe.transform(value, '1.2-2');\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return percentage with four decimals\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_DECIMAL_FOUR) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      const transformed = pipe.transform(value, '1.4-4');\r\n      return transformed;\r\n    }\r\n\r\n    /**\r\n     * Return temperature in fahrenheit, append °F\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_TEMP_FAHRENHEIT) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      // const temperature = (value * 32) + 1.8;\r\n      const transformed = pipe.transform(value, '1.0-0');\r\n\r\n      return transformed + ' °F';\r\n    }\r\n\r\n    /**\r\n     * Return temperature in kelvin, append °K\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_TEMP_KELVIN) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      // const temperature = (value * 32) + 1.8;\r\n      const temperature = TemperatureConversion.FahrenheitToKelvin(value);\r\n      const transformed = pipe.transform(temperature, '1.0-0');\r\n\r\n      return transformed + ' °K';\r\n    }\r\n\r\n    /**\r\n     * Return temperature in celsius, append °C\r\n     */\r\n    if (args.toLowerCase() === DataPipeConstants.PIPE_TEMP_CELSIUS) {\r\n      const pipe = new DecimalPipe('en-US');\r\n      const temperature = TemperatureConversion.FahrenheitToCelsius(value);\r\n      const transformed = pipe.transform(temperature, '1.0-0');\r\n\r\n      return transformed + ' °C';\r\n    }\r\n\r\n\r\n    /**\r\n     * IF none of the above work, return the original value\r\n     */\r\n    return value;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n/**\r\n * Pipe used to sanitze html\r\n */\r\n@Pipe({\r\n    name: 'sanitizeHtml'\r\n})\r\nexport class SanitizeHtmlPipe implements PipeTransform  {\r\n  constructor(private sanitized: DomSanitizer) {}\r\n  transform(value: string) {\r\n    return this.sanitized.bypassSecurityTrustHtml(value);\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'decamelize'\r\n})\r\nexport class DecamelizePipe implements PipeTransform {\r\n  transform(value: string, separator?: string): string {\r\n    const sep = separator ? separator : ' ';\r\n\r\n    return value\r\n          .charAt(0).toUpperCase() + value.slice(1)\r\n          .replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\r\n          .replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2');\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DataPipes } from './../utils/pipes/data.pipes';\r\nimport { SanitizeHtmlPipe } from './../utils/pipes/sanitze-html.pipe';\r\nimport { DecamelizePipe } from '../utils/pipes/decamelize.pipe';\r\n\r\n@NgModule({\r\n    declarations: [DataPipes, SanitizeHtmlPipe, DecamelizePipe],\r\n    imports: [CommonModule],\r\n    exports: [DataPipes, SanitizeHtmlPipe, DecamelizePipe]\r\n})\r\n\r\nexport class PipeModule {\r\n    static forRoot(): ModuleWithProviders<PipeModule> {\r\n    return {\r\n        ngModule: PipeModule,\r\n        providers: [],\r\n    };\r\n}\r\n}\r\n","import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n/**\r\n * Directive for setting theme color to a element, color comes from\r\n * a local stylesheet\r\n *\r\n * @use as an attribute: lcuColor=\"primary-A700\", sets the class\r\n * .primary-A700 {} to the host element\r\n */\r\n\r\n/**\r\n * SCSS class types\r\n */\r\n// type ColorClasses = 'primary-500' | 'accent-500' | 'warn-500';\r\n\r\n@Directive({\r\n  selector: '[lcuThemeColor]'\r\n})\r\n\r\nexport class ThemeColorDirective {\r\n\r\n/**\r\n * Set the current theme class to the element\r\n */\r\n  @Input() set lcuThemeColor(val: string) {\r\n\r\n    // this.renderer.removeClass(this.element.nativeElement, `${val}`);\r\n    this.renderer.addClass(this.element.nativeElement, `${val}`);\r\n\r\n    // this.readProperty('background-color');\r\n  }\r\n\r\n  constructor(\r\n    protected element: ElementRef,\r\n    protected renderer: Renderer2\r\n  ) { }\r\n\r\n  /**\r\n   * Get the value of a specific style property\r\n   *\r\n   * @param property style property\r\n   */\r\n  protected readProperty(property: string): void {\r\n    console.log('element', window.getComputedStyle(this.element.nativeElement).getPropertyValue(property));\r\n    // console.log('element', window.getComputedStyle(this.element.nativeElement));\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ThemeColorDirective } from '../directives/themes/theme-color.directive';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ThemeColorDirective\r\n    ],\r\n    imports: [CommonModule],\r\n    exports: [ThemeColorDirective]\r\n})\r\n\r\nexport class DirectiveModule {\r\n    static forRoot(): ModuleWithProviders<DirectiveModule> {\r\n    return {\r\n        ngModule: DirectiveModule,\r\n        providers: [],\r\n    };\r\n}\r\n}\r\n","export class Base64Model{\r\n    public Blob: string;\r\n\r\n    public File: File;\r\n    \r\n    constructor(blob: string, file:File){\r\n        this.Blob = blob;\r\n        this.File = file;\r\n    }\r\n}","import { DataFlowOutput } from './DataFlowOutput';\r\n\r\nexport class DataFlow {\r\n  public Description?: string;\r\n\r\n  public ID?: string;\r\n\r\n  public Lookup?: string;\r\n\r\n  public ModulePacks?: string[];\r\n\r\n  public ModuleSettings?: { [moduleId: string]: any };\r\n\r\n  public Name?: string;\r\n\r\n  public Output?: DataFlowOutput;\r\n}\r\n","import { Icon } from '../../icon';\r\n\r\nexport class DataFlowAction {\r\n  public Action: string;\r\n\r\n  public Disabled?: boolean;\r\n\r\n  public Icon?: Icon;\r\n\r\n  public Order?: number;\r\n\r\n  public Text: string;\r\n}\r\n","import { DataFlowOutput } from './DataFlowOutput';\r\n\r\nexport class DataFlowActionEvent {\r\n  public Action: string;\r\n\r\n  public Output: DataFlowOutput;\r\n}\r\n","export class DataFlowLayout {\r\n  public View: any;\r\n\r\n  public Palette: any;\r\n\r\n  public Renderer: any;\r\n\r\n  public Toolkit: any;\r\n}\r\n","import { Status } from '../../status';\r\nimport { DataFlowModuleDisplay } from './DataFlowModuleDisplay';\r\n\r\nexport class DataFlowModule {\r\n  public Deleted: boolean;\r\n\r\n  public Display: DataFlowModuleDisplay;\r\n\r\n  public ID: string;\r\n\r\n  public Settings: any;\r\n\r\n  public Status: Status;\r\n\r\n  public Text: string;\r\n}\r\n","export enum DataFlowModuleControlTypes {\r\n  Direct = 'Direct',\r\n  Flow = 'Flow',\r\n  Gate = 'Gate',\r\n  Helper = 'Helper'\r\n}\r\n","import { Icon } from '../../icon';\r\nimport { DataFlowAction } from './DataFlowAction';\r\nimport { DataFlowModuleShapeTypes } from './DataFlowModuleShapeTypes';\r\n\r\nexport class DataFlowModuleDisplay {\r\n  public Actions?: DataFlowAction[];\r\n\r\n  public Category: string;\r\n\r\n  public Element: string;\r\n\r\n  public Height: number;\r\n\r\n  public Icon: Icon;\r\n\r\n  public Left: number;\r\n\r\n  public ModuleType: string;\r\n\r\n  public Shape: DataFlowModuleShapeTypes;\r\n\r\n  public Toolkit: string;\r\n\r\n  public Top: number;\r\n\r\n  public Width: number;\r\n}\r\n","import { DataFlowModuleControlTypes } from './DataFlowModuleControlTypes';\r\n\r\nexport class DataFlowModuleOption {\r\n  public Active: boolean;\r\n\r\n  public ControlType: DataFlowModuleControlTypes;\r\n\r\n  public Description: string;\r\n\r\n  public IncomingConnectionLimit: number;\r\n\r\n  public IncomingConnectionTypes: string[];\r\n\r\n  public ModuleType: string;\r\n\r\n  public Name: string;\r\n\r\n  public OutgoingConnectionLimit: number;\r\n\r\n  public OutgoingConnectionTypes: string[];\r\n\r\n  public Settings: any;\r\n\r\n  public Visible: boolean;\r\n}\r\n","export class DataFlowModulePack {\r\n  public Description: string;\r\n\r\n  public Lookup: string;\r\n\r\n  public Name: string;\r\n\r\n  public Toolkit: string;\r\n}\r\n","import { DataFlowModulePack } from './DataFlowModulePack';\r\nimport { DataFlowModuleOption } from './DataFlowModuleOption';\r\nimport { DataFlowModuleDisplay } from './DataFlowModuleDisplay';\r\n\r\nexport class DataFlowModulePackSetup {\r\n  public Displays: DataFlowModuleDisplay[];\r\n\r\n  public Options: DataFlowModuleOption[];\r\n\r\n  public Pack: DataFlowModulePack;\r\n}\r\n","export enum DataFlowModuleShapeTypes {\r\n  Rectangle = 'Rectangle',\r\n  Circle = 'Circle',\r\n  Ellipse = 'Ellipse',\r\n  Custom = 'Custom'\r\n}\r\n","import { DataFlowStream } from './DataFlowStream';\r\nimport { DataFlowModule } from './DataFlowModule';\r\n\r\nexport class DataFlowOutput {\r\n  public Modules: DataFlowModule[];\r\n\r\n  public Streams: DataFlowStream[];\r\n}\r\n","export class DataFlowStream {\r\n  public ID?: string;\r\n\r\n  public InputModuleID: string;\r\n\r\n  public OutputModuleID: string;\r\n\r\n  public Title: string;\r\n}\r\n","export class IdeActivity {\r\n  public Icon: string;\r\n\r\n  public IconSet: string;\r\n\r\n  public Lookup: string;\r\n\r\n  public Title: string;\r\n}\r\n","export class IdeEditor {\r\n  public Editor: string;\r\n\r\n  public Lookup: string;\r\n\r\n  public Title: string;\r\n\r\n  public Toolkit: string;\r\n}\r\n","export class IdePanel {\r\n  public Lookup: string;\r\n\r\n  public Panel: string;\r\n\r\n  public Title: string;\r\n\r\n  public Toolkit: string;\r\n}\r\n","export class IdeSideBar {\r\n  public CurrentAction?: IdeSideBarAction;\r\n\r\n  public Actions: IdeSideBarAction[];\r\n\r\n  public Title: string;\r\n}\r\n\r\nexport class IdeSideBarAction {\r\n  public Action: string;\r\n\r\n  public Group: string;\r\n\r\n  public Section: string;\r\n\r\n  public Title: string;\r\n}\r\n","export class NapkinIDESolution {\r\n\r\n}\r\n","export class ValidationMessageModel {\r\n  public Type: string;\r\n  public Message: string;\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n *\r\n * Email constants\r\n */\r\n\r\nexport class EmailValidationMessagesConstants {\r\n\r\n  /**\r\n   * Constant for email pattern\r\n   */\r\n  public static readonly PATTERN: string = 'Enter a valid email';\r\n\r\n  /**\r\n   * Constant for email required\r\n   */\r\n  public static readonly REQUIRED: string = 'Email is required';\r\n\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n *\r\n * Username constants\r\n */\r\n\r\nexport class UserValidationMessagesConstants {\r\n\r\n  /**\r\n   * Constant for username pattern\r\n   */\r\n  public static readonly PATTERN: string = 'Username cannot end or begin with _ or .';\r\n\r\n  /**\r\n   * Constant for username required\r\n   */\r\n  public static readonly REQUIRED: string = 'Username is required';\r\n\r\n  /**\r\n   * Constant for valid username\r\n   */\r\n  public static readonly VALID: string = 'Your username has already been taken';\r\n\r\n  /**\r\n   * Constant for username max length\r\n   *\r\n   * @param length charcter length\r\n   */\r\n  public static MAX_LENGTH(length: number): string {\r\n    return 'Username cannon be more than ' + length.toString() + ' characters long.';\r\n  }\r\n\r\n  /**\r\n   * Constant for username min length\r\n   *\r\n   * @param length charcter length\r\n   */\r\n  public static MIN_LENGTH(length: number): string {\r\n    return 'Username must be at least ' + length.toString() + ' characters long.';\r\n  }\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\n\r\nexport class Constants {\r\n  public static readonly REQUIRED: string = 'required';\r\n\r\n  public static readonly MIN_LENGTH: string = 'minlength';\r\n\r\n  public static readonly MAX_LENGTH: string = 'maxlength';\r\n\r\n  public static readonly PATTERN: string = 'pattern';\r\n\r\n  public static readonly VALID_USERNAME: string = 'ValidUsername';\r\n\r\n  public static readonly PASSWORDS_MATCH: string = 'PasswordsMatch';\r\n\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n *\r\n * Password / Confirm password constants\r\n */\r\n\r\nexport class PasswordValidationMessagesConstants {\r\n\r\n\r\n  /**\r\n   * Constant for confirm password equal\r\n   */\r\n  public static readonly PASSWORDS_MATCH: string = 'Password mismatch';\r\n\r\n  /**\r\n   * Constant for confirm password required\r\n   */\r\n  public static readonly CONFIRM_REQUIRED: string = 'Confirm password is required';\r\n\r\n  /**\r\n   * Constant for password pattern\r\n   */\r\n  public static readonly PATTERN: string = 'At least one uppercase, one lowercase, one special character, and one number';\r\n\r\n  /**\r\n   * Constant for password required\r\n   */\r\n  public static readonly REQUIRED: string = 'Password is required';\r\n\r\n  /**\r\n   * Constant for password min length\r\n   *\r\n   * @param length charcter length\r\n   */\r\n  public static MIN_LENGTH(length: number): string {\r\n    return 'Password must be at least ' + length.toString() + ' characters long.';\r\n  }\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n *\r\n * Email constants\r\n */\r\n\r\nexport class ZipcodeValidationMessagesConstants {\r\n\r\n    /**\r\n     * Constant for email pattern\r\n     */\r\n    public static readonly PATTERN: string = 'Please enter a valid zipcode';\r\n  \r\n    /**\r\n     * Constant for email required\r\n     */\r\n    public static readonly REQUIRED: string = 'Email is required';\r\n  \r\n  }\r\n  ","import { EmailValidationMessagesConstants } from './../utils/constants/email-validation-messages.constants';\r\nimport { ValidationMessageModel } from './../models/validation-message.model';\r\nimport { UserValidationMessagesConstants } from '../utils/constants/user-validation-messages.constants';\r\nimport { Constants } from '../utils/constants/constants';\r\nimport { PasswordValidationMessagesConstants } from '../utils/constants/password-validation-messages.constants';\r\nimport { ZipcodeValidationMessagesConstants } from '../utils/zipcode-validataion-messages.constants';\r\n\r\n// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\nexport class ValidationMessages {\r\n  public static readonly UserName: Array<ValidationMessageModel> = [\r\n    { Type: Constants.REQUIRED, Message: UserValidationMessagesConstants.REQUIRED },\r\n    { Type: Constants.MIN_LENGTH, Message: UserValidationMessagesConstants.MIN_LENGTH(5) },\r\n    { Type: Constants.MAX_LENGTH, Message: UserValidationMessagesConstants.MAX_LENGTH(25) },\r\n    { Type: Constants.PATTERN, Message: UserValidationMessagesConstants.PATTERN },\r\n    { Type: Constants.VALID_USERNAME, Message: UserValidationMessagesConstants.VALID }\r\n  ];\r\n\r\n  public static readonly Email: Array<ValidationMessageModel> = [\r\n    { Type: Constants.REQUIRED, Message: EmailValidationMessagesConstants.REQUIRED },\r\n    { Type: Constants.PATTERN, Message: EmailValidationMessagesConstants.PATTERN }\r\n  ];\r\n\r\n  public static readonly Password: Array<ValidationMessageModel> = [\r\n    { Type: Constants.REQUIRED, Message: PasswordValidationMessagesConstants.REQUIRED },\r\n    { Type: Constants.MIN_LENGTH, Message: PasswordValidationMessagesConstants.MIN_LENGTH(5) },\r\n    { Type: Constants.PATTERN, Message: PasswordValidationMessagesConstants.PATTERN }\r\n  ];\r\n\r\n  public static readonly ConfirmPassword: Array<ValidationMessageModel> = [\r\n    { Type: Constants.REQUIRED, Message: PasswordValidationMessagesConstants.CONFIRM_REQUIRED },\r\n    { Type: Constants.PASSWORDS_MATCH, Message: PasswordValidationMessagesConstants.PASSWORDS_MATCH }\r\n  ];\r\n\r\n  public static readonly Zipcode: Array<ValidationMessageModel> = [\r\n    { Type: Constants.PATTERN, Message: ZipcodeValidationMessagesConstants.PATTERN }\r\n  ];\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\n\r\nexport class EmailValidator {\r\n\r\n  /**\r\n   * Email regular expression pattern, requires domain\r\n   */\r\n // public static readonly EmailPatternDomain: RegExp = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{3,4}$/gmi;\r\n public static readonly EmailPatternDomain: string = '\\[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-z]{2,4}';\r\n\r\n}\r\n","import { FormGroup, FormControl, ValidatorFn, ValidationErrors, AbstractControl } from '@angular/forms';\r\n\r\n\r\n// @dynamic\r\n\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n */\r\nexport class PasswordValidator {\r\n\r\n  /**\r\n   * Password regular expression pattern:\r\n   *\r\n   * At least one upper case English letter\r\n   *\r\n   * At least one lower case Englis letter\r\n   *\r\n   * At least one digit\r\n   *\r\n   * At least one special character\r\n   *\r\n   * Minimum of eight characters\r\n   */\r\n  public static readonly StrongPassword: RegExp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,}$)/gm;\r\n  // public static readonly StrongPassword: string = '\\(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,}$)';\r\n                                                \r\n\r\n  public static readonly MediumPassword: RegExp = /^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})$/gm;\r\n\r\n  /**\r\n   * Check if password and confirm password match\r\n   *\r\n   * @param password password control\r\n   * @param confirm confirm password control\r\n   */\r\n  public static PasswordsMatch(password: AbstractControl, confirm: AbstractControl): ValidatorFn {\r\n\r\n    if (!password || !confirm) { return; }\r\n\r\n    return (formGroup): ValidationErrors => {\r\n      if (password.value !== confirm.value) {\r\n        confirm.setErrors({ PasswordsMatch: true });\r\n      } else {\r\n        confirm.setErrors(null);\r\n      }\r\n      return;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Check if password and confirm password are equal\r\n   *\r\n   * @param formGroup formGroup containing the password and confirm password fields\r\n   */\r\n  // public static PasswordsMatch(formGroup: FormGroup): { [key: string]: any } {\r\n  //   let value: string;\r\n\r\n  //   for (const key in formGroup.controls) {\r\n  //     if (formGroup.controls.hasOwnProperty(key)) {\r\n  //       const control: FormControl = <FormControl>formGroup.controls[key];\r\n\r\n  //       if (value === undefined) {\r\n  //         value = control.value;\r\n  //       } else {\r\n  //         if (value !== control.value) {\r\n  //           return ({ PasswordsMatch: true });\r\n  //           break;\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n\r\n  //   return null;\r\n  // }\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n// import * as libphonenumber from 'google-libphonenumber';\r\n\r\n// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\nexport class PhoneValidator {\r\n\r\n  /**\r\n   * Commenting out for now\r\n   */\r\n// https://angular-templates.io/tutorials/about/angular-forms-and-validations\r\n\r\n  // public static ValidCountryPhone = (countryControl: AbstractControl): ValidatorFn => {\r\n\r\n  //   let subscribe = false;\r\n\r\n  //   return (control: AbstractControl): {[key: string]: boolean} => {\r\n\r\n  //     if (!subscribe) {\r\n  //       subscribe = true;\r\n  //       countryControl.valueChanges.subscribe(() => {\r\n  //         control.updateValueAndValidity();\r\n  //       });\r\n  //     }\r\n\r\n  //     if (control.value !== '') {\r\n  //       try {\r\n\r\n  //         const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance();\r\n  //         const phoneNumber = '' + control.value + '';\r\n  //         const region = countryControl.value;\r\n  //         const pNumber = phoneUtil.parseAndKeepRawInput(phoneNumber, region.iso);\r\n  //         const isValidNumber = phoneUtil.isValidNumber(pNumber);\r\n\r\n  //         if (isValidNumber) {\r\n  //           return undefined;\r\n  //         }\r\n  //       } catch (e) {\r\n  //         console.log(e);\r\n  //         return {\r\n  //           ValidCountryPhone: true\r\n  //         };\r\n  //       }\r\n\r\n  //       return {\r\n  //         ValidCountryPhone: true\r\n  //       };\r\n  //     } else {\r\n  //       return undefined;\r\n  //     }\r\n  //   };\r\n  // }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\n// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\nexport class UserNameValidator {\r\n\r\n/**\r\n * Username regular expression pattern\r\n *\r\n * letters and numbers only\r\n */\r\n // public static readonly UsernamePattern: RegExp = /^[a-z0-9]*$/gmi;\r\n public static readonly UsernamePattern: string = '\\[a-z0-9]*';\r\n\r\n /**\r\n  * Username regular expression pattern\r\n  *\r\n  * letters and numbers\r\n  *\r\n  * Doesn't allow underscore or . at the beginning or end of value\r\n  */\r\n public static readonly UsernameNoUnderscoreDotPattern: RegExp = /^[a-zA-Z0-9]([._](?![._])|[a-zA-Z0-9]){6,18}[a-zA-Z0-9]$/gmi;\r\n\r\n  public static ValidUsername(control: FormControl): { [key: string]: any } {\r\n    if (control.value.toUpperCase() === 'ABC123' || control.value.toUpperCase() === '123ABC') {\r\n      return ({ ValidUsername: true });\r\n    } else {\r\n      return (null);\r\n    }\r\n  }\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\nexport class ZipcodeValidator {\r\n\r\n    /**\r\n     * Regualr expression patterns for global postal codes\r\n     *\r\n     * credit : matthewbednarski\r\n     *\r\n     * https://gist.github.com/jamesbar2/1c677c22df8f21e869cca7e439fc3f5b\r\n     */\r\n\r\n    protected static globalZipCodes = [{\r\n        Note: 'The first two digits (ranging from 10–43) correspond to the province, while the last two digits correspond either to the city/delivery zone (range 01–50) or to the district/delivery zone (range 51–99). Afghanistan Postal code lookup',\r\n        Country: 'Afghanistan',\r\n        ISO: 'AF',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'With Finland, first two numbers are 22.',\r\n        Country: 'Åland Islands',\r\n        ISO: 'AX',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Introduced in 2006, gradually implemented throughout 2007.',\r\n        Country: 'Albania',\r\n        ISO: 'AL',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'First two as in ISO 3166-2:DZ',\r\n        Country: 'Algeria',\r\n        ISO: 'DZ',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes (range 96799)',\r\n        Country: 'American Samoa',\r\n        ISO: 'AS',\r\n        Format: 'NNNNN (optionally NNNNN-NNNN or NNNNN-NNNNNN)',\r\n        Regex: /^\\d{5}(-{1}\\d{4,6})$/\r\n    }, {\r\n        Note: 'Each parish now has its own post code.',\r\n        Country: 'Andorra',\r\n        ISO: 'AD',\r\n        Format: 'CCNNN',\r\n        Regex: /^[Aa][Dd]\\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Angola',\r\n        ISO: 'AO',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Single code used for all addresses.',\r\n        Country: 'Anguilla',\r\n        ISO: 'AI',\r\n        Format: 'AI-2640',\r\n        Regex: /^[Aa][I][-][2][6][4][0]$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Antigua and Barbuda',\r\n        ISO: 'AG',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Codigo Postal Argentino (CPA), where the first A is the province code as in ISO 3166-2:AR, the four numbers are the old postal codes, the three last letters indicate a side of the block. Previously NNNN which &#10;o the minimum requirement as of 2006.',\r\n        Country: 'Argentina',\r\n        ISO: 'AR',\r\n        Format: '1974-1998 NNNN; From 1999 ANNNNAAA',\r\n        Regex: /^\\d{4}|[A-Za-z]\\d{4}[a-zA-Z]{3}$/\r\n    }, {\r\n        Note: 'Previously used NNNNNN system inherited from former Soviet Union.',\r\n        Country: 'Armenia',\r\n        ISO: 'AM',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Aruba',\r\n        ISO: 'AW',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Single code used for all addresses. Part of UK system.',\r\n        Country: 'Ascension island',\r\n        ISO: 'AC',\r\n        Format: 'AAAANAA one code: ASCN 1ZZ',\r\n        Regex: /^[Aa][Ss][Cc][Nn]\\s{0,1}[1][Zz][Zz]$/\r\n    }, {\r\n        Note: 'In general, the first digit identifies the state or territory.',\r\n        Country: 'Australia',\r\n        ISO: 'AU',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'The first digit denotes regions, which are partly identical to one of the nine provinces—called Bundesländer; the last the nearest post office in the area.',\r\n        Country: 'Austria',\r\n        ISO: 'AT',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Previously used NNNNNN system inherited from former Soviet Union.',\r\n        Country: 'Azerbaijan',\r\n        ISO: 'AZ',\r\n        Format: 'CCNNNN',\r\n        Regex: /^[Aa][Zz]\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bahamas',\r\n        ISO: 'BS',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Valid post code numbers are 101 to 1216 with gaps in the range. Known as block number (Arabic: رقم المجمع‎) formally. The first digit in NNN format and the first two digits in NNNN format refer to one of the 12 municipalities of the country. PO Box address doesn\\'t need a block number or city name, just the PO Box number followed by the name of the country, Bahrain.',\r\n        Country: 'Bahrain',\r\n        ISO: 'BH',\r\n        Format: 'NNN or NNNN',\r\n        Regex: /^\\d{3,4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bangladesh',\r\n        ISO: 'BD',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Only one postal code currently assigned. 11000 applies to the General Post Office building in Cheapside, Bridgetown, to enable delivery to Barbados by global package delivery companies whose software requires a postal code.',\r\n        Country: 'Barbados',\r\n        ISO: 'BB',\r\n        Format: 'CCNNNNN',\r\n        Regex: /^[Aa][Zz]\\d{5}$/\r\n    }, {\r\n        Note: 'Retained system inherited from former Soviet Union.',\r\n        Country: 'Belarus',\r\n        ISO: 'BY',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'In general, the first digit gives the province.',\r\n        Country: 'Belgium',\r\n        ISO: 'BE',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Belize',\r\n        ISO: 'BZ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Benin',\r\n        ISO: 'BJ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'AA NN for street addresses, AA AA for P.O. Box addresses. The second half of the postcode identifies the street delivery walk (e.g.: Hamilton HM 12) or the PO Box number range (e.g.: Hamilton HM BX). See Postal codes in Bermuda.',\r\n        Country: 'Bermuda',\r\n        ISO: 'BM',\r\n        Format: 'AA NN or AA AA',\r\n        Regex: /^[A-Za-z]{2}\\s([A-Za-z]{2}|\\d{2})$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bhutan',\r\n        ISO: 'BT',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bolivia',\r\n        ISO: 'BO',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bonaire, Sint Eustatius and Saba',\r\n        ISO: 'BQ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bosnia and Herzegovina',\r\n        ISO: 'BA',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Botswana',\r\n        ISO: 'BW',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Código de Endereçamento Postal (CEP): -000 to -899 are used for streets, roads, avenues, boulevards; -900 to -959 are used for buildings with a high postal use; -960 to -969 are for promotional use; -970 to -989 are post offices and regular P.O. boxes; and -990 to -998 are used for community P.O. boxes. -999 is used for special services.',\r\n        Country: 'Brazil',\r\n        ISO: 'BR',\r\n        Format: 'NNNNN-NNN (NNNNN from 1971 to 1992)',\r\n        Regex: /^\\d{5}-\\d{3}$/\r\n    }, {\r\n        Note: 'Single code used for all addresses.',\r\n        Country: 'British Antarctic Territory',\r\n        ISO: '',\r\n        Format: 'BIQQ 1ZZ',\r\n        Regex: /^[Bb][Ii][Qq]{2}\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: 'UK territory, but not UK postcode.',\r\n        Country: 'British Indian Ocean Territory',\r\n        ISO: 'IO',\r\n        Format: 'AAAANAA one code: BBND 1ZZ',\r\n        Regex: /^[Bb]{2}[Nn][Dd]\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: 'Specifically, VG1110 through VG1160[1]',\r\n        Country: 'British Virgin Islands',\r\n        ISO: 'VG',\r\n        Format: 'CCNNNN',\r\n        Regex: /^[Vv][Gg]\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Brunei',\r\n        ISO: 'BN',\r\n        Format: 'AANNNN',\r\n        Regex: /^[A-Za-z]{2}\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Bulgaria',\r\n        ISO: 'BG',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Burkina Faso',\r\n        ISO: 'BF',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Burundi',\r\n        ISO: 'BI',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Cambodia',\r\n        ISO: 'KH',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Cameroon',\r\n        ISO: 'CM',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'The system was gradually introduced starting in April 1971 in Ottawa. The letters D, F, I, O, Q, and U are not used to avoid confusion with other letters or numbers.',\r\n        Country: 'Canada',\r\n        ISO: 'CA',\r\n        Format: 'ANA NAN',\r\n        Regex: /^(?=[^DdFfIiOoQqUu\\d\\s])[A-Za-z]\\d(?=[^DdFfIiOoQqUu\\d\\s])[A-Za-z]\\s{0,1}\\d(?=[^DdFfIiOoQqUu\\d\\s])[A-Za-z]\\d$/\r\n    }, {\r\n        Note: 'The first digit indicates the island.',\r\n        Country: 'Cape Verde',\r\n        ISO: 'CV',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Cayman Islands',\r\n        ISO: 'KY',\r\n        Format: 'CCN-NNNN',\r\n        Regex: /^[Kk][Yy]\\d[-\\s]{0,1}\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Central African Republic',\r\n        ISO: 'CF',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Chad',\r\n        ISO: 'TD',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'May only be required for bulk mail.',\r\n        Country: 'Chile',\r\n        ISO: 'CL',\r\n        Format: 'NNNNNNN (NNN-NNNN)',\r\n        Regex: /^\\d{7}\\s\\(\\d{3}-\\d{4}\\)$/\r\n    }, {\r\n        Note: 'A postal code or youbian (邮编) in a subordinate division will have the same first two digits as its governing one (see Political divisions of China. The postal services in Macau or Hong Kong Special Administrative Regions remain separate from Mainland China, with no post code system currently used.',\r\n        Country: 'China',\r\n        ISO: 'CN',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Part of the Australian postal code system.',\r\n        Country: 'Christmas Island',\r\n        ISO: 'CX',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Part of the Australian postal code system.',\r\n        Country: 'Cocos (Keeling) Island',\r\n        ISO: 'CC',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'First NN = 32 departments Códigos Postales | 4-72',\r\n        Country: 'Colombia',\r\n        ISO: 'CO',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Comoros',\r\n        ISO: 'KM',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Congo (Brazzaville)',\r\n        ISO: 'CG',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Congo, Democratic Republic',\r\n        ISO: 'CD',\r\n        Format: '- no codes -',\r\n        Regex: /^[Cc][Dd]$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Cook Islands',\r\n        ISO: 'CK',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'First codes the provinces, next two the canton, last two the district.',\r\n        Country: 'Costa Rica',\r\n        ISO: 'CR',\r\n        Format: 'NNNNN (NNNN until 2007)',\r\n        Regex: /^\\d{4,5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Côte d\\'Ivoire (Ivory Coast)',\r\n        ISO: 'CI',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Croatia',\r\n        ISO: 'HR',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'May only be required for bulk mail. The letters CP are frequently used before the postal code. This is not a country code, but an abbreviation for \\'codigo postal\\' or postal code.',\r\n        Country: 'Cuba',\r\n        ISO: 'CU',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Curaçao',\r\n        ISO: 'CW',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Post code system covers whole island, but not used in Northern Cyprus where \\'Mersin 10, Turkey\\' is used instead.',\r\n        Country: 'Cyprus',\r\n        ISO: 'CY',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'With Slovak Republic, Poštovní směrovací číslo (PSČ) - postal routing number.',\r\n        Country: 'Czech Republic',\r\n        ISO: 'CZ',\r\n        Format: 'NNNNN (NNN NN)',\r\n        Regex: /^\\d{5}\\s\\(\\d{3}\\s\\d{2}\\)$/\r\n    }, {\r\n        Note: 'Numbering follows the dispatch of postal trains from Copenhagen.[3] Also used by Greenland, e.g.: DK-3900 Nuuk.',\r\n        Country: 'Denmark',\r\n        ISO: 'DK',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Djibouti',\r\n        ISO: 'DJ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Dominica',\r\n        ISO: 'DM',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Dominican Republic',\r\n        ISO: 'DO',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'No postal code system in use since Indonesian withdrawal in 1999.',\r\n        Country: 'East Timor',\r\n        ISO: 'TL',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Ecuador',\r\n        ISO: 'EC',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Used for all inbound mail to El Salvador. The postal office then distributes the mail internally depending on their destination.',\r\n        Country: 'El Salvador',\r\n        ISO: 'SV',\r\n        Format: '1101',\r\n        Regex: /^1101$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Egypt',\r\n        ISO: 'EG',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Equatorial Guinea',\r\n        ISO: 'GQ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Eritrea',\r\n        ISO: 'ER',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Estonia',\r\n        ISO: 'EE',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'The code is only used on a trial basis for Addis Ababa addresses.',\r\n        Country: 'Ethiopia',\r\n        ISO: 'ET',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'UK territory, but not UK postcode',\r\n        Country: 'Falkland Islands',\r\n        ISO: 'FK',\r\n        Format: 'AAAANAA one code: FIQQ 1ZZ',\r\n        Regex: /^[Ff][Ii][Qq]{2}\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: 'Self-governing territory within the Kingdom of Denmark, but not Danish postcode.',\r\n        Country: 'Faroe Islands',\r\n        ISO: 'FO',\r\n        Format: 'NNN',\r\n        Regex: /^\\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Fiji',\r\n        ISO: 'FJ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'A lower first digit indicates a place in south (for example 00100 Helsinki), a higher indicates a place further to north (99800 in Ivalo). The last digit is usually 0, except for postal codes for PO Box number ranges, in which case it is 1. Country code for Finland: \\'FI\\'. In the Åland Islands, the postal code is prefixed with \\'AX\\', not \\'FI\\'. Some postal codes for rural settlements may end with 5, and there are some unique postal codes for large companies and institutions, e.g. 00014 HELSINGIN YLIOPISTO (university), 00102 EDUSKUNTA (parliament), 00020 NORDEA (a major Scandinavian bank).',\r\n        Country: 'Finland',\r\n        ISO: 'FI',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'The first two digits give the département number, while in Paris, Lyon and Marseille, the last two digits of the postal code indicates the arrondissement. Both of the 2 corsican départements use \\'20\\' as the first two digits. Also used by French overseas departments and territories. Monaco is also part of the French postal code system, but the country code MC- is used for Monegasque addresses.',\r\n        Country: 'France',\r\n        ISO: 'FR',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 97300 - 97390.',\r\n        Country: 'French Guiana',\r\n        ISO: 'GF',\r\n        Format: '973NN',\r\n        Regex: /^973\\d{2}$/\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 98700 - 98790.',\r\n        Country: 'French Polynesia',\r\n        ISO: 'PF',\r\n        Format: '987NN',\r\n        Regex: /^987\\d{2}$/\r\n    }, {\r\n        Note: 'French codes in the 98400 range have been reserved.',\r\n        Country: 'French Southern and Antarctic Territories',\r\n        ISO: 'TF',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Two digit postal zone goes after city name.',\r\n        Country: 'Gabon',\r\n        ISO: 'GA',\r\n        Format: 'NN [city name] NN',\r\n        Regex: /^\\d{2}\\s[a-zA-Z-_ ]\\s\\d{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Gambia',\r\n        ISO: 'GM',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Georgia',\r\n        ISO: 'GE',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Postleitzahl (PLZ)',\r\n        Country: 'Germany',\r\n        ISO: 'DE',\r\n        Format: 'NN',\r\n        Regex: /^\\d{2}$/\r\n    }, {\r\n        Note: 'Postleitzahl (PLZ)',\r\n        Country: 'Germany',\r\n        ISO: 'DE',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Postleitzahl (PLZ), introduced after the German reunification. Between 1989 and 1993 the old separate 4-digit postal codes of former West- and East-Germany were distinguished by preceding \\'W-\\' or \\'O-\\' (\\'Ost\\' for East).',\r\n        Country: 'Germany',\r\n        ISO: 'DE',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '[citation needed]',\r\n        Country: 'Ghana',\r\n        ISO: 'GH',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Single code used for all addresses.',\r\n        Country: 'Gibraltar',\r\n        ISO: 'GI',\r\n        Format: 'GX11 1AA',\r\n        Regex: /^[Gg][Xx][1]{2}\\s{0,1}[1][Aa]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Greece',\r\n        ISO: 'GR',\r\n        Format: 'NNN NN',\r\n        Regex: /^\\d{3}\\s{0,1}\\d{2}$/\r\n    }, {\r\n        Note: 'Part of the Danish postal code system.',\r\n        Country: 'Greenland',\r\n        ISO: 'GL',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Grenada',\r\n        ISO: 'GD',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 97100 - 97190.',\r\n        Country: 'Guadeloupe',\r\n        ISO: 'GP',\r\n        Format: '971NN',\r\n        Regex: /^971\\d{2}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. Range 96910 - 96932.',\r\n        Country: 'Guam',\r\n        ISO: 'GU',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'The first two numbers identify the department, the third number the route and the last two the office.',\r\n        Country: 'Guatemala',\r\n        ISO: 'GT',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'UK-format postcode (first two letters are always GY not GG)',\r\n        Country: 'Guernsey',\r\n        ISO: 'GG',\r\n        Format: 'AAN NAA, AANN NAA',\r\n        Regex: /^[A-Za-z]{2}\\d\\s{0,1}\\d[A-Za-z]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Guinea',\r\n        ISO: 'GN',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Guinea Bissau',\r\n        ISO: 'GW',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Guyana',\r\n        ISO: 'GY',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Haiti',\r\n        ISO: 'HT',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Part of the Australian postcode system.',\r\n        Country: 'Heard and McDonald Islands',\r\n        ISO: 'HM',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Honduras',\r\n        ISO: 'HN',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '[1] The dummy postal code of Hong Kong is 999077 but it is unnecessary in fact',\r\n        Country: 'Hong Kong',\r\n        ISO: 'HK',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'The code defines an area, usually one code per settlement except the six largest towns. One code can identify more (usually) small settlements as well.',\r\n        Country: 'Hungary',\r\n        ISO: 'HU',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Iceland',\r\n        ISO: 'IS',\r\n        Format: 'NNN',\r\n        Regex: /^\\d{3}$/\r\n    }, {\r\n        Note: 'Postal Index Number (PIN)',\r\n        Country: 'India',\r\n        ISO: 'IN',\r\n        Format: 'NNNNNN,&#10;NNN NNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Kode Pos. Included East Timor (ranges 88xxx and 89xxx) until 1999, no longer used. For Indonesia postal code information visit [2]',\r\n        Country: 'Indonesia',\r\n        ISO: 'ID',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '(Persian: کد پستی)',\r\n        Country: 'Iran',\r\n        ISO: 'IR',\r\n        Format: 'NNNNN-NNNNN',\r\n        Regex: /^\\d{5}-\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Iraq',\r\n        ISO: 'IQ',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Currently no postal codes; however, Dublin is divided into postal districts on syntax Dublin 9. A national post code system is planned. See also Republic of Ireland postal addresses.',\r\n        Country: 'Ireland',\r\n        ISO: 'IE',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'UK-format postcode. The first two letters are always IM.',\r\n        Country: 'Isle of Man',\r\n        ISO: 'IM',\r\n        Format: 'CCN NAA, CCNN NAA',\r\n        Regex: /^[Ii[Mm]\\d{1,2}\\s\\d\\[A-Z]{2}$/\r\n    }, {\r\n        Note: 'Postcode is always written BEFORE the city/place name, i.e. to the Right in Hebrew or Arabic script - to the Left in Latin script.  This also allows the legacy postal code version (even though deprecated) since it\\'s still in high use.',\r\n        Country: 'Israel',\r\n        ISO: 'IL',\r\n        Format: 'NNNNNNN, NNNNN',\r\n        Regex: /^\\b\\d{5}(\\d{2})?$/\r\n    }, {\r\n        Note: 'Codice di Avviamento Postale (CAP). Also used by San Marino and Vatican City. First two digits identify province with some exceptions, because there are more than 100 provinces.',\r\n        Country: 'Italy',\r\n        ISO: 'IT',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Jamaica currently has no national postal code system, except for Kingston and Lower St. Andrew, which are divided into postal districts numbered 1-20[4] &#10;Before the 2007 suspension, the first two letters of a national post code were always \\'JM\\' (for Jamaica) while the third was for one of the four zones (A-D) into which the island was divided. The last two letters were for the parish, while the two digits were for the local post office.[5]',\r\n        Country: 'Jamaica',\r\n        ISO: 'JM',\r\n        Format: 'Before suspension: CCAAANN &#10;After suspension: NN',\r\n        Regex: /^\\d{2}$/\r\n    }, {\r\n        Note: 'See also Japanese addressing system.',\r\n        Country: 'Japan',\r\n        ISO: 'JP',\r\n        Format: 'NNNNNNN (NNN-NNNN)',\r\n        Regex: /^\\d{7}\\s\\(\\d{3}-\\d{4}\\)$/\r\n    }, {\r\n        Note: 'UK-format postcode.',\r\n        Country: 'Jersey',\r\n        ISO: 'JE',\r\n        Format: 'CCN NAA',\r\n        Regex: /^[Jj][Ee]\\d\\s{0,1}\\d[A-Za-z]{2}$/\r\n    }, {\r\n        Note: 'Deliveries to PO Boxes only.',\r\n        Country: 'Jordan',\r\n        ISO: 'JO',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '[6]',\r\n        Country: 'Kazakhstan',\r\n        ISO: 'KZ',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Deliveries to PO Boxes only. The postal code refers to the post office at which the receiver\\'s P. O. Box is located.',\r\n        Country: 'Kenya',\r\n        ISO: 'KE',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Kiribati',\r\n        ISO: 'KI',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Korea, North',\r\n        ISO: 'KP',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Korea, South',\r\n        ISO: 'KR',\r\n        Format: 'NNNNNN (NNN-NNN)(1988~2015)',\r\n        Regex: /^\\d{6}\\s\\(\\d{3}-\\d{3}\\)$/\r\n    }, {\r\n        Note: 'A separate postal code for Kosovo was introduced by the UNMIK postal administration in 2004. Serbian postcodes are still widely used in the Serbian enclaves. No country code has been assigned.',\r\n        Country: 'Kosovo',\r\n        ISO: 'XK',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'The first two digits represent the sector and the last three digits represents the post office.',\r\n        Country: 'Kuwait',\r\n        ISO: 'KW',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Kyrgyzstan',\r\n        ISO: 'KG',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Latvia',\r\n        ISO: 'LV',\r\n        Format: 'LV-NNNN',\r\n        Regex: /^[Ll][Vv][- ]{0,1}\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Laos',\r\n        ISO: 'LA',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'The first four digits represent the region or postal zone,the last four digits represent the building see also Lebanon Postal code website.',\r\n        Country: 'Lebanon',\r\n        ISO: 'LB',\r\n        Format: 'NNNN NNNN',\r\n        Regex: /^\\d{4}\\s{0,1}\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Lesotho',\r\n        ISO: 'LS',\r\n        Format: 'NNN',\r\n        Regex: /^\\d{3}$/\r\n    }, {\r\n        Note: 'Two digit postal zone after city name.',\r\n        Country: 'Liberia',\r\n        ISO: 'LR',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Libya',\r\n        ISO: 'LY',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'With Switzerland, ordered from west to east. Range 9485 - 9498.',\r\n        Country: 'Liechtenstein',\r\n        ISO: 'LI',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'References: http://www.post.lt/en/help/postal-code-search. Previously 9999 which was actually the old Soviet 999999 format code with the first 2 digits dropped.',\r\n        Country: 'Lithuania',\r\n        ISO: 'LT',\r\n        Format: 'LT-NNNNN',\r\n        Regex: /^[Ll][Tt][- ]{0,1}\\d{5}$/\r\n    }, {\r\n        Note: 'References: http://www.upu.int/post_code/en/countries/LUX.pdf',\r\n        Country: 'Luxembourg',\r\n        ISO: 'LU',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '[2]',\r\n        Country: 'Macau',\r\n        ISO: 'MO',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Macedonia',\r\n        ISO: 'MK',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Madagascar',\r\n        ISO: 'MG',\r\n        Format: 'NNN',\r\n        Regex: /^\\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Malawi',\r\n        ISO: 'MW',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Maldives',\r\n        ISO: 'MV',\r\n        Format: 'NNNN, NNNNN',\r\n        Regex: /^\\d{4,5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Malaysia',\r\n        ISO: 'MY',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Mali',\r\n        ISO: 'ML',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Kodiċi Postali',\r\n        Country: 'Malta',\r\n        ISO: 'MT',\r\n        Format: 'AAANNNN (AAA NNNN)',\r\n        Regex: /^[A-Za-z]{3}\\s{0,1}\\d{4}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. Range 96960 - 96970.',\r\n        Country: 'Marshall Islands',\r\n        ISO: 'MH',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Mauritania',\r\n        ISO: 'MR',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Mauritius',\r\n        ISO: 'MU',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 97200 - 97290.',\r\n        Country: 'Martinique',\r\n        ISO: 'MQ',\r\n        Format: '972NN',\r\n        Regex: /^972\\d{2}$/\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 97600 - 97690.',\r\n        Country: 'Mayotte',\r\n        ISO: 'YT',\r\n        Format: '976NN',\r\n        Regex: /^976\\d{2}$/\r\n    }, {\r\n        Note: 'US ZIP Code. Range 96941 - 96944.',\r\n        Country: 'Micronesia',\r\n        ISO: 'FM',\r\n        Format: 'NNNNN or NNNNN-NNNN',\r\n        Regex: /^\\d{5}(-{1}\\d{4})$/\r\n    }, {\r\n        Note: 'The first two digits identify the state (or a part thereof), except for Nos. 00 to 16, which indicate delegaciones (boroughs) of the Federal District (Mexico City).',\r\n        Country: 'Mexico',\r\n        ISO: 'MX',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. Range 96941 - 96944.',\r\n        Country: 'Micronesia',\r\n        ISO: 'FM',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Moldova',\r\n        ISO: 'MD',\r\n        Format: 'CCNNNN (CC-NNNN)',\r\n        Regex: /^[Mm][Dd][- ]{0,1}\\d{4}$/\r\n    }, {\r\n        Note: 'Uses the French Postal System, but with an \\'MC\\' Prefix for Monaco.',\r\n        Country: 'Monaco',\r\n        ISO: 'MC',\r\n        Format: '980NN',\r\n        Regex: /^980\\d{2}$/\r\n    }, {\r\n        Note: 'First digit: region / zone&#10;Second digit: province / district&#10;Last three digits: locality / delivery block[7]',\r\n        Country: 'Mongolia',\r\n        ISO: 'MN',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Montenegro',\r\n        ISO: 'ME',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Montserrat',\r\n        ISO: 'MS',\r\n        Format: 'MSR 1110-1350',\r\n        Regex: /^[Mm][Ss][Rr]\\s{0,1}\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Morocco',\r\n        ISO: 'MA',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Mozambique',\r\n        ISO: 'MZ',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Myanmar',\r\n        ISO: 'MM',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Postal Code ranges from 9000-9299 (NOTE: mainly 9000 is used)',\r\n        Country: 'Namibia',\r\n        ISO: 'NA',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Nauru',\r\n        ISO: 'NR',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Nepal',\r\n        ISO: 'NP',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'The combination of the postcode and the housenumber gives a unique identifier of the address.',\r\n        Country: 'Netherlands',\r\n        ISO: 'NL',\r\n        Format: 'NNNN AA',\r\n        Regex: /^\\d{4}\\s{0,1}[A-Za-z]{2}$/\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 98800 - 98890.',\r\n        Country: 'New Caledonia',\r\n        ISO: 'NC',\r\n        Format: '988NN',\r\n        Regex: /^988\\d{2}$/\r\n    }, {\r\n        Note: 'Postcodes were originally intended for bulk mailing and were not needed for addressing individual items. However, new post codes for general use were phased in from June 2006 and came into force by July 2008.',\r\n        Country: 'New Zealand',\r\n        ISO: 'NZ',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Nicaragua',\r\n        ISO: 'NI',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Niger',\r\n        ISO: 'NE',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Nigeria',\r\n        ISO: 'NG',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Niue',\r\n        ISO: 'NU',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Part of the Australian postal code system.',\r\n        Country: 'Norfolk Island',\r\n        ISO: 'NF',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. Range 96950 - 96952.',\r\n        Country: 'Northern Mariana Islands',\r\n        ISO: 'MP',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'From south to north',\r\n        Country: 'Norway',\r\n        ISO: 'NO',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Deliveries to P.O. Boxes only.',\r\n        Country: 'Oman',\r\n        ISO: 'OM',\r\n        Format: 'NNN',\r\n        Regex: /^\\d{3}$/\r\n    }, {\r\n        Note: 'Pakistan postal codes list',\r\n        Country: 'Pakistan',\r\n        ISO: 'PK',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. All locations 96940.',\r\n        Country: 'Palau',\r\n        ISO: 'PW',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Panama',\r\n        ISO: 'PA',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Papua New Guinea',\r\n        ISO: 'PG',\r\n        Format: 'NNN',\r\n        Regex: /^\\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Paraguay',\r\n        ISO: 'PY',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Peru',\r\n        ISO: 'PE',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Philippines',\r\n        ISO: 'PH',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'UK territory, but not UK postcode',\r\n        Country: 'Pitcairn Islands',\r\n        ISO: 'PN',\r\n        Format: 'AAAANAA one code: PCRN 1ZZ',\r\n        Regex: /^[Pp][Cc][Rr][Nn]\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Poland',\r\n        ISO: 'PL',\r\n        Format: 'NNNNN (NN-NNN)',\r\n        Regex: /^\\d{2}[- ]{0,1}\\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Portugal',\r\n        ISO: 'PT',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Portugal',\r\n        ISO: 'PT',\r\n        Format: 'NNNN-NNN (NNNN NNN)',\r\n        Regex: /^\\d{4}[- ]{0,1}\\d{3}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. ZIP codes 006XX for NW PR, 007XX for SE PR, in which XX designates the town or post office and 009XX for the San Juan Metropolitan Area, in which XX designates the area or borough of San Juan. The last four digits identify an area within the post office. For example 00716-2604: 00716-for the east section of the city of Ponce and 2604 for Aceitillo St. in the neighborhood of Los Caobos. US Post office is changing the PR address format to the American one: 1234 No Name Avenue, San Juan, PR 00901.',\r\n        Country: 'Puerto Rico',\r\n        ISO: 'PR',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Qatar',\r\n        ISO: 'QA',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 97400 - 97490.',\r\n        Country: 'Réunion',\r\n        ISO: 'RE',\r\n        Format: '974NN',\r\n        Regex: /^974\\d{2}$/\r\n    }, {\r\n        Note: 'Previously 99999 in Bucharest and 9999 in rest of country.',\r\n        Country: 'Romania',\r\n        ISO: 'RO',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Placed on a line of its own.',\r\n        Country: 'Russia',\r\n        ISO: 'RU',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Overseas Collectivity of France. French codes used.',\r\n        Country: 'Saint Barthélemy',\r\n        ISO: 'BL',\r\n        Format: '97133',\r\n        Regex: /^97133$/\r\n    }, {\r\n        Note: 'Single code used for all addresses.',\r\n        Country: 'Saint Helena',\r\n        ISO: 'SH',\r\n        Format: 'STHL 1ZZ',\r\n        Regex: /^[Ss][Tt][Hh][Ll]\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Saint Kitts and Nevis',\r\n        ISO: 'KN',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Saint Lucia',\r\n        ISO: 'LC',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Overseas Collectivity of France. French codes used.',\r\n        Country: 'Saint Martin',\r\n        ISO: 'MF',\r\n        Format: '97150',\r\n        Regex: /^97150$/\r\n    }, {\r\n        Note: 'Overseas Collectivity of France. French codes used.',\r\n        Country: 'Saint Pierre and Miquelon',\r\n        ISO: 'PM',\r\n        Format: '97500',\r\n        Regex: /^97500$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Saint Vincent and the Grenadines',\r\n        ISO: 'VC',\r\n        Format: 'CCNNNN',\r\n        Regex: /^[Vv][Cc]\\d{4}$/\r\n    }, {\r\n        Note: 'With Italy, uses a five-digit numeric CAP of Emilia Romagna. Range 47890 and 47899',\r\n        Country: 'San Marino',\r\n        ISO: 'SM',\r\n        Format: '4789N',\r\n        Regex: /^4789\\d$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Sao Tome and Principe',\r\n        ISO: 'ST',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'A complete 13-digit code has 5-digit number representing region, sector, city, and zone; 4-digit X between 2000 and 5999; 4-digit Y between 6000 and 9999 [3]. Digits of 5-digit code may represent postal region, sector, branch, section, and block respectively [4].',\r\n        Country: 'Saudi Arabia',\r\n        ISO: 'SA',\r\n        Format: 'NNNNN for PO Boxes. NNNNN-NNNN for home delivery.',\r\n        Regex: /^\\d{5}(-{1}\\d{4})?$/\r\n    }, {\r\n        Note: 'The letters CP or C.P. are often written in front of the postcode. This is not a country code, but simply an abbreviation for \\'code postal\\'.',\r\n        Country: 'Senegal',\r\n        ISO: 'SN',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Poštanski adresni kod (PAK)',\r\n        Country: 'Serbia',\r\n        ISO: 'RS',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Serbia',\r\n        ISO: 'RS',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Seychelles',\r\n        ISO: 'SC',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Sint Maarten',\r\n        ISO: 'SX',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Sierra Leone',\r\n        ISO: 'SL',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Singapore',\r\n        ISO: 'SG',\r\n        Format: 'NN',\r\n        Regex: /^\\d{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Singapore',\r\n        ISO: 'SG',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Each building has its own unique postcode.',\r\n        Country: 'Singapore',\r\n        ISO: 'SG',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'with Czech Republic from west to east, Poštové smerovacie číslo (PSČ) - postal routing number.',\r\n        Country: 'Slovakia',\r\n        ISO: 'SK',\r\n        Format: 'NNNNN (NNN NN)',\r\n        Regex: /^\\d{5}\\s\\(\\d{3}\\s\\d{2}\\)$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Slovenia',\r\n        ISO: 'SI',\r\n        Format: 'NNNN (CC-NNNN)',\r\n        Regex: /^([Ss][Ii][- ]{0,1}){0,1}\\d{4}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Solomon Islands',\r\n        ISO: 'SB',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'A 5 digit code has been publicized, but never taken into use.',\r\n        Country: 'Somalia',\r\n        ISO: 'SO',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Postal codes are allocated to individual Post Office branches, some have two codes to differentiate between P.O. Boxes and street delivery addresses. Included Namibia (ranges 9000-9299) until 1992, no longer used.',\r\n        Country: 'South Africa',\r\n        ISO: 'ZA',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'One code for all addresses.',\r\n        Country: 'South Georgia and the South Sandwich Islands',\r\n        ISO: 'GS',\r\n        Format: 'SIQQ 1ZZ',\r\n        Regex: /^[Ss][Ii][Qq]{2}\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'South Korea',\r\n        ISO: 'KR',\r\n        Format: 'NNNNNN (NNN-NNN)',\r\n        Regex: /^\\d{6}\\s\\(\\d{3}-\\d{3}\\)$/\r\n    }, {\r\n        Note: 'First two indicate the province, range 01-52',\r\n        Country: 'Spain',\r\n        ISO: 'ES',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Reference: http://mohanjith.net/ZIPLook/ Incorporates Colombo postal districts, e.g.: Colombo 1 is \\'00100\\'. You can search for specific postal codes here.',\r\n        Country: 'Sri Lanka',\r\n        ISO: 'LK',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Sudan',\r\n        ISO: 'SD',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Suriname',\r\n        ISO: 'SR',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'The letter identifies one of the country\\'s four districts.',\r\n        Country: 'Swaziland',\r\n        ISO: 'SZ',\r\n        Format: 'ANNN',\r\n        Regex: /^[A-Za-z]\\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Sweden',\r\n        ISO: 'SE',\r\n        Format: 'NNNNN (NNN NN)',\r\n        Regex: /^\\d{3}\\s*\\d{2}$/\r\n    }, {\r\n        Note: 'With Liechtenstein, ordered from west to east. In Geneva and other big cities, like Basel, Bern, Zurich, there may be one or two digits after the name of the city when the generic City code (1211) is used instead of the area-specific code (1201, 1202...), e.g.: 1211 Geneva 13. The digit identifies the post office. This addressing is generally used for P.O. box deliveries.',\r\n        Country: 'Switzerland',\r\n        ISO: 'CH',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'Norway postal codes',\r\n        Country: 'Svalbard and Jan Mayen',\r\n        ISO: 'SJ',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'A 4-digit system has been announced. Status unknown.',\r\n        Country: 'Syria',\r\n        ISO: 'SY',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'The first three digits of the postal code are required; the last two digits are optional. Codes are known as youdi quhao (郵遞區號), and are also assigned to Senkaku Islands (Diaoyutai), though Japanese-administered, the Pratas Islands and the Spratly Islands. See List of postal codes in Taiwan.',\r\n        Country: 'Taiwan',\r\n        ISO: 'TW',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Retained system from former Soviet Union.',\r\n        Country: 'Tajikistan',\r\n        ISO: 'TJ',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Tanzania',\r\n        ISO: 'TZ',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'The first two specify the province, numbers as in ISO 3166-2:TH, the third and fourth digits specify a district (amphoe)',\r\n        Country: 'Thailand',\r\n        ISO: 'TH',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Togo',\r\n        ISO: 'TG',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Tokelau',\r\n        ISO: 'TK',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Tonga',\r\n        ISO: 'TO',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'First two digits specify a postal district (one of 72), next two digits a carrier route, last two digits a building or zone along that route',\r\n        Country: 'Trinidad and Tobago',\r\n        ISO: 'TT',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Single code used for all addresses.',\r\n        Country: 'Tristan da Cunha',\r\n        ISO: 'SH',\r\n        Format: 'TDCU 1ZZ',\r\n        Regex: /^[Tt][Dd][Cc][Uu]\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Tunisia',\r\n        ISO: 'TN',\r\n        Format: 'NNNN',\r\n        Regex: /^\\d{4}$/\r\n    }, {\r\n        Note: 'First two digits are the city numbers.[8]',\r\n        Country: 'Turkey',\r\n        ISO: 'TR',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Retained system from former Soviet Union.',\r\n        Country: 'Turkmenistan',\r\n        ISO: 'TM',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Single code used for all addresses.',\r\n        Country: 'Turks and Caicos Islands',\r\n        ISO: 'TC',\r\n        Format: 'TKCA 1ZZ',\r\n        Regex: /^[Tt][Kk][Cc][Aa]\\s{0,1}[1][Zz]{2}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Tuvalu',\r\n        ISO: 'TV',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Uganda',\r\n        ISO: 'UG',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Ukraine',\r\n        ISO: 'UA',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'United Arab Emirates',\r\n        ISO: 'AE',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Known as the postcode. The first letter(s) indicate the postal area, such as the town or part of London. Placed on a separate line below the city (or county, if used). The UK postcode is made up of two parts separated by a space. These are known as the outward postcode and the inward postcode. The outward postcode is always one of the following formats: AN, ANN, AAN, AANN, ANA, AANA, AAA. The inward postcode is always formatted as NAA. A valid inward postcode never contains the letters: C, I, K, M, O or V. The British Forces Post Office has a different system, but as of 2012 has also adopted UK-style postcodes that begin with \\'BF1\\' for electronic compatibility.',\r\n        Country: 'United Kingdom',\r\n        ISO: 'GB',\r\n        Format: 'A(A)N(A/N)NAA (A[A]N[A/N] NAA)',\r\n        Regex: /^[A-Z]{1,2}[0-9R][0-9A-Z]?\\s*[0-9][A-Z-[CIKMOV]]{2}$/\r\n    }, {\r\n        Note: 'Known as the ZIP Code with five digits 99999* or the ZIP+4 Code with nine digits 99999-9999* (while the minimum requirement is the first five digits, the U.S. Postal Service encourages everyone to use all nine). Also used by the former US Pacific Territories: Federated States of Micronesia; Palau; and the Marshall Islands, as well as in current US territories American Samoa, Guam, Northern Mariana Islands, Puerto Rico, and the United States Virgin Islands. An individual delivery point may be represented as an 11-digit number, but these are usually represented by Intelligent Mail barcode or formerly POSTNET bar code.',\r\n        Country: 'United States',\r\n        ISO: 'US',\r\n        Format: 'NNNNN (optionally NNNNN-NNNN)',\r\n        Regex: /^\\b\\d{5}\\b(?:[- ]{1}\\d{4})?$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Uruguay',\r\n        ISO: 'UY',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'U.S. ZIP codes. Range 00801 - 00851.',\r\n        Country: 'U.S. Virgin Islands',\r\n        ISO: 'VI',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'Почтовые индексы',\r\n        Country: 'Uzbekistan',\r\n        ISO: 'UZ',\r\n        Format: 'NNN NNN',\r\n        Regex: /^\\d{3} \\d{3}$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Vanuatu',\r\n        ISO: 'VU',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: 'Single code used for all addresses. Part of the Italian postal code system.',\r\n        Country: 'Vatican',\r\n        ISO: 'VA',\r\n        Format: '120',\r\n        Regex: /^120$/\r\n    }, {\r\n        Note: '',\r\n        Country: 'Venezuela',\r\n        ISO: 'VE',\r\n        Format: 'NNNN or NNNN A',\r\n        Regex: /^\\d{4}(\\s[a-zA-Z]{1})?$/\r\n    }, {\r\n        Note: 'First two indicate a province.',\r\n        Country: 'Vietnam',\r\n        ISO: 'VN',\r\n        Format: 'NNNNNN',\r\n        Regex: /^\\d{6}$/\r\n    }, {\r\n        Note: 'Overseas Department of France. French codes used. Range 98600 - 98690.',\r\n        Country: 'Wallis and Futuna',\r\n        ISO: 'WF',\r\n        Format: '986NN',\r\n        Regex: /^986\\d{2}$/\r\n    }, {\r\n        Note: 'System for Sana\\'a Governorate using geocoding \\'عنواني\\' based on the OpenPostcode algorithm is inaugurated in 2014.[9]',\r\n        Country: 'Yemen',\r\n        ISO: 'YE',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }, {\r\n        Note: '',\r\n        Country: 'Zambia',\r\n        ISO: 'ZM',\r\n        Format: 'NNNNN',\r\n        Regex: /^\\d{5}$/\r\n    }, {\r\n        Note: 'System is being planned.',\r\n        Country: 'Zimbabwe',\r\n        ISO: 'ZW',\r\n        Format: '- no codes -',\r\n        Regex: ''\r\n    }];\r\n\r\n    /**\r\n     * Return postal code regular expression, based off country code\r\n     *\r\n     * @param iso country code\r\n     */\r\n    public static ZipcodeExpression(iso: string): RegExp {\r\n        const arr: Array<object> = ZipcodeValidator.globalZipCodes.filter(itm => itm.ISO === iso.toUpperCase());\r\n        let regex: RegExp;\r\n\r\n        arr.find((obj: object) => {\r\n            return regex = obj['Regex'];\r\n        });\r\n\r\n        return regex;\r\n    }\r\n\r\n}\r\n\r\n","import { Inject } from '@angular/core';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface FaviconsConfig {\r\n    icons: IconsConfig;\r\n    cacheBusting?: boolean;\r\n}\r\n\r\nexport interface IconsConfig {\r\n    [ name: string ]: IconConfig;\r\n}\r\n\r\nexport interface IconConfig {\r\n    type: string;\r\n    href: string;\r\n    isDefault?: boolean;\r\n}\r\n\r\nexport let BROWSER_FAVICONS_CONFIG = new InjectionToken<FaviconsConfig>( 'Favicons Configuration' );\r\n\r\n/**\r\n * Abstract class that acts as both interface for implementation and as the dependency-injection\r\n */\r\nexport abstract class FaviconsService {\r\n    abstract activate( name: string ): void;\r\n    abstract reset(): void;\r\n}\r\n\r\n/**\r\n * Provide the browser-oriented implementation of the Favicons class\r\n */\r\nexport class BrowserFavicons implements FaviconsService {\r\n\r\n    protected elementId: string;\r\n    protected icons: IconsConfig;\r\n    protected useCacheBusting: boolean;\r\n\r\n    /**\r\n     * initialize the Favicons service.\r\n     */\r\n    constructor( @Inject( BROWSER_FAVICONS_CONFIG ) config: FaviconsConfig ) {\r\n\r\n        this.elementId = 'favicons-service-injected-node';\r\n        this.icons = Object.assign( Object.create( null ), config.icons );\r\n        this.useCacheBusting = ( config.cacheBusting || false );\r\n\r\n        // Since the document may have a static favicon definition, we want to strip out\r\n        // any exisitng elements that are attempting to define a favicon. This way, there\r\n        // is only one favicon element on the page at a time.\r\n        this.removeExternalLinkElements();\r\n\r\n    }\r\n\r\n    /**\r\n     * Active favicon with given identifier\r\n     *\r\n     * @param name favicon name\r\n     */\r\n    public activate( name: string ): void {\r\n\r\n        if ( ! this.icons[ name ] ) {\r\n\r\n            throw( new Error( `Favicon for [ ${ name } ] not found.` ) );\r\n\r\n        }\r\n\r\n        this.setNode( this.icons[ name ].type, this.icons[ name ].href );\r\n\r\n    }\r\n\r\n    /**\r\n     * Activate the default favicon (with isDefault set to True)\r\n     */\r\n    public reset(): void {\r\n\r\n        for ( const name of Object.keys( this.icons ) ) {\r\n\r\n            const icon = this.icons[ name ];\r\n\r\n            if ( icon.isDefault ) {\r\n\r\n                this.setNode( icon.type, icon.href );\r\n                return;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // If we made it this far, none of the favicons were flagged as default. In that\r\n        // case, let's just remove the favicon node altogether.\r\n        this.removeNode();\r\n\r\n    }\r\n\r\n    /**\r\n     * Inject the favicon element into the document header\r\n     * \r\n     * @param type type of icon (.png, .jpeg, etc)\r\n     *\r\n     * @param href location\r\n     */\r\n    protected addNode( type: string, href: string ): void {\r\n\r\n        const linkElement = document.createElement( 'link' );\r\n        linkElement.setAttribute( 'id', this.elementId );\r\n        linkElement.setAttribute( 'rel', 'icon' );\r\n        linkElement.setAttribute( 'type', type );\r\n        linkElement.setAttribute( 'href', href );\r\n        document.head.appendChild( linkElement );\r\n\r\n    }\r\n\r\n    /**\r\n     * Return an augmented HREF value with a cache-busting query-string parameter\r\n     *\r\n     * @param href location\r\n     */\r\n    protected cacheBustHref( href: string ): string {\r\n\r\n        const augmentedHref = ( href.indexOf( '?' ) === -1 )\r\n            ? `${ href }?faviconCacheBust=${ Date.now() }`\r\n            : `${ href }&faviconCacheBust=${ Date.now() }`\r\n        ;\r\n\r\n        return( augmentedHref );\r\n\r\n    }\r\n\r\n    /**\r\n     * I remove any favicon nodes that are not controlled by this service\r\n     */\r\n    protected removeExternalLinkElements(): void {\r\n\r\n        // tslint:disable-next-line:prefer-const\r\n        let linkElements: NodeListOf<Element> = document.querySelectorAll( `link[ rel ~= 'icon' i]` );\r\n\r\n        for ( const linkElement of Array.from( linkElements ) ) {\r\n\r\n            linkElement.parentNode.removeChild( linkElement );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Remove the favicon node from the document header\r\n     */\r\n    protected removeNode(): void {\r\n\r\n        const linkElement = document.head.querySelector( '#' + this.elementId );\r\n\r\n        if ( linkElement ) {\r\n\r\n            document.head.removeChild( linkElement );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Remove existing favicon node and inject a new favicon node with the give\r\n     * elemet settings\r\n     *\r\n     * @param type type of favicon\r\n     * @param href location\r\n     */\r\n\r\n    protected setNode( type: string, href: string ): void {\r\n\r\n        const augmentedHref = this.useCacheBusting\r\n            ? this.cacheBustHref( href )\r\n            : href\r\n        ;\r\n\r\n        this.removeNode();\r\n        this.addNode( type, augmentedHref );\r\n\r\n    }\r\n\r\n}\r\n","// @dynamic\r\n\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n */\r\n\r\nimport { Base64Model } from '../../models/base64.model';\r\nimport { Observable, Subscriber, Subject } from 'rxjs';\r\n\r\nexport class ConvertToBase64Util {\r\n\r\n    /**\r\n     *\r\n     * @param event either type File or Blob\r\n     *\r\n     * Converts to Base64 and returns an observable of Base64Model\r\n     */\r\n    public static GetBase64(files: Array<File>): Observable<Array<Base64Model>> {\r\n      const base64Observable = new Subject<Array<Base64Model>>();\r\n      const baseArray: Array<Base64Model> = [];\r\n      let file: File;\r\n\r\n      for (file of files) {\r\n        const reader = new FileReader();\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        ((file) => {\r\n        reader.onload = () => {\r\n          baseArray.push(new Base64Model(reader.result.toString(), file));\r\n\r\n          if (baseArray.length === files.length) {\r\n            base64Observable.next(baseArray);\r\n          }\r\n        };\r\n      })(file);\r\n        reader.readAsDataURL(file['file'].rawFile);\r\n        reader.onerror = (error) => {\r\n          console.error('Error: ', error);\r\n        };\r\n      }\r\n\r\n      return base64Observable;\r\n    }\r\n}\r\n","export class ToggleThemeUtil {\r\n\r\n    /**\r\n     * Toggle fathym themes // could probably add themes to local storage\r\n     *\r\n     * @param classList classlist that holds the theme class\r\n     *\r\n     * @param val theme to change to\r\n     */\r\n    public static Toggle(classList: DOMTokenList, val: string): string {\r\n\r\n        let theme: string;\r\n\r\n        if (classList.contains('arctic-theme')) {\r\n            classList.remove('arctic-theme');\r\n        }\r\n\r\n        if (classList.contains('contrast-theme')) {\r\n            classList.remove('contrast-theme');\r\n        }\r\n\r\n        if (classList.contains('cool-candy-theme')) {\r\n            classList.remove('cool-candy-theme');\r\n        }\r\n\r\n        if (classList.contains('flipper-theme')) {\r\n            classList.remove('flipper-theme');\r\n        }\r\n\r\n        if (classList.contains('ice-theme')) {\r\n            classList.remove('ice-theme');\r\n        }\r\n\r\n        if (classList.contains('sea-green-theme')) {\r\n            classList.remove('sea-green-theme');\r\n        }\r\n\r\n        if (classList.contains('white-mint')) {\r\n            classList.remove('white-mint');\r\n        }\r\n\r\n        switch (val.toUpperCase()) {\r\n            case 'ARCTIC-THEME':\r\n                theme = 'arctic-theme';\r\n                classList.add('arctic-theme');\r\n                break;\r\n            case 'CONTRAST-THEME':\r\n                theme = 'contrast-theme';\r\n                classList.add('contrast-theme');\r\n                break;\r\n            case 'COOL-CANDY-THEME':\r\n                theme = 'cool-candy-theme';\r\n                classList.add('cool-candy-theme');\r\n                break;\r\n            case 'FLIPPER-THEME':\r\n                theme = 'flipper-theme';\r\n                classList.add('flipper-theme');\r\n                break;\r\n            case 'ICE-THEME':\r\n                theme = 'ice-theme';\r\n                classList.add('ice-theme');\r\n                break;\r\n            case 'SEA-GREEN-THEME':\r\n                theme = 'sea-green-theme';\r\n                classList.add('sea-green-theme');\r\n                break;\r\n            case 'WHITE-MINT-THEME':\r\n                theme = 'white-mint-theme';\r\n                classList.add('white-mint-theme');\r\n                break;\r\n          }\r\n\r\n        return theme;\r\n    }\r\n}","// @dynamic\r\n\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n */\r\n\r\n/**\r\n * For checking data types\r\n */\r\n\r\nexport class IsDataTypeUtil {\r\n\r\n    /**\r\n     * Check for string\r\n     *\r\n     * (new string) typeof will return object, so check for that with instanceof\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsString(value: any): boolean {\r\n        return typeof value === 'string' || value instanceof String;\r\n    }\r\n\r\n    /**\r\n     * Check for number\r\n     *\r\n     * More than 'number' will be returned, like: 'NaN' and 'Infinity,' so to be sure\r\n     * a value is a number use the function isFinite()\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsNumber(value: any): boolean {\r\n        return typeof value === 'number' && isFinite(value);\r\n    }\r\n\r\n    /**\r\n     * Check for array\r\n     *\r\n     * An array is returned as an object, to check if it's really an array\r\n     * its constructor can be compared to 'Array.'\r\n     *\r\n     * ES5 has a method for this: Array.isArray(value)\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsArray(value: any): boolean {\r\n        return value && typeof value === 'object' && value.constructor === Array;\r\n    }\r\n\r\n    /**\r\n     * Check for function\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsFunction(value: any): boolean {\r\n        return typeof value === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check for Object\r\n     *\r\n     * A lot of items can be objects, so to test that an item can have\r\n     * properties and be looped through, compare its constructor with 'Object.'\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsObject(value: any): boolean {\r\n        return value && typeof value === 'object' && value.constructor === Object;\r\n    }\r\n\r\n    /**\r\n     * Check for null\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsNull(value: any): boolean {\r\n        return value === null;\r\n    }\r\n\r\n    /**\r\n     * Check for undefined\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsUndefined(value: any): boolean {\r\n        return value === 'undefined';\r\n    }\r\n\r\n    /**\r\n     * Check for boolean\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsBoolean(value: any): boolean {\r\n        return typeof value === 'boolean';\r\n    }\r\n\r\n    /**\r\n     * Check for regex\r\n     *\r\n     * RegEx's are object, so check against its constructor\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsRegEx(value: any): boolean {\r\n        return value && typeof value === 'object' && value.constructor === RegExp;\r\n    }\r\n\r\n    /**\r\n     * Check for Date\r\n     *\r\n     * Date ins't really a data type in JS, so to check a Date Object use 'instanceof.'\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsData(value: any): boolean {\r\n        return value instanceof Date;\r\n    }\r\n\r\n    /**\r\n     * Check for Symbol\r\n     *\r\n     * New datatype in ES6\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static IsSymbol(value: any): boolean {\r\n        return typeof value === 'symbol';\r\n    }\r\n\r\n    /**\r\n     * Find out what kind of datatype you have\r\n     *\r\n     * @param value value to test\r\n     */\r\n    public static GetDataType(value: any): string {\r\n        if (this.IsArray(value)) { return 'array';\r\n        } else if (this.IsBoolean(value)) { return 'boolean';\r\n        } else if (this.IsData(value)) { return 'data';\r\n        } else if (this.IsFunction(value)) { return 'function';\r\n        } else if (this.IsNull(value)) { return 'null';\r\n        } else if (this.IsNumber(value)) { return 'number';\r\n        } else if (this.IsObject(value)) { return 'object';\r\n        } else if (this.IsRegEx(value)) { return 'regex';\r\n        } else if (this.IsString(value)) { return 'string';\r\n        } else if (this.IsSymbol(value)) { return 'symbol';\r\n        } else if (this.IsUndefined(value)) { return 'undefined';\r\n        } else { throw new Error('No Datatype found'); }\r\n    }\r\n}\r\n","import { IsDataTypeUtil } from './../../type/is-data-type.util';\r\nimport { JSONSchema } from '../../../json-schema';\r\nimport { JSONSchemaItemModel } from '../../../models/json/json-schema-item.model';\r\n\r\n// @dynamic\r\n\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n */\r\n\r\n/**\r\n * Flatten and Unflatten JSON\r\n *\r\n * Original Code Example: http://jsfiddle.net/crl/WSzec/154/\r\n */\r\nexport class JSONFlattenUnflatten {\r\n\r\n  /**\r\n   * Flatten a standard JSON Object\r\n   *\r\n   * @param json JSON object to be flattened\r\n   *\r\n   * @param map recursive map data\r\n   *\r\n   * @param prefix dotnotated path\r\n   */\r\n  public static Flatten(json: JSON | JSONSchema, map = {}, prefix = ''): object {\r\n    if (Array.isArray(json)) {\r\n      json.forEach((itm, idx) => {\r\n        if (IsDataTypeUtil.IsObject(json[itm]) && json[itm]) {\r\n          this.Flatten(json[itm], map, prefix + '[' + itm + ']');\r\n        } else {\r\n          map[prefix + '[' + itm + ']'] = json[itm];\r\n        }\r\n      });\r\n\r\n      return map;\r\n    }\r\n\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      if (IsDataTypeUtil.IsObject(json[key]) && json[key]) {\r\n        this.Flatten(json[key], map, (prefix ? prefix + '.' : '') + key);\r\n      } else {\r\n        map[(prefix ? prefix + '.' : '') + key] = json[key];\r\n      }\r\n    });\r\n\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Flatten JSON into a map\r\n   *\r\n   * @param json JSON object to be flattened\r\n   *\r\n   * @param map recursive map data\r\n   *\r\n   * @param prefix dotnotated path\r\n   */\r\n  public static FlattenMap(json: JSON | JSONSchema, map = new Map(), prefix: string = ''): Map<string, string> {\r\n    if (Array.isArray(json)) {\r\n      json.forEach((itm, idx) => {\r\n        if (IsDataTypeUtil.IsObject(json[itm]) && json[itm]) {\r\n          this.FlattenMap(json[itm], map, prefix + '[' + itm + ']');\r\n        } else {\r\n          map.set(prefix + '[' + itm + ']', json[itm]);\r\n        }\r\n      });\r\n\r\n      return map;\r\n    }\r\n\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      if (IsDataTypeUtil.IsObject(json[key]) && json[key]) {\r\n        if (Object.entries(json[key]).length === 0) { return; }\r\n        this.FlattenMap(json[key], map, (prefix ? prefix + '.' : '') + key);\r\n      } else {\r\n       map.set((prefix ? prefix + '.' : '') + key, json[key]);\r\n      }\r\n    });\r\n\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Flatten JSON into a map\r\n   *\r\n   * @param json JSON object to be flattened\r\n   *\r\n   * @param map recursive map data\r\n   *\r\n   * @param prefix dotnotated path\r\n   */\r\n  public static FlattenMapTest(json: JSON | JSONSchema, map = new Map(), prefix: string = ''): Map<string, string> {\r\n    if (Array.isArray(json)) {\r\n      json.forEach((itm, idx) => {\r\n        if (IsDataTypeUtil.IsObject(json[itm]) && json[itm]) {\r\n          this.FlattenMap(json[itm], map, prefix + '[' + itm + ']');\r\n        } else {\r\n          map.set(prefix + '[' + itm + ']', json[itm]);\r\n        }\r\n      });\r\n\r\n      return map;\r\n    }\r\n\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      if (IsDataTypeUtil.IsObject(json[key]) && json[key]) {\r\n        if (Object.entries(json[key]).length === 0) { return; }\r\n        this.FlattenMapTest(json[key], map, (prefix ? prefix + '.' : '') + key);\r\n      } else {\r\n      map.set((prefix ? prefix + '.' : '') + key, json[key]);\r\n      }\r\n    });\r\n\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Flatten JSON into a map\r\n   *\r\n   * @param json JSON object to be flattened\r\n   *\r\n   * @param map recursive map data\r\n   *\r\n   * @param prefix dotnotated path\r\n   */\r\n  public static FlattenMapJSONSchemaItem(\r\n    json: JSON | JSONSchema, map = new Map(), prefix: string = ''): Map<string, JSONSchemaItemModel> {\r\n\r\n    if (Array.isArray(json)) {\r\n      json.forEach((itm, idx) => {\r\n        if (IsDataTypeUtil.IsObject(json[itm]) && json[itm]) {\r\n          this.FlattenMap(json[itm], map, prefix + '[' + itm + ']');\r\n        } else {\r\n          map.set(prefix + '[' + itm + ']', json[itm]);\r\n        }\r\n      });\r\n\r\n      return map;\r\n    }\r\n\r\n    Object.entries(json).forEach(([key, value]) => {\r\n      if (IsDataTypeUtil.IsObject(json[key]) && json[key]) {\r\n        this.FlattenMap(json[key], map, (prefix ? prefix + '.' : '') + key);\r\n      } else {\r\n       map.set((prefix ? prefix + '.' : '') + key, json[key]);\r\n      }\r\n    });\r\n\r\n    return map;\r\n  }\r\n\r\n  /**\r\n   * Unflatten an already flatten JSON object\r\n   *\r\n   * @param map object to unflatten\r\n   */\r\n  public static Unflatten(map: object): object {\r\n    const returnObject: object = {};\r\n\r\n    Object.entries(map).forEach(([key, value]) => {\r\n      const keysRegEx: RegExp = /(?:\\.?([^.[]+))|(\\[\\d+\\])/g;\r\n      let match: RegExpExecArray | null;\r\n      let oi: object = returnObject; // ref to returnObject, modified in loop below\r\n\r\n      // tslint:disable-next-line:no-conditional-assignment\r\n      while (match = keysRegEx.exec(key)) { // method executes a search for a match in a specified string. Returns a result array,\r\n        const prefix: string = key[match.index + match[0].length];\r\n        let keyName: string = match[1];\r\n\r\n        if (!prefix) { // nothing more, store value in oi[keyName]\r\n          oi[keyName] = value;\r\n      } else {\r\n          if (keyName) {\r\n            if (!oi.hasOwnProperty(keyName)) {\r\n              oi[keyName] = prefix === '[' ? [] : {};\r\n            }\r\n        } else {\r\n          keyName = match[2].slice(1, -1);\r\n          if (!oi.hasOwnProperty(keyName)) {\r\n            oi[keyName] = prefix === '[' ? [] : {};\r\n          }\r\n        }\r\n      }\r\n        oi = oi[keyName];\r\n    }\r\n  });\r\n    return returnObject;\r\n }\r\n\r\n    /**\r\n     * Unflatten map data\r\n     *\r\n     * @param map map data\r\n     */\r\n    public static UnflattenMap(map: any): object {\r\n\r\n      const returnObject: object = {};\r\n\r\n      map.forEach((value: string, key: string) => {\r\n          const keysRegEx: RegExp = /(?:\\.?([^.[]+))|(\\[\\d+\\])/g;\r\n          let match: RegExpExecArray | null;\r\n          let oi: object = returnObject; // ref to returnObject, modified in loop below\r\n\r\n          // tslint:disable-next-line:no-conditional-assignment\r\n          while (match = keysRegEx.exec(key)) { // method executes a search for a match in a specified string. Returns a result array,\r\n\r\n          const prefix: string = key[match.index + match[0].length];\r\n          let keyName: string = match[1];\r\n\r\n          if (!prefix) { // nothing more, store value in oi[keyName]\r\n              oi[keyName] = value;\r\n          } else {\r\n              if (keyName) {\r\n                if (!oi.hasOwnProperty(keyName)) {\r\n                  oi[keyName] = prefix === '[' ? [] : {};\r\n                }\r\n            } else {\r\n              keyName = match[2].slice(1, -1);\r\n              if (!oi.hasOwnProperty(keyName)) {\r\n                oi[keyName] = prefix === '[' ? [] : {};\r\n              }\r\n            }\r\n          }\r\n          oi = oi[keyName];\r\n        }\r\n      });\r\n      return returnObject;\r\n    }\r\n }\r\n","import { JSONSchema } from './../../../json-schema';\r\n// @dynamic\r\n\r\n/**\r\n * @dynamic is used because this class contains static properties\r\n */\r\n\r\nexport class DotNotationUtil {\r\n\r\n    /**\r\n     * Using dot notation, iterate the object and change the key's value\r\n     *\r\n     * @param obj object to test\r\n     *\r\n     * @param propertyPath Dot notation path\r\n     *\r\n     * @param newVal Changed value\r\n     */\r\n    public static SetValue(obj: JSON | object, propertyPath: string, newVal: string | object | Array<any>): void {\r\n        /**\r\n         * split propertyPath string into an array of strings and iterate each itm with reduce\r\n         *\r\n         * @param acc(accumulator) returned object to iterate\r\n         *\r\n         * @param curr(current value) current element being processed in the array\r\n         *\r\n         * @param idx index position of the current element being processed in the array\r\n         *\r\n         * @param arr array we created with the split function above\r\n         *\r\n         */\r\n        return propertyPath.split('.').reduce( (acc, curr, idx, arr) => {\r\n          if ( idx === (arr.length - 1) && acc ) {\r\n            acc[curr] = newVal;\r\n          }\r\n          // return a new accumulator to the reduce callback(starts the loop with the next curr value)\r\n          return acc ? acc[curr] : null;\r\n\r\n        // inital value to use as the first argument(this is the item to start the iteration with)\r\n      }, obj);\r\n    }\r\n\r\n    /**\r\n     * Using dot notation, iterate the object and return the key's value\r\n     *\r\n     * @param obj object to test\r\n     *\r\n     * @param pathArr array of names used to drill into objects\r\n     */\r\n    public static GetValue(obj: JSON | object, propertyPath: string): string | object | Array<any> {\r\n        /**\r\n         * split propertyPath string into an array of strings and iterate each itm with reduce\r\n         *\r\n         * @param acc(accumulator) returned object to iterate\r\n         *\r\n         * @param curr(current value) current element being processed in the array\r\n         *\r\n         * @param idx index position of the current element being processed in the array\r\n         *\r\n         * @param arr array we created with the split function above\r\n         *\r\n         */\r\n      return propertyPath.split('.').reduce( (acc, curr, idx, arr) => {\r\n        if ( idx === (arr.length - 1) && acc ) {\r\n          return acc[curr];\r\n        }\r\n        // return a new accumulator to the reduce callback(starts the loop with the next curr value)\r\n        return acc ? acc[curr] : null;\r\n\r\n      // inital value to use as the first argument(this is the item to start the iteration with)\r\n    }, obj);\r\n  }\r\n  public static SetKeyValue(json: JSON | JSONSchema, propertyPath: string, oldKey: string, newKey: string, objToChange: string): any {\r\n\r\n    // for top level properties\r\n    if (propertyPath.split('.').length === 1) {\r\n      return Object.keys(json).reduce( (acc, curr, idx, arr) =>\r\n        curr === oldKey ? ({ ...acc, [newKey]: json[oldKey] }) : ({...acc, [curr]: json[curr]}), {} );\r\n    }\r\n\r\n    // for nested properties\r\n    if (propertyPath.split('.').length > 1) {\r\n      return propertyPath.split('.').reduce( (acc, curr, idx, arr) => {\r\n          if ( idx === (arr.length - 1) && acc ) {\r\n\r\n            const idxPos: number = arr.indexOf(objToChange);\r\n            const idxPosArr: Array<string> = [ ...arr.splice(0, idxPos + 1) ];\r\n\r\n            DotNotationUtil.SetValue(json, idxPosArr.join('.'), this.RenameKeys({[oldKey]: newKey}, acc));\r\n\r\n            return json;\r\n            // return {\r\n            //   ...schema, [objToChange]: this.renameKeys({[oldKey]: newKey}, acc)\r\n            // };\r\n          }\r\n          return acc ? acc[curr] : null; // if acc, then start additional iterations with acc[curr]\r\n      }, json); // first item to start the loop\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rename property keys\r\n   */\r\n  public static RenameKeys(keysMap: object, obj: JSON | object): object {\r\n    return Object\r\n            .keys(obj)\r\n            .reduce((acc, key) => {\r\n              const renamedObject = {\r\n                [keysMap[key] || key]: obj[key]\r\n              };\r\n              return {\r\n                ...acc,\r\n                ...renamedObject\r\n              };\r\n            }, {});\r\n  }\r\n}\r\n","// @dynamic\r\n/**\r\n * @dynamic need this because there are static memebers\r\n */\r\n\r\nexport class CountryConstants{\r\n   \r\n  public static Countries: Array<any> = [\r\n{\r\n      \"country\" : \"Albania\",\r\n      \"alpha2\" : \"AL\",\r\n      \"alpha3\" : \"ALB\",\r\n      \"numeric\" : 8,\r\n      \"latitude\" : 41,\r\n      \"longitude\" : 20\r\n    },\r\n{\r\n      \"country\" : \"Algeria\",\r\n      \"alpha2\" : \"DZ\",\r\n      \"alpha3\" : \"DZA\",\r\n      \"numeric\" : 12,\r\n      \"latitude\" : 28,\r\n      \"longitude\" : 3\r\n    },\r\n{\r\n      \"country\" : \"American Samoa\",\r\n      \"alpha2\" : \"AS\",\r\n      \"alpha3\" : \"ASM\",\r\n      \"numeric\" : 16,\r\n      \"latitude\" : -14.3333,\r\n      \"longitude\" : -170\r\n    },\r\n{\r\n      \"country\" : \"Andorra\",\r\n      \"alpha2\" : \"AD\",\r\n      \"alpha3\" : \"AND\",\r\n      \"numeric\" : 20,\r\n      \"latitude\" : 42.5,\r\n      \"longitude\" : 1.6\r\n    },\r\n{\r\n      \"country\" : \"Angola\",\r\n      \"alpha2\" : \"AO\",\r\n      \"alpha3\" : \"AGO\",\r\n      \"numeric\" : 24,\r\n      \"latitude\" : -12.5,\r\n      \"longitude\" : 18.5\r\n    },\r\n{\r\n      \"country\" : \"Anguilla\",\r\n      \"alpha2\" : \"AI\",\r\n      \"alpha3\" : \"AIA\",\r\n      \"numeric\" : 660,\r\n      \"latitude\" : 18.25,\r\n      \"longitude\" : -63.1667\r\n    },\r\n{\r\n      \"country\" : \"Antarctica\",\r\n      \"alpha2\" : \"AQ\",\r\n      \"alpha3\" : \"ATA\",\r\n      \"numeric\" : 10,\r\n      \"latitude\" : -90,\r\n      \"longitude\" : 0\r\n    },\r\n{\r\n      \"country\" : \"Antigua and Barbuda\",\r\n      \"alpha2\" : \"AG\",\r\n      \"alpha3\" : \"ATG\",\r\n      \"numeric\" : 28,\r\n      \"latitude\" : 17.05,\r\n      \"longitude\" : -61.8\r\n    },\r\n{\r\n      \"country\" : \"Argentina\",\r\n      \"alpha2\" : \"AR\",\r\n      \"alpha3\" : \"ARG\",\r\n      \"numeric\" : 32,\r\n      \"latitude\" : -34,\r\n      \"longitude\" : -64\r\n    },\r\n{\r\n      \"country\" : \"Armenia\",\r\n      \"alpha2\" : \"AM\",\r\n      \"alpha3\" : \"ARM\",\r\n      \"numeric\" : 51,\r\n      \"latitude\" : 40,\r\n      \"longitude\" : 45\r\n    },\r\n{\r\n      \"country\" : \"Aruba\",\r\n      \"alpha2\" : \"AW\",\r\n      \"alpha3\" : \"ABW\",\r\n      \"numeric\" : 533,\r\n      \"latitude\" : 12.5,\r\n      \"longitude\" : -69.9667\r\n    },\r\n{\r\n      \"country\" : \"Australia\",\r\n      \"alpha2\" : \"AU\",\r\n      \"alpha3\" : \"AUS\",\r\n      \"numeric\" : 36,\r\n      \"latitude\" : -27,\r\n      \"longitude\" : 133\r\n    },\r\n{\r\n      \"country\" : \"Austria\",\r\n      \"alpha2\" : \"AT\",\r\n      \"alpha3\" : \"AUT\",\r\n      \"numeric\" : 40,\r\n      \"latitude\" : 47.3333,\r\n      \"longitude\" : 13.3333\r\n    },\r\n{\r\n      \"country\" : \"Azerbaijan\",\r\n      \"alpha2\" : \"AZ\",\r\n      \"alpha3\" : \"AZE\",\r\n      \"numeric\" : 31,\r\n      \"latitude\" : 40.5,\r\n      \"longitude\" : 47.5\r\n    },\r\n{\r\n      \"country\" : \"Bahamas\",\r\n      \"alpha2\" : \"BS\",\r\n      \"alpha3\" : \"BHS\",\r\n      \"numeric\" : 44,\r\n      \"latitude\" : 24.25,\r\n      \"longitude\" : -76\r\n    },\r\n{\r\n      \"country\" : \"Bahrain\",\r\n      \"alpha2\" : \"BH\",\r\n      \"alpha3\" : \"BHR\",\r\n      \"numeric\" : 48,\r\n      \"latitude\" : 26,\r\n      \"longitude\" : 50.55\r\n    },\r\n{\r\n      \"country\" : \"Bangladesh\",\r\n      \"alpha2\" : \"BD\",\r\n      \"alpha3\" : \"BGD\",\r\n      \"numeric\" : 50,\r\n      \"latitude\" : 24,\r\n      \"longitude\" : 90\r\n    },\r\n{\r\n      \"country\" : \"Barbados\",\r\n      \"alpha2\" : \"BB\",\r\n      \"alpha3\" : \"BRB\",\r\n      \"numeric\" : 52,\r\n      \"latitude\" : 13.1667,\r\n      \"longitude\" : -59.5333\r\n    },\r\n{\r\n      \"country\" : \"Belarus\",\r\n      \"alpha2\" : \"BY\",\r\n      \"alpha3\" : \"BLR\",\r\n      \"numeric\" : 112,\r\n      \"latitude\" : 53,\r\n      \"longitude\" : 28\r\n    },\r\n{\r\n      \"country\" : \"Belgium\",\r\n      \"alpha2\" : \"BE\",\r\n      \"alpha3\" : \"BEL\",\r\n      \"numeric\" : 56,\r\n      \"latitude\" : 50.8333,\r\n      \"longitude\" : 4\r\n    },\r\n{\r\n      \"country\" : \"Belize\",\r\n      \"alpha2\" : \"BZ\",\r\n      \"alpha3\" : \"BLZ\",\r\n      \"numeric\" : 84,\r\n      \"latitude\" : 17.25,\r\n      \"longitude\" : -88.75\r\n    },\r\n{\r\n      \"country\" : \"Benin\",\r\n      \"alpha2\" : \"BJ\",\r\n      \"alpha3\" : \"BEN\",\r\n      \"numeric\" : 204,\r\n      \"latitude\" : 9.5,\r\n      \"longitude\" : 2.25\r\n    },\r\n{\r\n      \"country\" : \"Bermuda\",\r\n      \"alpha2\" : \"BM\",\r\n      \"alpha3\" : \"BMU\",\r\n      \"numeric\" : 60,\r\n      \"latitude\" : 32.3333,\r\n      \"longitude\" : -64.75\r\n    },\r\n{\r\n      \"country\" : \"Bhutan\",\r\n      \"alpha2\" : \"BT\",\r\n      \"alpha3\" : \"BTN\",\r\n      \"numeric\" : 64,\r\n      \"latitude\" : 27.5,\r\n      \"longitude\" : 90.5\r\n    },\r\n{\r\n      \"country\" : \"Bolivia, Plurinational State of\",\r\n      \"alpha2\" : \"BO\",\r\n      \"alpha3\" : \"BOL\",\r\n      \"numeric\" : 68,\r\n      \"latitude\" : -17,\r\n      \"longitude\" : -65\r\n    },\r\n{\r\n      \"country\" : \"Bosnia and Herzegovina\",\r\n      \"alpha2\" : \"BA\",\r\n      \"alpha3\" : \"BIH\",\r\n      \"numeric\" : 70,\r\n      \"latitude\" : 44,\r\n      \"longitude\" : 18\r\n    },\r\n{\r\n      \"country\" : \"Botswana\",\r\n      \"alpha2\" : \"BW\",\r\n      \"alpha3\" : \"BWA\",\r\n      \"numeric\" : 72,\r\n      \"latitude\" : -22,\r\n      \"longitude\" : 24\r\n    },\r\n{\r\n      \"country\" : \"Bouvet Island\",\r\n      \"alpha2\" : \"BV\",\r\n      \"alpha3\" : \"BVT\",\r\n      \"numeric\" : 74,\r\n      \"latitude\" : -54.4333,\r\n      \"longitude\" : 3.4\r\n    },\r\n{\r\n      \"country\" : \"Brazil\",\r\n      \"alpha2\" : \"BR\",\r\n      \"alpha3\" : \"BRA\",\r\n      \"numeric\" : 76,\r\n      \"latitude\" : -10,\r\n      \"longitude\" : -55\r\n    },\r\n{\r\n      \"country\" : \"British Indian Ocean Territory\",\r\n      \"alpha2\" : \"IO\",\r\n      \"alpha3\" : \"IOT\",\r\n      \"numeric\" : 86,\r\n      \"latitude\" : -6,\r\n      \"longitude\" : 71.5\r\n    },\r\n{\r\n      \"country\" : \"Brunei Darussalam\",\r\n      \"alpha2\" : \"BN\",\r\n      \"alpha3\" : \"BRN\",\r\n      \"numeric\" : 96,\r\n      \"latitude\" : 4.5,\r\n      \"longitude\" : 114.6667\r\n    },\r\n{\r\n      \"country\" : \"Bulgaria\",\r\n      \"alpha2\" : \"BG\",\r\n      \"alpha3\" : \"BGR\",\r\n      \"numeric\" : 100,\r\n      \"latitude\" : 43,\r\n      \"longitude\" : 25\r\n    },\r\n{\r\n      \"country\" : \"Burkina Faso\",\r\n      \"alpha2\" : \"BF\",\r\n      \"alpha3\" : \"BFA\",\r\n      \"numeric\" : 854,\r\n      \"latitude\" : 13,\r\n      \"longitude\" : -2\r\n    },\r\n{\r\n      \"country\" : \"Burundi\",\r\n      \"alpha2\" : \"BI\",\r\n      \"alpha3\" : \"BDI\",\r\n      \"numeric\" : 108,\r\n      \"latitude\" : -3.5,\r\n      \"longitude\" : 30\r\n    },\r\n{\r\n      \"country\" : \"Cambodia\",\r\n      \"alpha2\" : \"KH\",\r\n      \"alpha3\" : \"KHM\",\r\n      \"numeric\" : 116,\r\n      \"latitude\" : 13,\r\n      \"longitude\" : 105\r\n    },\r\n{\r\n      \"country\" : \"Cameroon\",\r\n      \"alpha2\" : \"CM\",\r\n      \"alpha3\" : \"CMR\",\r\n      \"numeric\" : 120,\r\n      \"latitude\" : 6,\r\n      \"longitude\" : 12\r\n    },\r\n{\r\n      \"country\" : \"Canada\",\r\n      \"alpha2\" : \"CA\",\r\n      \"alpha3\" : \"CAN\",\r\n      \"numeric\" : 124,\r\n      \"latitude\" : 60,\r\n      \"longitude\" : -95\r\n    },\r\n{\r\n      \"country\" : \"Cape Verde\",\r\n      \"alpha2\" : \"CV\",\r\n      \"alpha3\" : \"CPV\",\r\n      \"numeric\" : 132,\r\n      \"latitude\" : 16,\r\n      \"longitude\" : -24\r\n    },\r\n{\r\n      \"country\" : \"Cayman Islands\",\r\n      \"alpha2\" : \"KY\",\r\n      \"alpha3\" : \"CYM\",\r\n      \"numeric\" : 136,\r\n      \"latitude\" : 19.5,\r\n      \"longitude\" : -80.5\r\n    },\r\n{\r\n      \"country\" : \"Central African Republic\",\r\n      \"alpha2\" : \"CF\",\r\n      \"alpha3\" : \"CAF\",\r\n      \"numeric\" : 140,\r\n      \"latitude\" : 7,\r\n      \"longitude\" : 21\r\n    },\r\n{\r\n      \"country\" : \"Chad\",\r\n      \"alpha2\" : \"TD\",\r\n      \"alpha3\" : \"TCD\",\r\n      \"numeric\" : 148,\r\n      \"latitude\" : 15,\r\n      \"longitude\" : 19\r\n    },\r\n{\r\n      \"country\" : \"Chile\",\r\n      \"alpha2\" : \"CL\",\r\n      \"alpha3\" : \"CHL\",\r\n      \"numeric\" : 152,\r\n      \"latitude\" : -30,\r\n      \"longitude\" : -71\r\n    },\r\n{\r\n      \"country\" : \"China\",\r\n      \"alpha2\" : \"CN\",\r\n      \"alpha3\" : \"CHN\",\r\n      \"numeric\" : 156,\r\n      \"latitude\" : 35,\r\n      \"longitude\" : 105\r\n    },\r\n{\r\n      \"country\" : \"Christmas Island\",\r\n      \"alpha2\" : \"CX\",\r\n      \"alpha3\" : \"CXR\",\r\n      \"numeric\" : 162,\r\n      \"latitude\" : -10.5,\r\n      \"longitude\" : 105.6667\r\n    },\r\n{\r\n      \"country\" : \"Cocos (Keeling) Islands\",\r\n      \"alpha2\" : \"CC\",\r\n      \"alpha3\" : \"CCK\",\r\n      \"numeric\" : 166,\r\n      \"latitude\" : -12.5,\r\n      \"longitude\" : 96.8333\r\n    },\r\n{\r\n      \"country\" : \"Colombia\",\r\n      \"alpha2\" : \"CO\",\r\n      \"alpha3\" : \"COL\",\r\n      \"numeric\" : 170,\r\n      \"latitude\" : 4,\r\n      \"longitude\" : -72\r\n    },\r\n{\r\n      \"country\" : \"Comoros\",\r\n      \"alpha2\" : \"KM\",\r\n      \"alpha3\" : \"COM\",\r\n      \"numeric\" : 174,\r\n      \"latitude\" : -12.1667,\r\n      \"longitude\" : 44.25\r\n    },\r\n{\r\n      \"country\" : \"Congo\",\r\n      \"alpha2\" : \"CG\",\r\n      \"alpha3\" : \"COG\",\r\n      \"numeric\" : 178,\r\n      \"latitude\" : -1,\r\n      \"longitude\" : 15\r\n    },\r\n{\r\n      \"country\" : \"Congo, the Democratic Republic of the\",\r\n      \"alpha2\" : \"CD\",\r\n      \"alpha3\" : \"COD\",\r\n      \"numeric\" : 180,\r\n      \"latitude\" : 0,\r\n      \"longitude\" : 25\r\n    },\r\n{\r\n      \"country\" : \"Cook Islands\",\r\n      \"alpha2\" : \"CK\",\r\n      \"alpha3\" : \"COK\",\r\n      \"numeric\" : 184,\r\n      \"latitude\" : -21.2333,\r\n      \"longitude\" : -159.7667\r\n    },\r\n{\r\n      \"country\" : \"Costa Rica\",\r\n      \"alpha2\" : \"CR\",\r\n      \"alpha3\" : \"CRI\",\r\n      \"numeric\" : 188,\r\n      \"latitude\" : 10,\r\n      \"longitude\" : -84\r\n    },\r\n{\r\n      \"country\" : \"Côte d'Ivoire\",\r\n      \"alpha2\" : \"CI\",\r\n      \"alpha3\" : \"CIV\",\r\n      \"numeric\" : 384,\r\n      \"latitude\" : 8,\r\n      \"longitude\" : -5\r\n    },\r\n{\r\n      \"country\" : \"Croatia\",\r\n      \"alpha2\" : \"HR\",\r\n      \"alpha3\" : \"HRV\",\r\n      \"numeric\" : 191,\r\n      \"latitude\" : 45.1667,\r\n      \"longitude\" : 15.5\r\n    },\r\n{\r\n      \"country\" : \"Cuba\",\r\n      \"alpha2\" : \"CU\",\r\n      \"alpha3\" : \"CUB\",\r\n      \"numeric\" : 192,\r\n      \"latitude\" : 21.5,\r\n      \"longitude\" : -80\r\n    },\r\n{\r\n      \"country\" : \"Cyprus\",\r\n      \"alpha2\" : \"CY\",\r\n      \"alpha3\" : \"CYP\",\r\n      \"numeric\" : 196,\r\n      \"latitude\" : 35,\r\n      \"longitude\" : 33\r\n    },\r\n{\r\n      \"country\" : \"Czech Republic\",\r\n      \"alpha2\" : \"CZ\",\r\n      \"alpha3\" : \"CZE\",\r\n      \"numeric\" : 203,\r\n      \"latitude\" : 49.75,\r\n      \"longitude\" : 15.5\r\n    },\r\n{\r\n      \"country\" : \"Denmark\",\r\n      \"alpha2\" : \"DK\",\r\n      \"alpha3\" : \"DNK\",\r\n      \"numeric\" : 208,\r\n      \"latitude\" : 56,\r\n      \"longitude\" : 10\r\n    },\r\n{\r\n      \"country\" : \"Djibouti\",\r\n      \"alpha2\" : \"DJ\",\r\n      \"alpha3\" : \"DJI\",\r\n      \"numeric\" : 262,\r\n      \"latitude\" : 11.5,\r\n      \"longitude\" : 43\r\n    },\r\n{\r\n      \"country\" : \"Dominica\",\r\n      \"alpha2\" : \"DM\",\r\n      \"alpha3\" : \"DMA\",\r\n      \"numeric\" : 212,\r\n      \"latitude\" : 15.4167,\r\n      \"longitude\" : -61.3333\r\n    },\r\n{\r\n      \"country\" : \"Dominican Republic\",\r\n      \"alpha2\" : \"DO\",\r\n      \"alpha3\" : \"DOM\",\r\n      \"numeric\" : 214,\r\n      \"latitude\" : 19,\r\n      \"longitude\" : -70.6667\r\n    },\r\n{\r\n      \"country\" : \"Ecuador\",\r\n      \"alpha2\" : \"EC\",\r\n      \"alpha3\" : \"ECU\",\r\n      \"numeric\" : 218,\r\n      \"latitude\" : -2,\r\n      \"longitude\" : -77.5\r\n    },\r\n{\r\n      \"country\" : \"Egypt\",\r\n      \"alpha2\" : \"EG\",\r\n      \"alpha3\" : \"EGY\",\r\n      \"numeric\" : 818,\r\n      \"latitude\" : 27,\r\n      \"longitude\" : 30\r\n    },\r\n{\r\n      \"country\" : \"El Salvador\",\r\n      \"alpha2\" : \"SV\",\r\n      \"alpha3\" : \"SLV\",\r\n      \"numeric\" : 222,\r\n      \"latitude\" : 13.8333,\r\n      \"longitude\" : -88.9167\r\n    },\r\n{\r\n      \"country\" : \"Equatorial Guinea\",\r\n      \"alpha2\" : \"GQ\",\r\n      \"alpha3\" : \"GNQ\",\r\n      \"numeric\" : 226,\r\n      \"latitude\" : 2,\r\n      \"longitude\" : 10\r\n    },\r\n{\r\n      \"country\" : \"Eritrea\",\r\n      \"alpha2\" : \"ER\",\r\n      \"alpha3\" : \"ERI\",\r\n      \"numeric\" : 232,\r\n      \"latitude\" : 15,\r\n      \"longitude\" : 39\r\n    },\r\n{\r\n      \"country\" : \"Estonia\",\r\n      \"alpha2\" : \"EE\",\r\n      \"alpha3\" : \"EST\",\r\n      \"numeric\" : 233,\r\n      \"latitude\" : 59,\r\n      \"longitude\" : 26\r\n    },\r\n{\r\n      \"country\" : \"Ethiopia\",\r\n      \"alpha2\" : \"ET\",\r\n      \"alpha3\" : \"ETH\",\r\n      \"numeric\" : 231,\r\n      \"latitude\" : 8,\r\n      \"longitude\" : 38\r\n    },\r\n{\r\n      \"country\" : \"Falkland Islands (Malvinas)\",\r\n      \"alpha2\" : \"FK\",\r\n      \"alpha3\" : \"FLK\",\r\n      \"numeric\" : 238,\r\n      \"latitude\" : -51.75,\r\n      \"longitude\" : -59\r\n    },\r\n{\r\n      \"country\" : \"Faroe Islands\",\r\n      \"alpha2\" : \"FO\",\r\n      \"alpha3\" : \"FRO\",\r\n      \"numeric\" : 234,\r\n      \"latitude\" : 62,\r\n      \"longitude\" : -7\r\n    },\r\n{\r\n      \"country\" : \"Fiji\",\r\n      \"alpha2\" : \"FJ\",\r\n      \"alpha3\" : \"FJI\",\r\n      \"numeric\" : 242,\r\n      \"latitude\" : -18,\r\n      \"longitude\" : 175\r\n    },\r\n{\r\n      \"country\" : \"Finland\",\r\n      \"alpha2\" : \"FI\",\r\n      \"alpha3\" : \"FIN\",\r\n      \"numeric\" : 246,\r\n      \"latitude\" : 64,\r\n      \"longitude\" : 26\r\n    },\r\n{\r\n      \"country\" : \"France\",\r\n      \"alpha2\" : \"FR\",\r\n      \"alpha3\" : \"FRA\",\r\n      \"numeric\" : 250,\r\n      \"latitude\" : 46,\r\n      \"longitude\" : 2\r\n    },\r\n{\r\n      \"country\" : \"French Guiana\",\r\n      \"alpha2\" : \"GF\",\r\n      \"alpha3\" : \"GUF\",\r\n      \"numeric\" : 254,\r\n      \"latitude\" : 4,\r\n      \"longitude\" : -53\r\n    },\r\n{\r\n      \"country\" : \"French Polynesia\",\r\n      \"alpha2\" : \"PF\",\r\n      \"alpha3\" : \"PYF\",\r\n      \"numeric\" : 258,\r\n      \"latitude\" : -15,\r\n      \"longitude\" : -140\r\n    },\r\n{\r\n      \"country\" : \"French Southern Territories\",\r\n      \"alpha2\" : \"TF\",\r\n      \"alpha3\" : \"ATF\",\r\n      \"numeric\" : 260,\r\n      \"latitude\" : -43,\r\n      \"longitude\" : 67\r\n    },\r\n{\r\n      \"country\" : \"Gabon\",\r\n      \"alpha2\" : \"GA\",\r\n      \"alpha3\" : \"GAB\",\r\n      \"numeric\" : 266,\r\n      \"latitude\" : -1,\r\n      \"longitude\" : 11.75\r\n    },\r\n{\r\n      \"country\" : \"Gambia\",\r\n      \"alpha2\" : \"GM\",\r\n      \"alpha3\" : \"GMB\",\r\n      \"numeric\" : 270,\r\n      \"latitude\" : 13.4667,\r\n      \"longitude\" : -16.5667\r\n    },\r\n{\r\n      \"country\" : \"Georgia\",\r\n      \"alpha2\" : \"GE\",\r\n      \"alpha3\" : \"GEO\",\r\n      \"numeric\" : 268,\r\n      \"latitude\" : 42,\r\n      \"longitude\" : 43.5\r\n    },\r\n{\r\n      \"country\" : \"Germany\",\r\n      \"alpha2\" : \"DE\",\r\n      \"alpha3\" : \"DEU\",\r\n      \"numeric\" : 276,\r\n      \"latitude\" : 51,\r\n      \"longitude\" : 9\r\n    },\r\n{\r\n      \"country\" : \"Ghana\",\r\n      \"alpha2\" : \"GH\",\r\n      \"alpha3\" : \"GHA\",\r\n      \"numeric\" : 288,\r\n      \"latitude\" : 8,\r\n      \"longitude\" : -2\r\n    },\r\n{\r\n      \"country\" : \"Gibraltar\",\r\n      \"alpha2\" : \"GI\",\r\n      \"alpha3\" : \"GIB\",\r\n      \"numeric\" : 292,\r\n      \"latitude\" : 36.1833,\r\n      \"longitude\" : -5.3667\r\n    },\r\n{\r\n      \"country\" : \"Greece\",\r\n      \"alpha2\" : \"GR\",\r\n      \"alpha3\" : \"GRC\",\r\n      \"numeric\" : 300,\r\n      \"latitude\" : 39,\r\n      \"longitude\" : 22\r\n    },\r\n{\r\n      \"country\" : \"Greenland\",\r\n      \"alpha2\" : \"GL\",\r\n      \"alpha3\" : \"GRL\",\r\n      \"numeric\" : 304,\r\n      \"latitude\" : 72,\r\n      \"longitude\" : -40\r\n    },\r\n{\r\n      \"country\" : \"Grenada\",\r\n      \"alpha2\" : \"GD\",\r\n      \"alpha3\" : \"GRD\",\r\n      \"numeric\" : 308,\r\n      \"latitude\" : 12.1167,\r\n      \"longitude\" : -61.6667\r\n    },\r\n{\r\n      \"country\" : \"Guadeloupe\",\r\n      \"alpha2\" : \"GP\",\r\n      \"alpha3\" : \"GLP\",\r\n      \"numeric\" : 312,\r\n      \"latitude\" : 16.25,\r\n      \"longitude\" : -61.5833\r\n    },\r\n{\r\n      \"country\" : \"Guam\",\r\n      \"alpha2\" : \"GU\",\r\n      \"alpha3\" : \"GUM\",\r\n      \"numeric\" : 316,\r\n      \"latitude\" : 13.4667,\r\n      \"longitude\" : 144.7833\r\n    },\r\n{\r\n      \"country\" : \"Guatemala\",\r\n      \"alpha2\" : \"GT\",\r\n      \"alpha3\" : \"GTM\",\r\n      \"numeric\" : 320,\r\n      \"latitude\" : 15.5,\r\n      \"longitude\" : -90.25\r\n    },\r\n{\r\n      \"country\" : \"Guernsey\",\r\n      \"alpha2\" : \"GG\",\r\n      \"alpha3\" : \"GGY\",\r\n      \"numeric\" : 831,\r\n      \"latitude\" : 49.5,\r\n      \"longitude\" : -2.56\r\n    },\r\n{\r\n      \"country\" : \"Guinea\",\r\n      \"alpha2\" : \"GN\",\r\n      \"alpha3\" : \"GIN\",\r\n      \"numeric\" : 324,\r\n      \"latitude\" : 11,\r\n      \"longitude\" : -10\r\n    },\r\n{\r\n      \"country\" : \"Guinea-Bissau\",\r\n      \"alpha2\" : \"GW\",\r\n      \"alpha3\" : \"GNB\",\r\n      \"numeric\" : 624,\r\n      \"latitude\" : 12,\r\n      \"longitude\" : -15\r\n    },\r\n{\r\n      \"country\" : \"Guyana\",\r\n      \"alpha2\" : \"GY\",\r\n      \"alpha3\" : \"GUY\",\r\n      \"numeric\" : 328,\r\n      \"latitude\" : 5,\r\n      \"longitude\" : -59\r\n    },\r\n{\r\n      \"country\" : \"Haiti\",\r\n      \"alpha2\" : \"HT\",\r\n      \"alpha3\" : \"HTI\",\r\n      \"numeric\" : 332,\r\n      \"latitude\" : 19,\r\n      \"longitude\" : -72.4167\r\n    },\r\n{\r\n      \"country\" : \"Heard Island and McDonald Islands\",\r\n      \"alpha2\" : \"HM\",\r\n      \"alpha3\" : \"HMD\",\r\n      \"numeric\" : 334,\r\n      \"latitude\" : -53.1,\r\n      \"longitude\" : 72.5167\r\n    },\r\n{\r\n      \"country\" : \"Holy See (Vatican City State)\",\r\n      \"alpha2\" : \"VA\",\r\n      \"alpha3\" : \"VAT\",\r\n      \"numeric\" : 336,\r\n      \"latitude\" : 41.9,\r\n      \"longitude\" : 12.45\r\n    },\r\n{\r\n      \"country\" : \"Honduras\",\r\n      \"alpha2\" : \"HN\",\r\n      \"alpha3\" : \"HND\",\r\n      \"numeric\" : 340,\r\n      \"latitude\" : 15,\r\n      \"longitude\" : -86.5\r\n    },\r\n{\r\n      \"country\" : \"Hong Kong\",\r\n      \"alpha2\" : \"HK\",\r\n      \"alpha3\" : \"HKG\",\r\n      \"numeric\" : 344,\r\n      \"latitude\" : 22.25,\r\n      \"longitude\" : 114.1667\r\n    },\r\n{\r\n      \"country\" : \"Hungary\",\r\n      \"alpha2\" : \"HU\",\r\n      \"alpha3\" : \"HUN\",\r\n      \"numeric\" : 348,\r\n      \"latitude\" : 47,\r\n      \"longitude\" : 20\r\n    },\r\n{\r\n      \"country\" : \"Iceland\",\r\n      \"alpha2\" : \"IS\",\r\n      \"alpha3\" : \"ISL\",\r\n      \"numeric\" : 352,\r\n      \"latitude\" : 65,\r\n      \"longitude\" : -18\r\n    },\r\n{\r\n      \"country\" : \"India\",\r\n      \"alpha2\" : \"IN\",\r\n      \"alpha3\" : \"IND\",\r\n      \"numeric\" : 356,\r\n      \"latitude\" : 20,\r\n      \"longitude\" : 77\r\n    },\r\n{\r\n      \"country\" : \"Indonesia\",\r\n      \"alpha2\" : \"ID\",\r\n      \"alpha3\" : \"IDN\",\r\n      \"numeric\" : 360,\r\n      \"latitude\" : -5,\r\n      \"longitude\" : 120\r\n    },\r\n{\r\n      \"country\" : \"Iran, Islamic Republic of\",\r\n      \"alpha2\" : \"IR\",\r\n      \"alpha3\" : \"IRN\",\r\n      \"numeric\" : 364,\r\n      \"latitude\" : 32,\r\n      \"longitude\" : 53\r\n    },\r\n{\r\n      \"country\" : \"Iraq\",\r\n      \"alpha2\" : \"IQ\",\r\n      \"alpha3\" : \"IRQ\",\r\n      \"numeric\" : 368,\r\n      \"latitude\" : 33,\r\n      \"longitude\" : 44\r\n    },\r\n{\r\n      \"country\" : \"Ireland\",\r\n      \"alpha2\" : \"IE\",\r\n      \"alpha3\" : \"IRL\",\r\n      \"numeric\" : 372,\r\n      \"latitude\" : 53,\r\n      \"longitude\" : -8\r\n    },\r\n{\r\n      \"country\" : \"Isle of Man\",\r\n      \"alpha2\" : \"IM\",\r\n      \"alpha3\" : \"IMN\",\r\n      \"numeric\" : 833,\r\n      \"latitude\" : 54.23,\r\n      \"longitude\" : -4.55\r\n    },\r\n{\r\n      \"country\" : \"Israel\",\r\n      \"alpha2\" : \"IL\",\r\n      \"alpha3\" : \"ISR\",\r\n      \"numeric\" : 376,\r\n      \"latitude\" : 31.5,\r\n      \"longitude\" : 34.75\r\n    },\r\n{\r\n      \"country\" : \"Italy\",\r\n      \"alpha2\" : \"IT\",\r\n      \"alpha3\" : \"ITA\",\r\n      \"numeric\" : 380,\r\n      \"latitude\" : 42.8333,\r\n      \"longitude\" : 12.8333\r\n    },\r\n{\r\n      \"country\" : \"Jamaica\",\r\n      \"alpha2\" : \"JM\",\r\n      \"alpha3\" : \"JAM\",\r\n      \"numeric\" : 388,\r\n      \"latitude\" : 18.25,\r\n      \"longitude\" : -77.5\r\n    },\r\n{\r\n      \"country\" : \"Japan\",\r\n      \"alpha2\" : \"JP\",\r\n      \"alpha3\" : \"JPN\",\r\n      \"numeric\" : 392,\r\n      \"latitude\" : 36,\r\n      \"longitude\" : 138\r\n    },\r\n{\r\n      \"country\" : \"Jersey\",\r\n      \"alpha2\" : \"JE\",\r\n      \"alpha3\" : \"JEY\",\r\n      \"numeric\" : 832,\r\n      \"latitude\" : 49.21,\r\n      \"longitude\" : -2.13\r\n    },\r\n{\r\n      \"country\" : \"Jordan\",\r\n      \"alpha2\" : \"JO\",\r\n      \"alpha3\" : \"JOR\",\r\n      \"numeric\" : 400,\r\n      \"latitude\" : 31,\r\n      \"longitude\" : 36\r\n    },\r\n{\r\n      \"country\" : \"Kazakhstan\",\r\n      \"alpha2\" : \"KZ\",\r\n      \"alpha3\" : \"KAZ\",\r\n      \"numeric\" : 398,\r\n      \"latitude\" : 48,\r\n      \"longitude\" : 68\r\n    },\r\n{\r\n      \"country\" : \"Kenya\",\r\n      \"alpha2\" : \"KE\",\r\n      \"alpha3\" : \"KEN\",\r\n      \"numeric\" : 404,\r\n      \"latitude\" : 1,\r\n      \"longitude\" : 38\r\n    },\r\n{\r\n      \"country\" : \"Kiribati\",\r\n      \"alpha2\" : \"KI\",\r\n      \"alpha3\" : \"KIR\",\r\n      \"numeric\" : 296,\r\n      \"latitude\" : 1.4167,\r\n      \"longitude\" : 173\r\n    },\r\n{\r\n      \"country\" : \"Korea, Democratic People's Republic of\",\r\n      \"alpha2\" : \"KP\",\r\n      \"alpha3\" : \"PRK\",\r\n      \"numeric\" : 408,\r\n      \"latitude\" : 40,\r\n      \"longitude\" : 127\r\n    },\r\n{\r\n      \"country\" : \"Korea, Republic of\",\r\n      \"alpha2\" : \"KR\",\r\n      \"alpha3\" : \"KOR\",\r\n      \"numeric\" : 410,\r\n      \"latitude\" : 37,\r\n      \"longitude\" : 127.5\r\n    },\r\n{\r\n      \"country\" : \"Kuwait\",\r\n      \"alpha2\" : \"KW\",\r\n      \"alpha3\" : \"KWT\",\r\n      \"numeric\" : 414,\r\n      \"latitude\" : 29.3375,\r\n      \"longitude\" : 47.6581\r\n    },\r\n{\r\n      \"country\" : \"Kyrgyzstan\",\r\n      \"alpha2\" : \"KG\",\r\n      \"alpha3\" : \"KGZ\",\r\n      \"numeric\" : 417,\r\n      \"latitude\" : 41,\r\n      \"longitude\" : 75\r\n    },\r\n{\r\n      \"country\" : \"Lao People's Democratic Republic\",\r\n      \"alpha2\" : \"LA\",\r\n      \"alpha3\" : \"LAO\",\r\n      \"numeric\" : 418,\r\n      \"latitude\" : 18,\r\n      \"longitude\" : 105\r\n    },\r\n{\r\n      \"country\" : \"Latvia\",\r\n      \"alpha2\" : \"LV\",\r\n      \"alpha3\" : \"LVA\",\r\n      \"numeric\" : 428,\r\n      \"latitude\" : 57,\r\n      \"longitude\" : 25\r\n    },\r\n{\r\n      \"country\" : \"Lebanon\",\r\n      \"alpha2\" : \"LB\",\r\n      \"alpha3\" : \"LBN\",\r\n      \"numeric\" : 422,\r\n      \"latitude\" : 33.8333,\r\n      \"longitude\" : 35.8333\r\n    },\r\n{\r\n      \"country\" : \"Lesotho\",\r\n      \"alpha2\" : \"LS\",\r\n      \"alpha3\" : \"LSO\",\r\n      \"numeric\" : 426,\r\n      \"latitude\" : -29.5,\r\n      \"longitude\" : 28.5\r\n    },\r\n{\r\n      \"country\" : \"Liberia\",\r\n      \"alpha2\" : \"LR\",\r\n      \"alpha3\" : \"LBR\",\r\n      \"numeric\" : 430,\r\n      \"latitude\" : 6.5,\r\n      \"longitude\" : -9.5\r\n    },\r\n{\r\n      \"country\" : \"Libyan Arab Jamahiriya\",\r\n      \"alpha2\" : \"LY\",\r\n      \"alpha3\" : \"LBY\",\r\n      \"numeric\" : 434,\r\n      \"latitude\" : 25,\r\n      \"longitude\" : 17\r\n    },\r\n{\r\n      \"country\" : \"Liechtenstein\",\r\n      \"alpha2\" : \"LI\",\r\n      \"alpha3\" : \"LIE\",\r\n      \"numeric\" : 438,\r\n      \"latitude\" : 47.1667,\r\n      \"longitude\" : 9.5333\r\n    },\r\n{\r\n      \"country\" : \"Lithuania\",\r\n      \"alpha2\" : \"LT\",\r\n      \"alpha3\" : \"LTU\",\r\n      \"numeric\" : 440,\r\n      \"latitude\" : 56,\r\n      \"longitude\" : 24\r\n    },\r\n{\r\n      \"country\" : \"Luxembourg\",\r\n      \"alpha2\" : \"LU\",\r\n      \"alpha3\" : \"LUX\",\r\n      \"numeric\" : 442,\r\n      \"latitude\" : 49.75,\r\n      \"longitude\" : 6.1667\r\n    },\r\n{\r\n      \"country\" : \"Macao\",\r\n      \"alpha2\" : \"MO\",\r\n      \"alpha3\" : \"MAC\",\r\n      \"numeric\" : 446,\r\n      \"latitude\" : 22.1667,\r\n      \"longitude\" : 113.55\r\n    },\r\n{\r\n      \"country\" : \"Macedonia, the former Yugoslav Republic of\",\r\n      \"alpha2\" : \"MK\",\r\n      \"alpha3\" : \"MKD\",\r\n      \"numeric\" : 807,\r\n      \"latitude\" : 41.8333,\r\n      \"longitude\" : 22\r\n    },\r\n{\r\n      \"country\" : \"Madagascar\",\r\n      \"alpha2\" : \"MG\",\r\n      \"alpha3\" : \"MDG\",\r\n      \"numeric\" : 450,\r\n      \"latitude\" : -20,\r\n      \"longitude\" : 47\r\n    },\r\n{\r\n      \"country\" : \"Malawi\",\r\n      \"alpha2\" : \"MW\",\r\n      \"alpha3\" : \"MWI\",\r\n      \"numeric\" : 454,\r\n      \"latitude\" : -13.5,\r\n      \"longitude\" : 34\r\n    },\r\n{\r\n      \"country\" : \"Malaysia\",\r\n      \"alpha2\" : \"MY\",\r\n      \"alpha3\" : \"MYS\",\r\n      \"numeric\" : 458,\r\n      \"latitude\" : 2.5,\r\n      \"longitude\" : 112.5\r\n    },\r\n{\r\n      \"country\" : \"Maldives\",\r\n      \"alpha2\" : \"MV\",\r\n      \"alpha3\" : \"MDV\",\r\n      \"numeric\" : 462,\r\n      \"latitude\" : 3.25,\r\n      \"longitude\" : 73\r\n    },\r\n{\r\n      \"country\" : \"Mali\",\r\n      \"alpha2\" : \"ML\",\r\n      \"alpha3\" : \"MLI\",\r\n      \"numeric\" : 466,\r\n      \"latitude\" : 17,\r\n      \"longitude\" : -4\r\n    },\r\n{\r\n      \"country\" : \"Malta\",\r\n      \"alpha2\" : \"MT\",\r\n      \"alpha3\" : \"MLT\",\r\n      \"numeric\" : 470,\r\n      \"latitude\" : 35.8333,\r\n      \"longitude\" : 14.5833\r\n    },\r\n{\r\n      \"country\" : \"Marshall Islands\",\r\n      \"alpha2\" : \"MH\",\r\n      \"alpha3\" : \"MHL\",\r\n      \"numeric\" : 584,\r\n      \"latitude\" : 9,\r\n      \"longitude\" : 168\r\n    },\r\n{\r\n      \"country\" : \"Martinique\",\r\n      \"alpha2\" : \"MQ\",\r\n      \"alpha3\" : \"MTQ\",\r\n      \"numeric\" : 474,\r\n      \"latitude\" : 14.6667,\r\n      \"longitude\" : -61\r\n    },\r\n{\r\n      \"country\" : \"Mauritania\",\r\n      \"alpha2\" : \"MR\",\r\n      \"alpha3\" : \"MRT\",\r\n      \"numeric\" : 478,\r\n      \"latitude\" : 20,\r\n      \"longitude\" : -12\r\n    },\r\n{\r\n      \"country\" : \"Mauritius\",\r\n      \"alpha2\" : \"MU\",\r\n      \"alpha3\" : \"MUS\",\r\n      \"numeric\" : 480,\r\n      \"latitude\" : -20.2833,\r\n      \"longitude\" : 57.55\r\n    },\r\n{\r\n      \"country\" : \"Mayotte\",\r\n      \"alpha2\" : \"YT\",\r\n      \"alpha3\" : \"MYT\",\r\n      \"numeric\" : 175,\r\n      \"latitude\" : -12.8333,\r\n      \"longitude\" : 45.1667\r\n    },\r\n{\r\n      \"country\" : \"Mexico\",\r\n      \"alpha2\" : \"MX\",\r\n      \"alpha3\" : \"MEX\",\r\n      \"numeric\" : 484,\r\n      \"latitude\" : 23,\r\n      \"longitude\" : -102\r\n    },\r\n{\r\n      \"country\" : \"Micronesia, Federated States of\",\r\n      \"alpha2\" : \"FM\",\r\n      \"alpha3\" : \"FSM\",\r\n      \"numeric\" : 583,\r\n      \"latitude\" : 6.9167,\r\n      \"longitude\" : 158.25\r\n    },\r\n{\r\n      \"country\" : \"Moldova, Republic of\",\r\n      \"alpha2\" : \"MD\",\r\n      \"alpha3\" : \"MDA\",\r\n      \"numeric\" : 498,\r\n      \"latitude\" : 47,\r\n      \"longitude\" : 29\r\n    },\r\n{\r\n      \"country\" : \"Monaco\",\r\n      \"alpha2\" : \"MC\",\r\n      \"alpha3\" : \"MCO\",\r\n      \"numeric\" : 492,\r\n      \"latitude\" : 43.7333,\r\n      \"longitude\" : 7.4\r\n    },\r\n{\r\n      \"country\" : \"Mongolia\",\r\n      \"alpha2\" : \"MN\",\r\n      \"alpha3\" : \"MNG\",\r\n      \"numeric\" : 496,\r\n      \"latitude\" : 46,\r\n      \"longitude\" : 105\r\n    },\r\n{\r\n      \"country\" : \"Montenegro\",\r\n      \"alpha2\" : \"ME\",\r\n      \"alpha3\" : \"MNE\",\r\n      \"numeric\" : 499,\r\n      \"latitude\" : 42,\r\n      \"longitude\" : 19\r\n    },\r\n{\r\n      \"country\" : \"Montserrat\",\r\n      \"alpha2\" : \"MS\",\r\n      \"alpha3\" : \"MSR\",\r\n      \"numeric\" : 500,\r\n      \"latitude\" : 16.75,\r\n      \"longitude\" : -62.2\r\n    },\r\n{\r\n      \"country\" : \"Morocco\",\r\n      \"alpha2\" : \"MA\",\r\n      \"alpha3\" : \"MAR\",\r\n      \"numeric\" : 504,\r\n      \"latitude\" : 32,\r\n      \"longitude\" : -5\r\n    },\r\n{\r\n      \"country\" : \"Mozambique\",\r\n      \"alpha2\" : \"MZ\",\r\n      \"alpha3\" : \"MOZ\",\r\n      \"numeric\" : 508,\r\n      \"latitude\" : -18.25,\r\n      \"longitude\" : 35\r\n    },\r\n{\r\n      \"country\" : \"Myanmar\",\r\n      \"alpha2\" : \"MM\",\r\n      \"alpha3\" : \"MMR\",\r\n      \"numeric\" : 104,\r\n      \"latitude\" : 22,\r\n      \"longitude\" : 98\r\n    },\r\n{\r\n      \"country\" : \"Namibia\",\r\n      \"alpha2\" : \"NA\",\r\n      \"alpha3\" : \"NAM\",\r\n      \"numeric\" : 516,\r\n      \"latitude\" : -22,\r\n      \"longitude\" : 17\r\n    },\r\n{\r\n      \"country\" : \"Nauru\",\r\n      \"alpha2\" : \"NR\",\r\n      \"alpha3\" : \"NRU\",\r\n      \"numeric\" : 520,\r\n      \"latitude\" : -0.5333,\r\n      \"longitude\" : 166.9167\r\n    },\r\n{\r\n      \"country\" : \"Nepal\",\r\n      \"alpha2\" : \"NP\",\r\n      \"alpha3\" : \"NPL\",\r\n      \"numeric\" : 524,\r\n      \"latitude\" : 28,\r\n      \"longitude\" : 84\r\n    },\r\n{\r\n      \"country\" : \"Netherlands\",\r\n      \"alpha2\" : \"NL\",\r\n      \"alpha3\" : \"NLD\",\r\n      \"numeric\" : 528,\r\n      \"latitude\" : 52.5,\r\n      \"longitude\" : 5.75\r\n    },\r\n{\r\n      \"country\" : \"Netherlands Antilles\",\r\n      \"alpha2\" : \"AN\",\r\n      \"alpha3\" : \"ANT\",\r\n      \"numeric\" : 530,\r\n      \"latitude\" : 12.25,\r\n      \"longitude\" : -68.75\r\n    },\r\n{\r\n      \"country\" : \"New Caledonia\",\r\n      \"alpha2\" : \"NC\",\r\n      \"alpha3\" : \"NCL\",\r\n      \"numeric\" : 540,\r\n      \"latitude\" : -21.5,\r\n      \"longitude\" : 165.5\r\n    },\r\n{\r\n      \"country\" : \"New Zealand\",\r\n      \"alpha2\" : \"NZ\",\r\n      \"alpha3\" : \"NZL\",\r\n      \"numeric\" : 554,\r\n      \"latitude\" : -41,\r\n      \"longitude\" : 174\r\n    },\r\n{\r\n      \"country\" : \"Nicaragua\",\r\n      \"alpha2\" : \"NI\",\r\n      \"alpha3\" : \"NIC\",\r\n      \"numeric\" : 558,\r\n      \"latitude\" : 13,\r\n      \"longitude\" : -85\r\n    },\r\n{\r\n      \"country\" : \"Niger\",\r\n      \"alpha2\" : \"NE\",\r\n      \"alpha3\" : \"NER\",\r\n      \"numeric\" : 562,\r\n      \"latitude\" : 16,\r\n      \"longitude\" : 8\r\n    },\r\n{\r\n      \"country\" : \"Nigeria\",\r\n      \"alpha2\" : \"NG\",\r\n      \"alpha3\" : \"NGA\",\r\n      \"numeric\" : 566,\r\n      \"latitude\" : 10,\r\n      \"longitude\" : 8\r\n    },\r\n{\r\n      \"country\" : \"Niue\",\r\n      \"alpha2\" : \"NU\",\r\n      \"alpha3\" : \"NIU\",\r\n      \"numeric\" : 570,\r\n      \"latitude\" : -19.0333,\r\n      \"longitude\" : -169.8667\r\n    },\r\n{\r\n      \"country\" : \"Norfolk Island\",\r\n      \"alpha2\" : \"NF\",\r\n      \"alpha3\" : \"NFK\",\r\n      \"numeric\" : 574,\r\n      \"latitude\" : -29.0333,\r\n      \"longitude\" : 167.95\r\n    },\r\n{\r\n      \"country\" : \"Northern Mariana Islands\",\r\n      \"alpha2\" : \"MP\",\r\n      \"alpha3\" : \"MNP\",\r\n      \"numeric\" : 580,\r\n      \"latitude\" : 15.2,\r\n      \"longitude\" : 145.75\r\n    },\r\n{\r\n      \"country\" : \"Norway\",\r\n      \"alpha2\" : \"NO\",\r\n      \"alpha3\" : \"NOR\",\r\n      \"numeric\" : 578,\r\n      \"latitude\" : 62,\r\n      \"longitude\" : 10\r\n    },\r\n{\r\n      \"country\" : \"Oman\",\r\n      \"alpha2\" : \"OM\",\r\n      \"alpha3\" : \"OMN\",\r\n      \"numeric\" : 512,\r\n      \"latitude\" : 21,\r\n      \"longitude\" : 57\r\n    },\r\n{\r\n      \"country\" : \"Pakistan\",\r\n      \"alpha2\" : \"PK\",\r\n      \"alpha3\" : \"PAK\",\r\n      \"numeric\" : 586,\r\n      \"latitude\" : 30,\r\n      \"longitude\" : 70\r\n    },\r\n{\r\n      \"country\" : \"Palau\",\r\n      \"alpha2\" : \"PW\",\r\n      \"alpha3\" : \"PLW\",\r\n      \"numeric\" : 585,\r\n      \"latitude\" : 7.5,\r\n      \"longitude\" : 134.5\r\n    },\r\n{\r\n      \"country\" : \"Palestinian Territory, Occupied\",\r\n      \"alpha2\" : \"PS\",\r\n      \"alpha3\" : \"PSE\",\r\n      \"numeric\" : 275,\r\n      \"latitude\" : 32,\r\n      \"longitude\" : 35.25\r\n    },\r\n{\r\n      \"country\" : \"Panama\",\r\n      \"alpha2\" : \"PA\",\r\n      \"alpha3\" : \"PAN\",\r\n      \"numeric\" : 591,\r\n      \"latitude\" : 9,\r\n      \"longitude\" : -80\r\n    },\r\n{\r\n      \"country\" : \"Papua New Guinea\",\r\n      \"alpha2\" : \"PG\",\r\n      \"alpha3\" : \"PNG\",\r\n      \"numeric\" : 598,\r\n      \"latitude\" : -6,\r\n      \"longitude\" : 147\r\n    },\r\n{\r\n      \"country\" : \"Paraguay\",\r\n      \"alpha2\" : \"PY\",\r\n      \"alpha3\" : \"PRY\",\r\n      \"numeric\" : 600,\r\n      \"latitude\" : -23,\r\n      \"longitude\" : -58\r\n    },\r\n{\r\n      \"country\" : \"Peru\",\r\n      \"alpha2\" : \"PE\",\r\n      \"alpha3\" : \"PER\",\r\n      \"numeric\" : 604,\r\n      \"latitude\" : -10,\r\n      \"longitude\" : -76\r\n    },\r\n{\r\n      \"country\" : \"Philippines\",\r\n      \"alpha2\" : \"PH\",\r\n      \"alpha3\" : \"PHL\",\r\n      \"numeric\" : 608,\r\n      \"latitude\" : 13,\r\n      \"longitude\" : 122\r\n    },\r\n{\r\n      \"country\" : \"Pitcairn\",\r\n      \"alpha2\" : \"PN\",\r\n      \"alpha3\" : \"PCN\",\r\n      \"numeric\" : 612,\r\n      \"latitude\" : -24.7,\r\n      \"longitude\" : -127.4\r\n    },\r\n{\r\n      \"country\" : \"Poland\",\r\n      \"alpha2\" : \"PL\",\r\n      \"alpha3\" : \"POL\",\r\n      \"numeric\" : 616,\r\n      \"latitude\" : 52,\r\n      \"longitude\" : 20\r\n    },\r\n{\r\n      \"country\" : \"Portugal\",\r\n      \"alpha2\" : \"PT\",\r\n      \"alpha3\" : \"PRT\",\r\n      \"numeric\" : 620,\r\n      \"latitude\" : 39.5,\r\n      \"longitude\" : -8\r\n    },\r\n{\r\n      \"country\" : \"Puerto Rico\",\r\n      \"alpha2\" : \"PR\",\r\n      \"alpha3\" : \"PRI\",\r\n      \"numeric\" : 630,\r\n      \"latitude\" : 18.25,\r\n      \"longitude\" : -66.5\r\n    },\r\n{\r\n      \"country\" : \"Qatar\",\r\n      \"alpha2\" : \"QA\",\r\n      \"alpha3\" : \"QAT\",\r\n      \"numeric\" : 634,\r\n      \"latitude\" : 25.5,\r\n      \"longitude\" : 51.25\r\n    },\r\n{\r\n      \"country\" : \"Réunion\",\r\n      \"alpha2\" : \"RE\",\r\n      \"alpha3\" : \"REU\",\r\n      \"numeric\" : 638,\r\n      \"latitude\" : -21.1,\r\n      \"longitude\" : 55.6\r\n    },\r\n{\r\n      \"country\" : \"Romania\",\r\n      \"alpha2\" : \"RO\",\r\n      \"alpha3\" : \"ROU\",\r\n      \"numeric\" : 642,\r\n      \"latitude\" : 46,\r\n      \"longitude\" : 25\r\n    },\r\n{\r\n      \"country\" : \"Russian Federation\",\r\n      \"alpha2\" : \"RU\",\r\n      \"alpha3\" : \"RUS\",\r\n      \"numeric\" : 643,\r\n      \"latitude\" : 60,\r\n      \"longitude\" : 100\r\n    },\r\n{\r\n      \"country\" : \"Rwanda\",\r\n      \"alpha2\" : \"RW\",\r\n      \"alpha3\" : \"RWA\",\r\n      \"numeric\" : 646,\r\n      \"latitude\" : -2,\r\n      \"longitude\" : 30\r\n    },\r\n{\r\n      \"country\" : \"Saint Helena, Ascension and Tristan da Cunha\",\r\n      \"alpha2\" : \"SH\",\r\n      \"alpha3\" : \"SHN\",\r\n      \"numeric\" : 654,\r\n      \"latitude\" : -15.9333,\r\n      \"longitude\" : -5.7\r\n    },\r\n{\r\n      \"country\" : \"Saint Kitts and Nevis\",\r\n      \"alpha2\" : \"KN\",\r\n      \"alpha3\" : \"KNA\",\r\n      \"numeric\" : 659,\r\n      \"latitude\" : 17.3333,\r\n      \"longitude\" : -62.75\r\n    },\r\n{\r\n      \"country\" : \"Saint Lucia\",\r\n      \"alpha2\" : \"LC\",\r\n      \"alpha3\" : \"LCA\",\r\n      \"numeric\" : 662,\r\n      \"latitude\" : 13.8833,\r\n      \"longitude\" : -61.1333\r\n    },\r\n{\r\n      \"country\" : \"Saint Pierre and Miquelon\",\r\n      \"alpha2\" : \"PM\",\r\n      \"alpha3\" : \"SPM\",\r\n      \"numeric\" : 666,\r\n      \"latitude\" : 46.8333,\r\n      \"longitude\" : -56.3333\r\n    },\r\n{\r\n      \"country\" : \"Saint Vincent and the Grenadines\",\r\n      \"alpha2\" : \"VC\",\r\n      \"alpha3\" : \"VCT\",\r\n      \"numeric\" : 670,\r\n      \"latitude\" : 13.25,\r\n      \"longitude\" : -61.2\r\n    },\r\n{\r\n      \"country\" : \"Samoa\",\r\n      \"alpha2\" : \"WS\",\r\n      \"alpha3\" : \"WSM\",\r\n      \"numeric\" : 882,\r\n      \"latitude\" : -13.5833,\r\n      \"longitude\" : -172.3333\r\n    },\r\n{\r\n      \"country\" : \"San Marino\",\r\n      \"alpha2\" : \"SM\",\r\n      \"alpha3\" : \"SMR\",\r\n      \"numeric\" : 674,\r\n      \"latitude\" : 43.7667,\r\n      \"longitude\" : 12.4167\r\n    },\r\n{\r\n      \"country\" : \"Sao Tome and Principe\",\r\n      \"alpha2\" : \"ST\",\r\n      \"alpha3\" : \"STP\",\r\n      \"numeric\" : 678,\r\n      \"latitude\" : 1,\r\n      \"longitude\" : 7\r\n    },\r\n{\r\n      \"country\" : \"Saudi Arabia\",\r\n      \"alpha2\" : \"SA\",\r\n      \"alpha3\" : \"SAU\",\r\n      \"numeric\" : 682,\r\n      \"latitude\" : 25,\r\n      \"longitude\" : 45\r\n    },\r\n{\r\n      \"country\" : \"Senegal\",\r\n      \"alpha2\" : \"SN\",\r\n      \"alpha3\" : \"SEN\",\r\n      \"numeric\" : 686,\r\n      \"latitude\" : 14,\r\n      \"longitude\" : -14\r\n    },\r\n{\r\n      \"country\" : \"Serbia\",\r\n      \"alpha2\" : \"RS\",\r\n      \"alpha3\" : \"SRB\",\r\n      \"numeric\" : 688,\r\n      \"latitude\" : 44,\r\n      \"longitude\" : 21\r\n    },\r\n{\r\n      \"country\" : \"Seychelles\",\r\n      \"alpha2\" : \"SC\",\r\n      \"alpha3\" : \"SYC\",\r\n      \"numeric\" : 690,\r\n      \"latitude\" : -4.5833,\r\n      \"longitude\" : 55.6667\r\n    },\r\n{\r\n      \"country\" : \"Sierra Leone\",\r\n      \"alpha2\" : \"SL\",\r\n      \"alpha3\" : \"SLE\",\r\n      \"numeric\" : 694,\r\n      \"latitude\" : 8.5,\r\n      \"longitude\" : -11.5\r\n    },\r\n{\r\n      \"country\" : \"Singapore\",\r\n      \"alpha2\" : \"SG\",\r\n      \"alpha3\" : \"SGP\",\r\n      \"numeric\" : 702,\r\n      \"latitude\" : 1.3667,\r\n      \"longitude\" : 103.8\r\n    },\r\n{\r\n      \"country\" : \"Slovakia\",\r\n      \"alpha2\" : \"SK\",\r\n      \"alpha3\" : \"SVK\",\r\n      \"numeric\" : 703,\r\n      \"latitude\" : 48.6667,\r\n      \"longitude\" : 19.5\r\n    },\r\n{\r\n      \"country\" : \"Slovenia\",\r\n      \"alpha2\" : \"SI\",\r\n      \"alpha3\" : \"SVN\",\r\n      \"numeric\" : 705,\r\n      \"latitude\" : 46,\r\n      \"longitude\" : 15\r\n    },\r\n{\r\n      \"country\" : \"Solomon Islands\",\r\n      \"alpha2\" : \"SB\",\r\n      \"alpha3\" : \"SLB\",\r\n      \"numeric\" : 90,\r\n      \"latitude\" : -8,\r\n      \"longitude\" : 159\r\n    },\r\n{\r\n      \"country\" : \"Somalia\",\r\n      \"alpha2\" : \"SO\",\r\n      \"alpha3\" : \"SOM\",\r\n      \"numeric\" : 706,\r\n      \"latitude\" : 10,\r\n      \"longitude\" : 49\r\n    },\r\n{\r\n      \"country\" : \"South Africa\",\r\n      \"alpha2\" : \"ZA\",\r\n      \"alpha3\" : \"ZAF\",\r\n      \"numeric\" : 710,\r\n      \"latitude\" : -29,\r\n      \"longitude\" : 24\r\n    },\r\n{\r\n      \"country\" : \"South Georgia and the South Sandwich Islands\",\r\n      \"alpha2\" : \"GS\",\r\n      \"alpha3\" : \"SGS\",\r\n      \"numeric\" : 239,\r\n      \"latitude\" : -54.5,\r\n      \"longitude\" : -37\r\n    },\r\n{\r\n      \"country\" : \"Spain\",\r\n      \"alpha2\" : \"ES\",\r\n      \"alpha3\" : \"ESP\",\r\n      \"numeric\" : 724,\r\n      \"latitude\" : 40,\r\n      \"longitude\" : -4\r\n    },\r\n{\r\n      \"country\" : \"Sri Lanka\",\r\n      \"alpha2\" : \"LK\",\r\n      \"alpha3\" : \"LKA\",\r\n      \"numeric\" : 144,\r\n      \"latitude\" : 7,\r\n      \"longitude\" : 81\r\n    },\r\n{\r\n      \"country\" : \"Sudan\",\r\n      \"alpha2\" : \"SD\",\r\n      \"alpha3\" : \"SDN\",\r\n      \"numeric\" : 736,\r\n      \"latitude\" : 15,\r\n      \"longitude\" : 30\r\n    },\r\n{\r\n      \"country\" : \"Suriname\",\r\n      \"alpha2\" : \"SR\",\r\n      \"alpha3\" : \"SUR\",\r\n      \"numeric\" : 740,\r\n      \"latitude\" : 4,\r\n      \"longitude\" : -56\r\n    },\r\n{\r\n      \"country\" : \"Svalbard and Jan Mayen\",\r\n      \"alpha2\" : \"SJ\",\r\n      \"alpha3\" : \"SJM\",\r\n      \"numeric\" : 744,\r\n      \"latitude\" : 78,\r\n      \"longitude\" : 20\r\n    },\r\n{\r\n      \"country\" : \"Swaziland\",\r\n      \"alpha2\" : \"SZ\",\r\n      \"alpha3\" : \"SWZ\",\r\n      \"numeric\" : 748,\r\n      \"latitude\" : -26.5,\r\n      \"longitude\" : 31.5\r\n    },\r\n{\r\n      \"country\" : \"Sweden\",\r\n      \"alpha2\" : \"SE\",\r\n      \"alpha3\" : \"SWE\",\r\n      \"numeric\" : 752,\r\n      \"latitude\" : 62,\r\n      \"longitude\" : 15\r\n    },\r\n{\r\n      \"country\" : \"Switzerland\",\r\n      \"alpha2\" : \"CH\",\r\n      \"alpha3\" : \"CHE\",\r\n      \"numeric\" : 756,\r\n      \"latitude\" : 47,\r\n      \"longitude\" : 8\r\n    },\r\n{\r\n      \"country\" : \"Syrian Arab Republic\",\r\n      \"alpha2\" : \"SY\",\r\n      \"alpha3\" : \"SYR\",\r\n      \"numeric\" : 760,\r\n      \"latitude\" : 35,\r\n      \"longitude\" : 38\r\n    },\r\n{\r\n      \"country\" : \"Taiwan, Province of China\",\r\n      \"alpha2\" : \"TW\",\r\n      \"alpha3\" : \"TWN\",\r\n      \"numeric\" : 158,\r\n      \"latitude\" : 23.5,\r\n      \"longitude\" : 121\r\n    },\r\n{\r\n      \"country\" : \"Tajikistan\",\r\n      \"alpha2\" : \"TJ\",\r\n      \"alpha3\" : \"TJK\",\r\n      \"numeric\" : 762,\r\n      \"latitude\" : 39,\r\n      \"longitude\" : 71\r\n    },\r\n{\r\n      \"country\" : \"Tanzania, United Republic of\",\r\n      \"alpha2\" : \"TZ\",\r\n      \"alpha3\" : \"TZA\",\r\n      \"numeric\" : 834,\r\n      \"latitude\" : -6,\r\n      \"longitude\" : 35\r\n    },\r\n{\r\n      \"country\" : \"Thailand\",\r\n      \"alpha2\" : \"TH\",\r\n      \"alpha3\" : \"THA\",\r\n      \"numeric\" : 764,\r\n      \"latitude\" : 15,\r\n      \"longitude\" : 100\r\n    },\r\n{\r\n      \"country\" : \"Timor-Leste\",\r\n      \"alpha2\" : \"TL\",\r\n      \"alpha3\" : \"TLS\",\r\n      \"numeric\" : 626,\r\n      \"latitude\" : -8.55,\r\n      \"longitude\" : 125.5167\r\n    },\r\n{\r\n      \"country\" : \"Togo\",\r\n      \"alpha2\" : \"TG\",\r\n      \"alpha3\" : \"TGO\",\r\n      \"numeric\" : 768,\r\n      \"latitude\" : 8,\r\n      \"longitude\" : 1.1667\r\n    },\r\n{\r\n      \"country\" : \"Tokelau\",\r\n      \"alpha2\" : \"TK\",\r\n      \"alpha3\" : \"TKL\",\r\n      \"numeric\" : 772,\r\n      \"latitude\" : -9,\r\n      \"longitude\" : -172\r\n    },\r\n{\r\n      \"country\" : \"Tonga\",\r\n      \"alpha2\" : \"TO\",\r\n      \"alpha3\" : \"TON\",\r\n      \"numeric\" : 776,\r\n      \"latitude\" : -20,\r\n      \"longitude\" : -175\r\n    },\r\n{\r\n      \"country\" : \"Trinidad and Tobago\",\r\n      \"alpha2\" : \"TT\",\r\n      \"alpha3\" : \"TTO\",\r\n      \"numeric\" : 780,\r\n      \"latitude\" : 11,\r\n      \"longitude\" : -61\r\n    },\r\n{\r\n      \"country\" : \"Tunisia\",\r\n      \"alpha2\" : \"TN\",\r\n      \"alpha3\" : \"TUN\",\r\n      \"numeric\" : 788,\r\n      \"latitude\" : 34,\r\n      \"longitude\" : 9\r\n    },\r\n{\r\n      \"country\" : \"Turkey\",\r\n      \"alpha2\" : \"TR\",\r\n      \"alpha3\" : \"TUR\",\r\n      \"numeric\" : 792,\r\n      \"latitude\" : 39,\r\n      \"longitude\" : 35\r\n    },\r\n{\r\n      \"country\" : \"Turkmenistan\",\r\n      \"alpha2\" : \"TM\",\r\n      \"alpha3\" : \"TKM\",\r\n      \"numeric\" : 795,\r\n      \"latitude\" : 40,\r\n      \"longitude\" : 60\r\n    },\r\n{\r\n      \"country\" : \"Turks and Caicos Islands\",\r\n      \"alpha2\" : \"TC\",\r\n      \"alpha3\" : \"TCA\",\r\n      \"numeric\" : 796,\r\n      \"latitude\" : 21.75,\r\n      \"longitude\" : -71.5833\r\n    },\r\n{\r\n      \"country\" : \"Tuvalu\",\r\n      \"alpha2\" : \"TV\",\r\n      \"alpha3\" : \"TUV\",\r\n      \"numeric\" : 798,\r\n      \"latitude\" : -8,\r\n      \"longitude\" : 178\r\n    },\r\n{\r\n      \"country\" : \"Uganda\",\r\n      \"alpha2\" : \"UG\",\r\n      \"alpha3\" : \"UGA\",\r\n      \"numeric\" : 800,\r\n      \"latitude\" : 1,\r\n      \"longitude\" : 32\r\n    },\r\n{\r\n      \"country\" : \"Ukraine\",\r\n      \"alpha2\" : \"UA\",\r\n      \"alpha3\" : \"UKR\",\r\n      \"numeric\" : 804,\r\n      \"latitude\" : 49,\r\n      \"longitude\" : 32\r\n    },\r\n{\r\n      \"country\" : \"United Arab Emirates\",\r\n      \"alpha2\" : \"AE\",\r\n      \"alpha3\" : \"ARE\",\r\n      \"numeric\" : 784,\r\n      \"latitude\" : 24,\r\n      \"longitude\" : 54\r\n    },\r\n{\r\n      \"country\" : \"United Kingdom\",\r\n      \"alpha2\" : \"GB\",\r\n      \"alpha3\" : \"GBR\",\r\n      \"numeric\" : 826,\r\n      \"latitude\" : 54,\r\n      \"longitude\" : -2\r\n    },\r\n{\r\n      \"country\" : \"United States\",\r\n      \"alpha2\" : \"US\",\r\n      \"alpha3\" : \"USA\",\r\n      \"numeric\" : 840,\r\n      \"latitude\" : 38,\r\n      \"longitude\" : -97\r\n    },\r\n{\r\n      \"country\" : \"United States Minor Outlying Islands\",\r\n      \"alpha2\" : \"UM\",\r\n      \"alpha3\" : \"UMI\",\r\n      \"numeric\" : 581,\r\n      \"latitude\" : 19.2833,\r\n      \"longitude\" : 166.6\r\n    },\r\n{\r\n      \"country\" : \"Uruguay\",\r\n      \"alpha2\" : \"UY\",\r\n      \"alpha3\" : \"URY\",\r\n      \"numeric\" : 858,\r\n      \"latitude\" : -33,\r\n      \"longitude\" : -56\r\n    },\r\n{\r\n      \"country\" : \"Uzbekistan\",\r\n      \"alpha2\" : \"UZ\",\r\n      \"alpha3\" : \"UZB\",\r\n      \"numeric\" : 860,\r\n      \"latitude\" : 41,\r\n      \"longitude\" : 64\r\n    },\r\n{\r\n      \"country\" : \"Vanuatu\",\r\n      \"alpha2\" : \"VU\",\r\n      \"alpha3\" : \"VUT\",\r\n      \"numeric\" : 548,\r\n      \"latitude\" : -16,\r\n      \"longitude\" : 167\r\n    },\r\n{\r\n      \"country\" : \"Venezuela, Bolivarian Republic of\",\r\n      \"alpha2\" : \"VE\",\r\n      \"alpha3\" : \"VEN\",\r\n      \"numeric\" : 862,\r\n      \"latitude\" : 8,\r\n      \"longitude\" : -66\r\n    },\r\n{\r\n      \"country\" : \"Viet Nam\",\r\n      \"alpha2\" : \"VN\",\r\n      \"alpha3\" : \"VNM\",\r\n      \"numeric\" : 704,\r\n      \"latitude\" : 16,\r\n      \"longitude\" : 106\r\n    },\r\n{\r\n      \"country\" : \"Virgin Islands, British\",\r\n      \"alpha2\" : \"VG\",\r\n      \"alpha3\" : \"VGB\",\r\n      \"numeric\" : 92,\r\n      \"latitude\" : 18.5,\r\n      \"longitude\" : -64.5\r\n    },\r\n{\r\n      \"country\" : \"Virgin Islands, U.S.\",\r\n      \"alpha2\" : \"VI\",\r\n      \"alpha3\" : \"VIR\",\r\n      \"numeric\" : 850,\r\n      \"latitude\" : 18.3333,\r\n      \"longitude\" : -64.8333\r\n    },\r\n{\r\n      \"country\" : \"Wallis and Futuna\",\r\n      \"alpha2\" : \"WF\",\r\n      \"alpha3\" : \"WLF\",\r\n      \"numeric\" : 876,\r\n      \"latitude\" : -13.3,\r\n      \"longitude\" : -176.2\r\n    },\r\n{\r\n      \"country\" : \"Western Sahara\",\r\n      \"alpha2\" : \"EH\",\r\n      \"alpha3\" : \"ESH\",\r\n      \"numeric\" : 732,\r\n      \"latitude\" : 24.5,\r\n      \"longitude\" : -13\r\n    },\r\n{\r\n      \"country\" : \"Yemen\",\r\n      \"alpha2\" : \"YE\",\r\n      \"alpha3\" : \"YEM\",\r\n      \"numeric\" : 887,\r\n      \"latitude\" : 15,\r\n      \"longitude\" : 48\r\n    },\r\n{\r\n      \"country\" : \"Zambia\",\r\n      \"alpha2\" : \"ZM\",\r\n      \"alpha3\" : \"ZMB\",\r\n      \"numeric\" : 894,\r\n      \"latitude\" : -15,\r\n      \"longitude\" : 30\r\n    },\r\n{\r\n      \"country\" : \"Zimbabwe\",\r\n      \"alpha2\" : \"ZW\",\r\n      \"alpha3\" : \"ZWE\",\r\n      \"numeric\" : 716,\r\n      \"latitude\" : -20,\r\n      \"longitude\" : 30\r\n    },\r\n{\r\n      \"country\" : \"Afghanistan\",\r\n      \"alpha2\" : \"AF\",\r\n      \"alpha3\" : \"AFG\",\r\n      \"numeric\" : 4,\r\n      \"latitude\" : 33,\r\n      \"longitude\" : 65\r\n    }\r\n  ]\r\n}\r\n\r\n","// https://ajonp.com/courses/angularmaterial/angular-material-theming/\r\n\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class ThemeColorPickerService {\r\n\r\n    protected colorClass: BehaviorSubject<string>;\r\n    protected initialClass: string;\r\n\r\n    constructor(protected overlayContainer: OverlayContainer) {\r\n\r\n        this.initialClass = 'fathym-contrast-theme';\r\n        this.colorClass = new BehaviorSubject(this.initialClass);\r\n\r\n        const storageClass = localStorage.getItem('theme-picker');\r\n        console.log('color picker service', storageClass);\r\n        if (storageClass) {\r\n            overlayContainer.getContainerElement().classList.add(storageClass);\r\n            this.colorClass.next(storageClass);\r\n        } else {\r\n            overlayContainer.getContainerElement().classList.add(this.initialClass);\r\n        }\r\n    }\r\n\r\n    public GetColorClass(): BehaviorSubject<string> {\r\n        return this.colorClass;\r\n    }\r\n\r\n    public SetColorClass(className: string) {\r\n        this.overlayContainer.getContainerElement().classList.forEach(css => {\r\n          if (css !== 'cdk-overlay-container') {\r\n            this.overlayContainer.getContainerElement().classList.remove(css);\r\n          }\r\n        });\r\n\r\n        this.overlayContainer.getContainerElement().classList.add(className);\r\n        this.colorClass.next(className);\r\n        localStorage.setItem('theme-picker', className);\r\n    }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './lcu.api';\n\nexport {LCUInterceptor as ɵa} from './lib/api/daf/lcu.interceptor';"],"names":["signalR.HttpTransportType","signalR.HubConnectionBuilder","signalR.LogLevel","signalR.HubConnectionState","BehaviorSubject"],"mappings":"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"}