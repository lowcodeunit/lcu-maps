import { JSONSchema } from '../../../json-schema';
import { JSONSchemaItemModel } from '../../../models/json/json-schema-item.model';
/**
 * @dynamic is used because this class contains static properties
 */
/**
 * Flatten and Unflatten JSON
 *
 * Original Code Example: http://jsfiddle.net/crl/WSzec/154/
 */
export declare class JSONFlattenUnflatten {
    /**
     * Flatten a standard JSON Object
     *
     * @param json JSON object to be flattened
     *
     * @param map recursive map data
     *
     * @param prefix dotnotated path
     */
    static Flatten(json: JSON | JSONSchema, map?: {}, prefix?: string): object;
    /**
     * Flatten JSON into a map
     *
     * @param json JSON object to be flattened
     *
     * @param map recursive map data
     *
     * @param prefix dotnotated path
     */
    static FlattenMap(json: JSON | JSONSchema, map?: Map<any, any>, prefix?: string): Map<string, string>;
    /**
     * Flatten JSON into a map
     *
     * @param json JSON object to be flattened
     *
     * @param map recursive map data
     *
     * @param prefix dotnotated path
     */
    static FlattenMapTest(json: JSON | JSONSchema, map?: Map<any, any>, prefix?: string): Map<string, string>;
    /**
     * Flatten JSON into a map
     *
     * @param json JSON object to be flattened
     *
     * @param map recursive map data
     *
     * @param prefix dotnotated path
     */
    static FlattenMapJSONSchemaItem(json: JSON | JSONSchema, map?: Map<any, any>, prefix?: string): Map<string, JSONSchemaItemModel>;
    /**
     * Unflatten an already flatten JSON object
     *
     * @param map object to unflatten
     */
    static Unflatten(map: object): object;
    /**
     * Unflatten map data
     *
     * @param map map data
     */
    static UnflattenMap(map: any): object;
}
