"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var logger_1 = require("../../logging/logger");
var BaseCommandService_1 = require("./BaseCommandService");
var chokidar_1 = __importDefault(require("chokidar"));
var request_1 = __importDefault(require("request"));
var fs_extra_1 = require("fs-extra");
var ServeCommandService = /** @class */ (function (_super) {
    __extends(ServeCommandService, _super);
    //  Fields
    //  Properties
    //  Constructors
    function ServeCommandService() {
        return _super.call(this) || this;
    }
    //  API Methods
    ServeCommandService.prototype.Setup = function (program) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, program
                        .command('serve')
                        .description('Serve an LCU app into a dev-stream.')
                        .option('-p|--project <project>', 'The project to serve.')
                        .option('-h|--host <host>', 'The host to serve to.')
                        .option('-a|--app <app>', 'The app path to serve to (must match an LCU configured dev-stream app).')
                        .action(function (options) { return __awaiter(_this, void 0, void 0, function () {
                        var context, angularJson, projects, _a, _b, _c, ora, outputPath, watcher;
                        var _this = this;
                        return __generator(this, function (_d) {
                            switch (_d.label) {
                                case 0: return [4 /*yield*/, this.isLcuInitialized()];
                                case 1:
                                    if (!!(_d.sent())) return [3 /*break*/, 2];
                                    this.establishSectionHeader('LCU must be Initialized', 'yellow');
                                    this.establishNextSteps(['Initialize the LCU:', 'lcu init']);
                                    return [3 /*break*/, 7];
                                case 2:
                                    this.establishSectionHeader('Serving');
                                    context = {
                                        project: options.project,
                                        host: options.host,
                                        app: options.app
                                    };
                                    return [4 /*yield*/, this.loadJSON('angular.json')];
                                case 3:
                                    angularJson = _d.sent();
                                    projects = Object.keys(angularJson.projects);
                                    _a = context;
                                    return [4 /*yield*/, this.ensureInquiredOptions(context.project, "project", projects)];
                                case 4:
                                    _a.project = _d.sent();
                                    _b = context;
                                    return [4 /*yield*/, this.ensureInquired(context.host, "host")];
                                case 5:
                                    _b.host = _d.sent();
                                    _c = context;
                                    return [4 /*yield*/, this.ensureInquired(context.app, "application")];
                                case 6:
                                    _c.app = _d.sent();
                                    try {
                                        ora = this.Ora.start("Serving the project " + context.project);
                                        outputPath = angularJson.projects[context.project].architect.build.options.outputPath;
                                        watcher = chokidar_1.default.watch(outputPath, { persistent: true });
                                        watcher
                                            .on('add', function (path) {
                                            _this.processFileChange(path, context.host, context.app, outputPath);
                                        })
                                            .on('change', function (path) {
                                            _this.processFileChange(path, context.host, context.app, outputPath);
                                        })
                                            .on('unlink', function (path) {
                                            _this.processFileChange(path, context.host, context.app, outputPath);
                                        })
                                            .on('error', function (error) {
                                            console.error('Error happened', error);
                                        });
                                        // await this.processCommand([`ng build ${context.project} --watch`], context);
                                        ora.succeed('Completed serving of the project');
                                    }
                                    catch (err) {
                                        this.Ora.fail("Issue updating LCU");
                                        console.log(err);
                                        process.exit(1);
                                    }
                                    _d.label = 7;
                                case 7: return [2 /*return*/];
                            }
                        });
                    }); })];
            });
        });
    };
    //  Helpers
    ServeCommandService.prototype.processFileChange = function (filePath, host, app, outputPath, shouldDelete) {
        if (shouldDelete === void 0) { shouldDelete = false; }
        if (filePath.startsWith('\\'))
            filePath = filePath.substring(1);
        logger_1.Logger.Basic("Processing file change for " + filePath + " to " + host + app + " as " + (!shouldDelete ? 'upload' : 'delete'));
        if (host.indexOf('://') < 0)
            host = "http://" + host;
        var url = "" + host + app;
        var dsFilePath = filePath.replace(outputPath.replace("/", "\\"), '');
        if (dsFilePath.startsWith('\\'))
            dsFilePath = dsFilePath.substring(1);
        if (!shouldDelete) {
            var req = request_1.default.post({
                url: url,
                headers: {
                    'f-dev-stream': 'future-auth-key??',
                    'f-dev-stream-file-path': dsFilePath
                }
            }, function (err, resp, body) {
                if (err) {
                    logger_1.Logger.Basic('Error!' + err);
                }
                else {
                    logger_1.Logger.Basic('URL: ' + body);
                }
            });
            var form = req.form();
            form.append('file', fs_extra_1.createReadStream(filePath));
        }
        else {
            url += "?deletePath=" + filePath;
            var req = request_1.default.delete({
                url: url,
                headers: {
                    'f-dev-stream': 'future-auth-key??',
                    'f-dev-stream-file-path': dsFilePath
                }
            }, function (err, resp, body) {
                if (err) {
                    logger_1.Logger.Basic('Error!');
                }
                else {
                    logger_1.Logger.Basic('URL: ' + body);
                }
            });
        }
    };
    return ServeCommandService;
}(BaseCommandService_1.BaseCommandService));
exports.ServeCommandService = ServeCommandService;
