"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("@schematics/angular/utility/config");
const schematics_1 = require("@angular-devkit/schematics");
function testing(options) {
    return (host, context) => {
        setupOptions(host, options);
        const workspace = config_1.getWorkspace(host);
        context.logger.info(`OPTIONS: ${JSON.stringify(options)}...`);
        return schematics_1.chain([
            schematics_1.branchAndMerge(schematics_1.chain([
                schematics_1.externalSchematic('@briebug/cypress-schematic', 'ng-add', {
                    addCypressTestScripts: true,
                }),
                manageBuildScripts(options),
            ])),
        ]);
    };
}
exports.testing = testing;
function manageBuildScripts(options) {
    return (host) => {
        var packageFile = host.get('package.json');
        var packageJson = packageFile ? JSON.parse(packageFile.content.toString('utf8')) : {};
        var port = /--port=([0-9].*)/.exec(packageJson.scripts['start']) || 4200;
        packageJson.scripts['e2e'] = `start-server-and-test start ${port} cy:run`;
        var curDeploy = packageJson.scripts['deploy'];
        packageJson.scripts['deploy'] = ['npm run e2e', curDeploy ? '&&' : '', curDeploy].join(' ');
        packageJson.scripts['test'] = 'start-server-and-test start ${port} cy:open';
        host.overwrite('package.json', JSON.stringify(packageJson, null, '\t'));
        return host;
    };
}
exports.manageBuildScripts = manageBuildScripts;
function setupOptions(host, options) {
    var lcuFile = host.get('lcu.json');
    var lcuJson = lcuFile ? JSON.parse(lcuFile.content.toString('utf8')) : {};
    const workspace = config_1.getWorkspace(host);
    options.scope = lcuJson.templates.scope;
    options.workspace = lcuJson.templates.workspace;
    options.project = options.project
        ? options.project
        : workspace.defaultProject
            ? workspace.defaultProject
            : Object.keys(workspace.projects)[0];
    options.testPlatform = options.testPlatform || 'Cypress.io';
    return host;
}
//# sourceMappingURL=index.js.map