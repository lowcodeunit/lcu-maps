import { Tree } from "@angular-devkit/schematics";
import { JsonAstArray, JsonAstNode, JsonAstObject, JsonValue, Path } from "@angular-devkit/core";
import { UpdateRecorder } from "@angular-devkit/schematics";
import { ModuleOptions } from "@schematics/angular/utility/find-module";
export declare enum NodeDependencyType {
    Default = "dependencies",
    Dev = "devDependencies",
    Peer = "peerDependencies",
    Optional = "optionalDependencies"
}
export interface NodeDependency {
    type: NodeDependencyType;
    name: string;
    version: string;
    overwrite?: boolean;
}
export interface NodeKeyValue {
    key: string;
    value: string;
}
export declare function addIntoPackageJson(host: Tree, nodeName: string, kvp: NodeKeyValue): Tree;
export declare function addScriptIntoPackageJson(host: Tree, script: NodeKeyValue): Tree;
export declare function adjustValueInPackageFile(host: Tree, key: string, name: string, packageRoot?: Path): Tree;
export declare function removeFilesFromRoot(host: Tree, root: Path, files: string[]): void;
export declare function addScriptsToPackageFile(host: Tree, scripts: any[]): import("@angular-devkit/schematics/src/tree/interface").Tree;
export declare function addPackageJsonDependency(tree: Tree, dependency: NodeDependency): void;
export declare function appendPropertyInAstObject(recorder: UpdateRecorder, node: JsonAstObject, propertyName: string, value: JsonValue, indent: number): void;
export declare function insertPropertyInAstObjectInOrder(recorder: UpdateRecorder, node: JsonAstObject, propertyName: string, value: JsonValue, indent: number): void;
export declare function appendValueInAstArray(recorder: UpdateRecorder, node: JsonAstArray, value: JsonValue, indent?: number): void;
export declare function findPropertyInAstObject(node: JsonAstObject, propertyName: string): JsonAstNode | null;
export declare function findProjectRoot(host: Tree, options: ModuleOptions | any): string;
