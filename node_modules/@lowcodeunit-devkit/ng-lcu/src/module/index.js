"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("@schematics/angular/utility/config");
const schematics_1 = require("@angular-devkit/schematics");
const core_1 = require("@angular-devkit/core");
function module(options) {
    return (host, context) => {
        context.logger.info(`Starting module...`);
        setupOptions(host, options);
        const workspace = config_1.getWorkspace(host);
        const project = workspace.projects[options.project];
        const targetPath = core_1.normalize(project.root + '/src/' + options.path);
        let filePath = './files';
        if (options.initWith === 'app') {
            filePath += '/app';
        }
        else {
            filePath += '/component';
        }
        const solutionSource = schematics_1.apply(schematics_1.url(filePath), [
            schematics_1.template(Object.assign(Object.assign({}, core_1.strings), options)),
            schematics_1.move(targetPath)
        ]);
        return schematics_1.mergeWith(solutionSource, schematics_1.MergeStrategy.Overwrite);
    };
}
exports.module = module;
function setupOptions(host, options) {
    var lcuFile = host.get('lcu.json');
    var lcuJson = lcuFile ? JSON.parse(lcuFile.content.toString('utf8')) : {};
    const workspace = config_1.getWorkspace(host);
    options.scope = lcuJson.templates.scope;
    options.workspace = lcuJson.templates.workspace;
    options.project = options.project
        ? options.project
        : workspace.defaultProject
            ? workspace.defaultProject
            : Object.keys(workspace.projects)[0];
    options.path = options.path || 'lib';
    options.export = options.export || 'src/lcu.api.ts';
    options.name = options.name || 'solution';
    options.spec = options.spec || false;
    return host;
}
//# sourceMappingURL=index.js.map