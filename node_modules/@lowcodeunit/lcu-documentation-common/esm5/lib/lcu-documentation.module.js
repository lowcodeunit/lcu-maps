import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FathymSharedModule, MaterialModule } from '@lcu/common';
import { DocsService } from './services/docs.service';
import { LcuDocsComponent, markedOptionsFactory } from './controls/docs/docs.component';
import { HttpClientModule, HttpClient } from '@angular/common/http';
import { MarkdownModule, MarkedOptions } from 'ngx-markdown';
var ɵ0 = markedOptionsFactory;
var LcuDocumentationModule = /** @class */ (function () {
    function LcuDocumentationModule() {
    }
    LcuDocumentationModule_1 = LcuDocumentationModule;
    LcuDocumentationModule.forRoot = function () {
        return {
            ngModule: LcuDocumentationModule_1,
            providers: [DocsService]
        };
    };
    var LcuDocumentationModule_1;
    LcuDocumentationModule = LcuDocumentationModule_1 = __decorate([
        NgModule({
            declarations: [LcuDocsComponent],
            imports: [
                FathymSharedModule,
                FormsModule,
                ReactiveFormsModule,
                FlexLayoutModule,
                MaterialModule,
                HttpClientModule,
                MarkdownModule.forRoot({
                    loader: HttpClient,
                    markedOptions: {
                        provide: MarkedOptions,
                        useFactory: ɵ0
                    }
                })
            ],
            exports: [LcuDocsComponent],
            entryComponents: []
        })
    ], LcuDocumentationModule);
    return LcuDocumentationModule;
}());
export { LcuDocumentationModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGN1LWRvY3VtZW50YXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxvd2NvZGV1bml0L2xjdS1kb2N1bWVudGF0aW9uLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9sY3UtZG9jdW1lbnRhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsTUFBTSxjQUFjLENBQUM7U0FlekMsb0JBQW9CO0FBT3hDO0lBQUE7SUFPQSxDQUFDOytCQVBZLHNCQUFzQjtJQUMxQiw4QkFBTyxHQUFkO1FBQ0UsT0FBTztZQUNMLFFBQVEsRUFBRSx3QkFBc0I7WUFDaEMsU0FBUyxFQUFFLENBQUMsV0FBVyxDQUFDO1NBQ3pCLENBQUM7SUFDSixDQUFDOztJQU5VLHNCQUFzQjtRQXBCbEMsUUFBUSxDQUFDO1lBQ1IsWUFBWSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7WUFDaEMsT0FBTyxFQUFFO2dCQUNQLGtCQUFrQjtnQkFDbEIsV0FBVztnQkFDWCxtQkFBbUI7Z0JBQ25CLGdCQUFnQjtnQkFDaEIsY0FBYztnQkFDZCxnQkFBZ0I7Z0JBQ2hCLGNBQWMsQ0FBQyxPQUFPLENBQUM7b0JBQ3JCLE1BQU0sRUFBRSxVQUFVO29CQUNsQixhQUFhLEVBQUU7d0JBQ2IsT0FBTyxFQUFFLGFBQWE7d0JBQ3RCLFVBQVUsSUFBc0I7cUJBQ2pDO2lCQUNGLENBQUM7YUFDSDtZQUNELE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO1lBQzNCLGVBQWUsRUFBRSxFQUFFO1NBQ3BCLENBQUM7T0FDVyxzQkFBc0IsQ0FPbEM7SUFBRCw2QkFBQztDQUFBLEFBUEQsSUFPQztTQVBZLHNCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQnO1xyXG5pbXBvcnQgeyBGYXRoeW1TaGFyZWRNb2R1bGUsIE1hdGVyaWFsTW9kdWxlIH0gZnJvbSAnQGxjdS9jb21tb24nO1xyXG5pbXBvcnQgeyBEb2NzU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvZG9jcy5zZXJ2aWNlJztcclxuaW1wb3J0IHsgTGN1RG9jc0NvbXBvbmVudCwgbWFya2VkT3B0aW9uc0ZhY3RvcnkgfSBmcm9tICcuL2NvbnRyb2xzL2RvY3MvZG9jcy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlLCBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBNYXJrZG93bk1vZHVsZSwgTWFya2VkT3B0aW9ucyB9IGZyb20gJ25neC1tYXJrZG93bic7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW0xjdURvY3NDb21wb25lbnRdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIEZhdGh5bVNoYXJlZE1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuICAgIEZsZXhMYXlvdXRNb2R1bGUsXHJcbiAgICBNYXRlcmlhbE1vZHVsZSxcclxuICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICBNYXJrZG93bk1vZHVsZS5mb3JSb290KHtcclxuICAgICAgbG9hZGVyOiBIdHRwQ2xpZW50LFxyXG4gICAgICBtYXJrZWRPcHRpb25zOiB7XHJcbiAgICAgICAgcHJvdmlkZTogTWFya2VkT3B0aW9ucyxcclxuICAgICAgICB1c2VGYWN0b3J5OiBtYXJrZWRPcHRpb25zRmFjdG9yeVxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW0xjdURvY3NDb21wb25lbnRdLFxyXG4gIGVudHJ5Q29tcG9uZW50czogW11cclxufSlcclxuZXhwb3J0IGNsYXNzIExjdURvY3VtZW50YXRpb25Nb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TGN1RG9jdW1lbnRhdGlvbk1vZHVsZT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbmdNb2R1bGU6IExjdURvY3VtZW50YXRpb25Nb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW0RvY3NTZXJ2aWNlXVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19