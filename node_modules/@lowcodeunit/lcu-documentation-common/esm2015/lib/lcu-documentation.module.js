var LcuDocumentationModule_1;
import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FathymSharedModule, MaterialModule } from '@lcu/common';
import { DocsService } from './services/docs.service';
import { LcuDocsComponent, markedOptionsFactory } from './controls/docs/docs.component';
import { HttpClientModule, HttpClient } from '@angular/common/http';
import { MarkdownModule, MarkedOptions } from 'ngx-markdown';
const ɵ0 = markedOptionsFactory;
let LcuDocumentationModule = LcuDocumentationModule_1 = class LcuDocumentationModule {
    static forRoot() {
        return {
            ngModule: LcuDocumentationModule_1,
            providers: [DocsService]
        };
    }
};
LcuDocumentationModule = LcuDocumentationModule_1 = __decorate([
    NgModule({
        declarations: [LcuDocsComponent],
        imports: [
            FathymSharedModule,
            FormsModule,
            ReactiveFormsModule,
            FlexLayoutModule,
            MaterialModule,
            HttpClientModule,
            MarkdownModule.forRoot({
                loader: HttpClient,
                markedOptions: {
                    provide: MarkedOptions,
                    useFactory: ɵ0
                }
            })
        ],
        exports: [LcuDocsComponent],
        entryComponents: []
    })
], LcuDocumentationModule);
export { LcuDocumentationModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGN1LWRvY3VtZW50YXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGxvd2NvZGV1bml0L2xjdS1kb2N1bWVudGF0aW9uLWNvbW1vbi8iLCJzb3VyY2VzIjpbImxpYi9sY3UtZG9jdW1lbnRhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGNBQWMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNqRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG9CQUFvQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDeEYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUFFLE1BQU0sY0FBYyxDQUFDO1dBZXpDLG9CQUFvQjtBQU94QyxJQUFhLHNCQUFzQiw4QkFBbkMsTUFBYSxzQkFBc0I7SUFDakMsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLHdCQUFzQjtZQUNoQyxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUM7U0FDekIsQ0FBQztJQUNKLENBQUM7Q0FDRixDQUFBO0FBUFksc0JBQXNCO0lBcEJsQyxRQUFRLENBQUM7UUFDUixZQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNoQyxPQUFPLEVBQUU7WUFDUCxrQkFBa0I7WUFDbEIsV0FBVztZQUNYLG1CQUFtQjtZQUNuQixnQkFBZ0I7WUFDaEIsY0FBYztZQUNkLGdCQUFnQjtZQUNoQixjQUFjLENBQUMsT0FBTyxDQUFDO2dCQUNyQixNQUFNLEVBQUUsVUFBVTtnQkFDbEIsYUFBYSxFQUFFO29CQUNiLE9BQU8sRUFBRSxhQUFhO29CQUN0QixVQUFVLElBQXNCO2lCQUNqQzthQUNGLENBQUM7U0FDSDtRQUNELE9BQU8sRUFBRSxDQUFDLGdCQUFnQixDQUFDO1FBQzNCLGVBQWUsRUFBRSxFQUFFO0tBQ3BCLENBQUM7R0FDVyxzQkFBc0IsQ0FPbEM7U0FQWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgRmxleExheW91dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0JztcclxuaW1wb3J0IHsgRmF0aHltU2hhcmVkTW9kdWxlLCBNYXRlcmlhbE1vZHVsZSB9IGZyb20gJ0BsY3UvY29tbW9uJztcclxuaW1wb3J0IHsgRG9jc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2RvY3Muc2VydmljZSc7XHJcbmltcG9ydCB7IExjdURvY3NDb21wb25lbnQsIG1hcmtlZE9wdGlvbnNGYWN0b3J5IH0gZnJvbSAnLi9jb250cm9scy9kb2NzL2RvY3MuY29tcG9uZW50JztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSwgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgTWFya2Rvd25Nb2R1bGUsIE1hcmtlZE9wdGlvbnMgfSBmcm9tICduZ3gtbWFya2Rvd24nO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtMY3VEb2NzQ29tcG9uZW50XSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBGYXRoeW1TaGFyZWRNb2R1bGUsXHJcbiAgICBGb3Jtc01vZHVsZSxcclxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXHJcbiAgICBGbGV4TGF5b3V0TW9kdWxlLFxyXG4gICAgTWF0ZXJpYWxNb2R1bGUsXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxyXG4gICAgTWFya2Rvd25Nb2R1bGUuZm9yUm9vdCh7XHJcbiAgICAgIGxvYWRlcjogSHR0cENsaWVudCxcclxuICAgICAgbWFya2VkT3B0aW9uczoge1xyXG4gICAgICAgIHByb3ZpZGU6IE1hcmtlZE9wdGlvbnMsXHJcbiAgICAgICAgdXNlRmFjdG9yeTogbWFya2VkT3B0aW9uc0ZhY3RvcnlcclxuICAgICAgfVxyXG4gICAgfSlcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtMY3VEb2NzQ29tcG9uZW50XSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMY3VEb2N1bWVudGF0aW9uTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPExjdURvY3VtZW50YXRpb25Nb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBMY3VEb2N1bWVudGF0aW9uTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtEb2NzU2VydmljZV1cclxuICAgIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==